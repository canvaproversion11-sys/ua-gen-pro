"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendors-node_modules_next_dist_client_components_react-dev-overlay_internal_c";
exports.ids = ["vendors-node_modules_next_dist_client_components_react-dev-overlay_internal_c"];
exports.modules = {

/***/ 3742:
/*!*****************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/container/BuildError.js ***!
  \*****************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    BuildError: function() {\n        return BuildError;\n    },\n    styles: function() {\n        return styles;\n    }\n});\nconst _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ 6870);\nconst _tagged_template_literal_loose = __webpack_require__(/*! @swc/helpers/_/_tagged_template_literal_loose */ 7614);\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ 7247);\nconst _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! react */ 8964));\nconst _Dialog = __webpack_require__(/*! ../components/Dialog */ 893);\nconst _Overlay = __webpack_require__(/*! ../components/Overlay */ 6740);\nconst _Terminal = __webpack_require__(/*! ../components/Terminal */ 2984);\nconst _VersionStalenessInfo = __webpack_require__(/*! ../components/VersionStalenessInfo */ 6422);\nconst _nooptemplate = __webpack_require__(/*! ../helpers/noop-template */ 2037);\nfunction _templateObject() {\n    const data = _tagged_template_literal_loose._([\n        \"\\n  .nextjs-container-errors-header > h1 {\\n    font-size: var(--size-font-big);\\n    line-height: var(--size-font-bigger);\\n    font-weight: bold;\\n    margin: var(--size-gap-double) 0;\\n  }\\n  .nextjs-container-errors-header p {\\n    font-size: var(--size-font-small);\\n    line-height: var(--size-font-big);\\n    white-space: pre-wrap;\\n  }\\n  .nextjs-container-errors-body footer {\\n    margin-top: var(--size-gap);\\n  }\\n  .nextjs-container-errors-body footer p {\\n    margin: 0;\\n  }\\n\\n  .nextjs-container-errors-body small {\\n    color: var(--color-font);\\n  }\\n\"\n    ]);\n    _templateObject = function() {\n        return data;\n    };\n    return data;\n}\nconst BuildError = function BuildError(param) {\n    let { message, versionInfo } = param;\n    const noop = _react.useCallback(()=>{}, []);\n    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_Overlay.Overlay, {\n        fixed: true,\n        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Dialog.Dialog, {\n            type: \"error\",\n            \"aria-labelledby\": \"nextjs__container_error_label\",\n            \"aria-describedby\": \"nextjs__container_error_desc\",\n            onClose: noop,\n            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_Dialog.DialogContent, {\n                children: [\n                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_Dialog.DialogHeader, {\n                        className: \"nextjs-container-errors-header\",\n                        children: [\n                            /*#__PURE__*/ (0, _jsxruntime.jsx)(\"h1\", {\n                                id: \"nextjs__container_errors_label\",\n                                children: \"Build Error\"\n                            }),\n                            /*#__PURE__*/ (0, _jsxruntime.jsx)(\"p\", {\n                                id: \"nextjs__container_errors_desc\",\n                                className: \"nextjs__container_errors_desc\",\n                                children: \"Failed to compile\"\n                            }),\n                            versionInfo ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_VersionStalenessInfo.VersionStalenessInfo, {\n                                ...versionInfo\n                            }) : null\n                        ]\n                    }),\n                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_Dialog.DialogBody, {\n                        className: \"nextjs-container-errors-body\",\n                        children: [\n                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_Terminal.Terminal, {\n                                content: message\n                            }),\n                            /*#__PURE__*/ (0, _jsxruntime.jsx)(\"footer\", {\n                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(\"p\", {\n                                    id: \"nextjs__container_build_error_desc\",\n                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(\"small\", {\n                                        children: \"This error occurred during the build process and can only be dismissed by fixing the error.\"\n                                    })\n                                })\n                            })\n                        ]\n                    })\n                ]\n            })\n        })\n    });\n};\nconst styles = (0, _nooptemplate.noop)(_templateObject());\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=BuildError.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3742\n");

/***/ }),

/***/ 5948:
/*!*************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/container/Errors.js ***!
  \*************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    Errors: function() {\n        return Errors;\n    },\n    styles: function() {\n        return styles;\n    }\n});\nconst _tagged_template_literal_loose = __webpack_require__(/*! @swc/helpers/_/_tagged_template_literal_loose */ 7614);\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ 7247);\nconst _react = __webpack_require__(/*! react */ 8964);\nconst _shared = __webpack_require__(/*! ../../shared */ 5745);\nconst _Dialog = __webpack_require__(/*! ../components/Dialog */ 893);\nconst _LeftRightDialogHeader = __webpack_require__(/*! ../components/LeftRightDialogHeader */ 1620);\nconst _Overlay = __webpack_require__(/*! ../components/Overlay */ 6740);\nconst _Toast = __webpack_require__(/*! ../components/Toast */ 4998);\nconst _getErrorByType = __webpack_require__(/*! ../helpers/getErrorByType */ 8622);\nconst _nooptemplate = __webpack_require__(/*! ../helpers/noop-template */ 2037);\nconst _CloseIcon = __webpack_require__(/*! ../icons/CloseIcon */ 3812);\nconst _RuntimeError = __webpack_require__(/*! ./RuntimeError */ 2717);\nconst _VersionStalenessInfo = __webpack_require__(/*! ../components/VersionStalenessInfo */ 6422);\nconst _errorsource = __webpack_require__(/*! ../../../../../shared/lib/error-source */ 2616);\nconst _hotlinkedtext = __webpack_require__(/*! ../components/hot-linked-text */ 8745);\nconst _componentstackpseudohtml = __webpack_require__(/*! ./RuntimeError/component-stack-pseudo-html */ 7267);\nconst _hydrationerrorinfo = __webpack_require__(/*! ../helpers/hydration-error-info */ 2216);\nfunction _templateObject() {\n    const data = _tagged_template_literal_loose._([\n        \"\\n  .nextjs-container-errors-header > h1 {\\n    font-size: var(--size-font-big);\\n    line-height: var(--size-font-bigger);\\n    font-weight: bold;\\n    margin: calc(var(--size-gap-double) * 1.5) 0;\\n    color: var(--color-title-h1);\\n  }\\n  .nextjs-container-errors-header small {\\n    font-size: var(--size-font-small);\\n    color: var(--color-accents-1);\\n    margin-left: var(--size-gap-double);\\n  }\\n  .nextjs-container-errors-header small > span {\\n    font-family: var(--font-stack-monospace);\\n  }\\n  .nextjs-container-errors-header p {\\n    font-size: var(--size-font-small);\\n    line-height: var(--size-font-big);\\n    white-space: pre-wrap;\\n  }\\n  .nextjs__container_errors_desc {\\n    font-family: var(--font-stack-monospace);\\n    padding: var(--size-gap) var(--size-gap-double);\\n    border-left: 2px solid var(--color-text-color-red-1);\\n    margin-top: var(--size-gap);\\n    font-weight: bold;\\n    color: var(--color-text-color-red-1);\\n    background-color: var(--color-text-background-red-1);\\n  }\\n  p.nextjs__container_errors__notes {\\n    margin: var(--size-gap-double) auto;\\n    color: var(--color-stack-notes);\\n    font-weight: 600;\\n    font-size: 15px;\\n  }\\n  .nextjs-container-errors-header > div > small {\\n    margin: 0;\\n    margin-top: var(--size-gap-half);\\n  }\\n  .nextjs-container-errors-header > p > a {\\n    color: inherit;\\n    font-weight: bold;\\n  }\\n  .nextjs-container-errors-body > h2:not(:first-child) {\\n    margin-top: calc(var(--size-gap-double) + var(--size-gap));\\n  }\\n  .nextjs-container-errors-body > h2 {\\n    color: var(--color-title-color);\\n    margin-bottom: var(--size-gap);\\n    font-size: var(--size-font-big);\\n  }\\n  .nextjs__container_errors__component-stack {\\n    padding: 12px 32px;\\n    color: var(--color-ansi-fg);\\n    background: var(--color-ansi-bg);\\n  }\\n  .nextjs-toast-errors-parent {\\n    cursor: pointer;\\n    transition: transform 0.2s ease;\\n  }\\n  .nextjs-toast-errors-parent:hover {\\n    transform: scale(1.1);\\n  }\\n  .nextjs-toast-errors {\\n    display: flex;\\n    align-items: center;\\n    justify-content: flex-start;\\n  }\\n  .nextjs-toast-errors > svg {\\n    margin-right: var(--size-gap);\\n  }\\n  .nextjs-toast-errors-hide-button {\\n    margin-left: var(--size-gap-triple);\\n    border: none;\\n    background: none;\\n    color: var(--color-ansi-bright-white);\\n    padding: 0;\\n    transition: opacity 0.25s ease;\\n    opacity: 0.7;\\n  }\\n  .nextjs-toast-errors-hide-button:hover {\\n    opacity: 1;\\n  }\\n\"\n    ]);\n    _templateObject = function() {\n        return data;\n    };\n    return data;\n}\nfunction isNextjsLink(text) {\n    return text.startsWith(\"https://nextjs.org\");\n}\nfunction getErrorSignature(ev) {\n    const { event } = ev;\n    switch(event.type){\n        case _shared.ACTION_UNHANDLED_ERROR:\n        case _shared.ACTION_UNHANDLED_REJECTION:\n            {\n                return event.reason.name + \"::\" + event.reason.message + \"::\" + event.reason.stack;\n            }\n        default:\n            {}\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const _ = event;\n    return \"\";\n}\nfunction Errors(param) {\n    let { isAppDir, errors, initialDisplayState, versionInfo } = param;\n    var _activeError_componentStackFrames;\n    const [lookups, setLookups] = (0, _react.useState)({});\n    const [readyErrors, nextError] = (0, _react.useMemo)(()=>{\n        let ready = [];\n        let next = null;\n        // Ensure errors are displayed in the order they occurred in:\n        for(let idx = 0; idx < errors.length; ++idx){\n            const e = errors[idx];\n            const { id } = e;\n            if (id in lookups) {\n                ready.push(lookups[id]);\n                continue;\n            }\n            // Check for duplicate errors\n            if (idx > 0) {\n                const prev = errors[idx - 1];\n                if (getErrorSignature(prev) === getErrorSignature(e)) {\n                    continue;\n                }\n            }\n            next = e;\n            break;\n        }\n        return [\n            ready,\n            next\n        ];\n    }, [\n        errors,\n        lookups\n    ]);\n    const isLoading = (0, _react.useMemo)(()=>{\n        return readyErrors.length < 1 && Boolean(errors.length);\n    }, [\n        errors.length,\n        readyErrors.length\n    ]);\n    (0, _react.useEffect)(()=>{\n        if (nextError == null) {\n            return;\n        }\n        let mounted = true;\n        (0, _getErrorByType.getErrorByType)(nextError, isAppDir).then((resolved)=>{\n            // We don't care if the desired error changed while we were resolving,\n            // thus we're not tracking it using a ref. Once the work has been done,\n            // we'll store it.\n            if (mounted) {\n                setLookups((m)=>({\n                        ...m,\n                        [resolved.id]: resolved\n                    }));\n            }\n        }, ()=>{\n        // TODO: handle this, though an edge case\n        });\n        return ()=>{\n            mounted = false;\n        };\n    }, [\n        nextError,\n        isAppDir\n    ]);\n    const [displayState, setDisplayState] = (0, _react.useState)(initialDisplayState);\n    const [activeIdx, setActiveIndex] = (0, _react.useState)(0);\n    const previous = (0, _react.useCallback)(()=>setActiveIndex((v)=>Math.max(0, v - 1)), []);\n    const next = (0, _react.useCallback)(()=>setActiveIndex((v)=>Math.max(0, Math.min(readyErrors.length - 1, v + 1))), [\n        readyErrors.length\n    ]);\n    const activeError = (0, _react.useMemo)(()=>{\n        var _readyErrors_activeIdx;\n        return (_readyErrors_activeIdx = readyErrors[activeIdx]) != null ? _readyErrors_activeIdx : null;\n    }, [\n        activeIdx,\n        readyErrors\n    ]);\n    // Reset component state when there are no errors to be displayed.\n    // This should never happen, but lets handle it.\n    (0, _react.useEffect)(()=>{\n        if (errors.length < 1) {\n            setLookups({});\n            setDisplayState(\"hidden\");\n            setActiveIndex(0);\n        }\n    }, [\n        errors.length\n    ]);\n    const minimize = (0, _react.useCallback)(()=>setDisplayState(\"minimized\"), []);\n    const hide = (0, _react.useCallback)(()=>setDisplayState(\"hidden\"), []);\n    const fullscreen = (0, _react.useCallback)(()=>setDisplayState(\"fullscreen\"), []);\n    // This component shouldn't be rendered with no errors, but if it is, let's\n    // handle it gracefully by rendering nothing.\n    if (errors.length < 1 || activeError == null) {\n        return null;\n    }\n    if (isLoading) {\n        // TODO: better loading state\n        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_Overlay.Overlay, {});\n    }\n    if (displayState === \"hidden\") {\n        return null;\n    }\n    if (displayState === \"minimized\") {\n        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_Toast.Toast, {\n            className: \"nextjs-toast-errors-parent\",\n            onClick: fullscreen,\n            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(\"div\", {\n                className: \"nextjs-toast-errors\",\n                children: [\n                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(\"svg\", {\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        width: \"24\",\n                        height: \"24\",\n                        viewBox: \"0 0 24 24\",\n                        fill: \"none\",\n                        stroke: \"currentColor\",\n                        strokeWidth: \"2\",\n                        strokeLinecap: \"round\",\n                        strokeLinejoin: \"round\",\n                        children: [\n                            /*#__PURE__*/ (0, _jsxruntime.jsx)(\"circle\", {\n                                cx: \"12\",\n                                cy: \"12\",\n                                r: \"10\"\n                            }),\n                            /*#__PURE__*/ (0, _jsxruntime.jsx)(\"line\", {\n                                x1: \"12\",\n                                y1: \"8\",\n                                x2: \"12\",\n                                y2: \"12\"\n                            }),\n                            /*#__PURE__*/ (0, _jsxruntime.jsx)(\"line\", {\n                                x1: \"12\",\n                                y1: \"16\",\n                                x2: \"12.01\",\n                                y2: \"16\"\n                            })\n                        ]\n                    }),\n                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(\"span\", {\n                        children: [\n                            readyErrors.length,\n                            \" error\",\n                            readyErrors.length > 1 ? \"s\" : \"\"\n                        ]\n                    }),\n                    /*#__PURE__*/ (0, _jsxruntime.jsx)(\"button\", {\n                        \"data-nextjs-toast-errors-hide-button\": true,\n                        className: \"nextjs-toast-errors-hide-button\",\n                        type: \"button\",\n                        onClick: (e)=>{\n                            e.stopPropagation();\n                            hide();\n                        },\n                        \"aria-label\": \"Hide Errors\",\n                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_CloseIcon.CloseIcon, {})\n                    })\n                ]\n            })\n        });\n    }\n    const error = activeError.error;\n    const isServerError = [\n        \"server\",\n        \"edge-server\"\n    ].includes((0, _errorsource.getErrorSource)(error) || \"\");\n    const errorDetails = error.details || {};\n    const [warningTemplate, serverContent, clientContent] = errorDetails.warning || [\n        null,\n        \"\",\n        \"\"\n    ];\n    const hydrationErrorType = (0, _hydrationerrorinfo.getHydrationWarningType)(warningTemplate);\n    const hydrationWarning = warningTemplate ? warningTemplate.replace(\"%s\", serverContent).replace(\"%s\", clientContent).replace(\"%s\", \"\") // remove the %s for stack\n    .replace(/%s$/, \"\") // If there's still a %s at the end, remove it\n    .replace(/^Warning: /, \"\") : null;\n    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_Overlay.Overlay, {\n        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Dialog.Dialog, {\n            type: \"error\",\n            \"aria-labelledby\": \"nextjs__container_errors_label\",\n            \"aria-describedby\": \"nextjs__container_errors_desc\",\n            onClose: isServerError ? undefined : minimize,\n            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_Dialog.DialogContent, {\n                children: [\n                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_Dialog.DialogHeader, {\n                        className: \"nextjs-container-errors-header\",\n                        children: [\n                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_LeftRightDialogHeader.LeftRightDialogHeader, {\n                                previous: activeIdx > 0 ? previous : null,\n                                next: activeIdx < readyErrors.length - 1 ? next : null,\n                                close: isServerError ? undefined : minimize,\n                                children: [\n                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(\"small\", {\n                                        children: [\n                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(\"span\", {\n                                                children: activeIdx + 1\n                                            }),\n                                            \" of\",\n                                            \" \",\n                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(\"span\", {\n                                                \"data-nextjs-dialog-header-total-count\": true,\n                                                children: readyErrors.length\n                                            }),\n                                            \" error\",\n                                            readyErrors.length < 2 ? \"\" : \"s\"\n                                        ]\n                                    }),\n                                    versionInfo ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_VersionStalenessInfo.VersionStalenessInfo, {\n                                        ...versionInfo\n                                    }) : null\n                                ]\n                            }),\n                            /*#__PURE__*/ (0, _jsxruntime.jsx)(\"h1\", {\n                                id: \"nextjs__container_errors_label\",\n                                children: isServerError ? \"Server Error\" : \"Unhandled Runtime Error\"\n                            }),\n                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(\"p\", {\n                                id: \"nextjs__container_errors_desc\",\n                                className: \"nextjs__container_errors_desc\",\n                                children: [\n                                    error.name,\n                                    \":\",\n                                    \" \",\n                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_hotlinkedtext.HotlinkedText, {\n                                        text: error.message,\n                                        matcher: isNextjsLink\n                                    })\n                                ]\n                            }),\n                            hydrationWarning && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {\n                                children: [\n                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(\"p\", {\n                                        id: \"nextjs__container_errors__notes\",\n                                        className: \"nextjs__container_errors__notes\",\n                                        children: hydrationWarning\n                                    }),\n                                    ((_activeError_componentStackFrames = activeError.componentStackFrames) == null ? void 0 : _activeError_componentStackFrames.length) ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_componentstackpseudohtml.PseudoHtmlDiff, {\n                                        className: \"nextjs__container_errors__component-stack\",\n                                        hydrationMismatchType: hydrationErrorType,\n                                        componentStackFrames: activeError.componentStackFrames,\n                                        firstContent: serverContent,\n                                        secondContent: clientContent\n                                    }) : null\n                                ]\n                            }),\n                            isServerError ? /*#__PURE__*/ (0, _jsxruntime.jsx)(\"div\", {\n                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(\"small\", {\n                                    children: \"This error happened while generating the page. Any console logs will be displayed in the terminal window.\"\n                                })\n                            }) : undefined\n                        ]\n                    }),\n                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_Dialog.DialogBody, {\n                        className: \"nextjs-container-errors-body\",\n                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_RuntimeError.RuntimeError, {\n                            error: activeError\n                        }, activeError.id.toString())\n                    })\n                ]\n            })\n        })\n    });\n}\nconst styles = (0, _nooptemplate.noop)(_templateObject());\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=Errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUV2RSxRQUFROEgsVUFBVSxFQUFFO3dCQUNuRHBELFdBQVc7d0JBQ1hFLFVBQXdCLFdBQUgsR0FBSSxJQUFHL0UsWUFBWTBFLEdBQUcsRUFBRWhFLGNBQWN3SCxZQUFZLEVBQUU7NEJBQ3JFL0IsT0FBTzlCO3dCQUNYLEdBQUdBLFlBQVlyQixFQUFFLENBQUNtRixRQUFRO29CQUM5QjtpQkFDSDtZQUNMO1FBQ0o7SUFDSjtBQUNKO0FBQ0EsTUFBTTVJLFNBQVMsQ0FBQyxHQUFHaUIsY0FBYzRILElBQUksRUFBRXBIO0FBRXZDLElBQUksQ0FBQyxPQUFPN0IsUUFBUWtKLE9BQU8sS0FBSyxjQUFlLE9BQU9sSixRQUFRa0osT0FBTyxLQUFLLFlBQVlsSixRQUFRa0osT0FBTyxLQUFLLElBQUksS0FBTSxPQUFPbEosUUFBUWtKLE9BQU8sQ0FBQ0MsVUFBVSxLQUFLLGFBQWE7SUFDcktySixPQUFPQyxjQUFjLENBQUNDLFFBQVFrSixPQUFPLEVBQUUsY0FBYztRQUFFakosT0FBTztJQUFLO0lBQ25FSCxPQUFPc0osTUFBTSxDQUFDcEosUUFBUWtKLE9BQU8sRUFBRWxKO0lBQy9CRSxPQUFPRixPQUFPLEdBQUdBLFFBQVFrSixPQUFPO0FBQ2xDLEVBRUEsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvcmVhY3QtZGV2LW92ZXJsYXkvaW50ZXJuYWwvY29udGFpbmVyL0Vycm9ycy5qcz80ZDJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuMCAmJiAobW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgRXJyb3JzOiBudWxsLFxuICAgIHN0eWxlczogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBFcnJvcnM6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gRXJyb3JzO1xuICAgIH0sXG4gICAgc3R5bGVzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHN0eWxlcztcbiAgICB9XG59KTtcbmNvbnN0IF90YWdnZWRfdGVtcGxhdGVfbGl0ZXJhbF9sb29zZSA9IHJlcXVpcmUoXCJAc3djL2hlbHBlcnMvXy9fdGFnZ2VkX3RlbXBsYXRlX2xpdGVyYWxfbG9vc2VcIik7XG5jb25zdCBfanN4cnVudGltZSA9IHJlcXVpcmUoXCJyZWFjdC9qc3gtcnVudGltZVwiKTtcbmNvbnN0IF9yZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IF9zaGFyZWQgPSByZXF1aXJlKFwiLi4vLi4vc2hhcmVkXCIpO1xuY29uc3QgX0RpYWxvZyA9IHJlcXVpcmUoXCIuLi9jb21wb25lbnRzL0RpYWxvZ1wiKTtcbmNvbnN0IF9MZWZ0UmlnaHREaWFsb2dIZWFkZXIgPSByZXF1aXJlKFwiLi4vY29tcG9uZW50cy9MZWZ0UmlnaHREaWFsb2dIZWFkZXJcIik7XG5jb25zdCBfT3ZlcmxheSA9IHJlcXVpcmUoXCIuLi9jb21wb25lbnRzL092ZXJsYXlcIik7XG5jb25zdCBfVG9hc3QgPSByZXF1aXJlKFwiLi4vY29tcG9uZW50cy9Ub2FzdFwiKTtcbmNvbnN0IF9nZXRFcnJvckJ5VHlwZSA9IHJlcXVpcmUoXCIuLi9oZWxwZXJzL2dldEVycm9yQnlUeXBlXCIpO1xuY29uc3QgX25vb3B0ZW1wbGF0ZSA9IHJlcXVpcmUoXCIuLi9oZWxwZXJzL25vb3AtdGVtcGxhdGVcIik7XG5jb25zdCBfQ2xvc2VJY29uID0gcmVxdWlyZShcIi4uL2ljb25zL0Nsb3NlSWNvblwiKTtcbmNvbnN0IF9SdW50aW1lRXJyb3IgPSByZXF1aXJlKFwiLi9SdW50aW1lRXJyb3JcIik7XG5jb25zdCBfVmVyc2lvblN0YWxlbmVzc0luZm8gPSByZXF1aXJlKFwiLi4vY29tcG9uZW50cy9WZXJzaW9uU3RhbGVuZXNzSW5mb1wiKTtcbmNvbnN0IF9lcnJvcnNvdXJjZSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi8uLi9zaGFyZWQvbGliL2Vycm9yLXNvdXJjZVwiKTtcbmNvbnN0IF9ob3RsaW5rZWR0ZXh0ID0gcmVxdWlyZShcIi4uL2NvbXBvbmVudHMvaG90LWxpbmtlZC10ZXh0XCIpO1xuY29uc3QgX2NvbXBvbmVudHN0YWNrcHNldWRvaHRtbCA9IHJlcXVpcmUoXCIuL1J1bnRpbWVFcnJvci9jb21wb25lbnQtc3RhY2stcHNldWRvLWh0bWxcIik7XG5jb25zdCBfaHlkcmF0aW9uZXJyb3JpbmZvID0gcmVxdWlyZShcIi4uL2hlbHBlcnMvaHlkcmF0aW9uLWVycm9yLWluZm9cIik7XG5mdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QoKSB7XG4gICAgY29uc3QgZGF0YSA9IF90YWdnZWRfdGVtcGxhdGVfbGl0ZXJhbF9sb29zZS5fKFtcbiAgICAgICAgXCJcXG4gIC5uZXh0anMtY29udGFpbmVyLWVycm9ycy1oZWFkZXIgPiBoMSB7XFxuICAgIGZvbnQtc2l6ZTogdmFyKC0tc2l6ZS1mb250LWJpZyk7XFxuICAgIGxpbmUtaGVpZ2h0OiB2YXIoLS1zaXplLWZvbnQtYmlnZ2VyKTtcXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICAgIG1hcmdpbjogY2FsYyh2YXIoLS1zaXplLWdhcC1kb3VibGUpICogMS41KSAwO1xcbiAgICBjb2xvcjogdmFyKC0tY29sb3ItdGl0bGUtaDEpO1xcbiAgfVxcbiAgLm5leHRqcy1jb250YWluZXItZXJyb3JzLWhlYWRlciBzbWFsbCB7XFxuICAgIGZvbnQtc2l6ZTogdmFyKC0tc2l6ZS1mb250LXNtYWxsKTtcXG4gICAgY29sb3I6IHZhcigtLWNvbG9yLWFjY2VudHMtMSk7XFxuICAgIG1hcmdpbi1sZWZ0OiB2YXIoLS1zaXplLWdhcC1kb3VibGUpO1xcbiAgfVxcbiAgLm5leHRqcy1jb250YWluZXItZXJyb3JzLWhlYWRlciBzbWFsbCA+IHNwYW4ge1xcbiAgICBmb250LWZhbWlseTogdmFyKC0tZm9udC1zdGFjay1tb25vc3BhY2UpO1xcbiAgfVxcbiAgLm5leHRqcy1jb250YWluZXItZXJyb3JzLWhlYWRlciBwIHtcXG4gICAgZm9udC1zaXplOiB2YXIoLS1zaXplLWZvbnQtc21hbGwpO1xcbiAgICBsaW5lLWhlaWdodDogdmFyKC0tc2l6ZS1mb250LWJpZyk7XFxuICAgIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcXG4gIH1cXG4gIC5uZXh0anNfX2NvbnRhaW5lcl9lcnJvcnNfZGVzYyB7XFxuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LXN0YWNrLW1vbm9zcGFjZSk7XFxuICAgIHBhZGRpbmc6IHZhcigtLXNpemUtZ2FwKSB2YXIoLS1zaXplLWdhcC1kb3VibGUpO1xcbiAgICBib3JkZXItbGVmdDogMnB4IHNvbGlkIHZhcigtLWNvbG9yLXRleHQtY29sb3ItcmVkLTEpO1xcbiAgICBtYXJnaW4tdG9wOiB2YXIoLS1zaXplLWdhcCk7XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgICBjb2xvcjogdmFyKC0tY29sb3ItdGV4dC1jb2xvci1yZWQtMSk7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yLXRleHQtYmFja2dyb3VuZC1yZWQtMSk7XFxuICB9XFxuICBwLm5leHRqc19fY29udGFpbmVyX2Vycm9yc19fbm90ZXMge1xcbiAgICBtYXJnaW46IHZhcigtLXNpemUtZ2FwLWRvdWJsZSkgYXV0bztcXG4gICAgY29sb3I6IHZhcigtLWNvbG9yLXN0YWNrLW5vdGVzKTtcXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcXG4gICAgZm9udC1zaXplOiAxNXB4O1xcbiAgfVxcbiAgLm5leHRqcy1jb250YWluZXItZXJyb3JzLWhlYWRlciA+IGRpdiA+IHNtYWxsIHtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBtYXJnaW4tdG9wOiB2YXIoLS1zaXplLWdhcC1oYWxmKTtcXG4gIH1cXG4gIC5uZXh0anMtY29udGFpbmVyLWVycm9ycy1oZWFkZXIgPiBwID4gYSB7XFxuICAgIGNvbG9yOiBpbmhlcml0O1xcbiAgICBmb250LXdlaWdodDogYm9sZDtcXG4gIH1cXG4gIC5uZXh0anMtY29udGFpbmVyLWVycm9ycy1ib2R5ID4gaDI6bm90KDpmaXJzdC1jaGlsZCkge1xcbiAgICBtYXJnaW4tdG9wOiBjYWxjKHZhcigtLXNpemUtZ2FwLWRvdWJsZSkgKyB2YXIoLS1zaXplLWdhcCkpO1xcbiAgfVxcbiAgLm5leHRqcy1jb250YWluZXItZXJyb3JzLWJvZHkgPiBoMiB7XFxuICAgIGNvbG9yOiB2YXIoLS1jb2xvci10aXRsZS1jb2xvcik7XFxuICAgIG1hcmdpbi1ib3R0b206IHZhcigtLXNpemUtZ2FwKTtcXG4gICAgZm9udC1zaXplOiB2YXIoLS1zaXplLWZvbnQtYmlnKTtcXG4gIH1cXG4gIC5uZXh0anNfX2NvbnRhaW5lcl9lcnJvcnNfX2NvbXBvbmVudC1zdGFjayB7XFxuICAgIHBhZGRpbmc6IDEycHggMzJweDtcXG4gICAgY29sb3I6IHZhcigtLWNvbG9yLWFuc2ktZmcpO1xcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvci1hbnNpLWJnKTtcXG4gIH1cXG4gIC5uZXh0anMtdG9hc3QtZXJyb3JzLXBhcmVudCB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnMgZWFzZTtcXG4gIH1cXG4gIC5uZXh0anMtdG9hc3QtZXJyb3JzLXBhcmVudDpob3ZlciB7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcXG4gIH1cXG4gIC5uZXh0anMtdG9hc3QtZXJyb3JzIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcbiAgfVxcbiAgLm5leHRqcy10b2FzdC1lcnJvcnMgPiBzdmcge1xcbiAgICBtYXJnaW4tcmlnaHQ6IHZhcigtLXNpemUtZ2FwKTtcXG4gIH1cXG4gIC5uZXh0anMtdG9hc3QtZXJyb3JzLWhpZGUtYnV0dG9uIHtcXG4gICAgbWFyZ2luLWxlZnQ6IHZhcigtLXNpemUtZ2FwLXRyaXBsZSk7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYmFja2dyb3VuZDogbm9uZTtcXG4gICAgY29sb3I6IHZhcigtLWNvbG9yLWFuc2ktYnJpZ2h0LXdoaXRlKTtcXG4gICAgcGFkZGluZzogMDtcXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI1cyBlYXNlO1xcbiAgICBvcGFjaXR5OiAwLjc7XFxuICB9XFxuICAubmV4dGpzLXRvYXN0LWVycm9ycy1oaWRlLWJ1dHRvbjpob3ZlciB7XFxuICAgIG9wYWNpdHk6IDE7XFxuICB9XFxuXCJcbiAgICBdKTtcbiAgICBfdGVtcGxhdGVPYmplY3QgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfTtcbiAgICByZXR1cm4gZGF0YTtcbn1cbmZ1bmN0aW9uIGlzTmV4dGpzTGluayh0ZXh0KSB7XG4gICAgcmV0dXJuIHRleHQuc3RhcnRzV2l0aChcImh0dHBzOi8vbmV4dGpzLm9yZ1wiKTtcbn1cbmZ1bmN0aW9uIGdldEVycm9yU2lnbmF0dXJlKGV2KSB7XG4gICAgY29uc3QgeyBldmVudCB9ID0gZXY7XG4gICAgc3dpdGNoKGV2ZW50LnR5cGUpe1xuICAgICAgICBjYXNlIF9zaGFyZWQuQUNUSU9OX1VOSEFORExFRF9FUlJPUjpcbiAgICAgICAgY2FzZSBfc2hhcmVkLkFDVElPTl9VTkhBTkRMRURfUkVKRUNUSU9OOlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHJldHVybiBldmVudC5yZWFzb24ubmFtZSArIFwiOjpcIiArIGV2ZW50LnJlYXNvbi5tZXNzYWdlICsgXCI6OlwiICsgZXZlbnQucmVhc29uLnN0YWNrO1xuICAgICAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAge31cbiAgICB9XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuICAgIGNvbnN0IF8gPSBldmVudDtcbiAgICByZXR1cm4gXCJcIjtcbn1cbmZ1bmN0aW9uIEVycm9ycyhwYXJhbSkge1xuICAgIGxldCB7IGlzQXBwRGlyLCBlcnJvcnMsIGluaXRpYWxEaXNwbGF5U3RhdGUsIHZlcnNpb25JbmZvIH0gPSBwYXJhbTtcbiAgICB2YXIgX2FjdGl2ZUVycm9yX2NvbXBvbmVudFN0YWNrRnJhbWVzO1xuICAgIGNvbnN0IFtsb29rdXBzLCBzZXRMb29rdXBzXSA9ICgwLCBfcmVhY3QudXNlU3RhdGUpKHt9KTtcbiAgICBjb25zdCBbcmVhZHlFcnJvcnMsIG5leHRFcnJvcl0gPSAoMCwgX3JlYWN0LnVzZU1lbW8pKCgpPT57XG4gICAgICAgIGxldCByZWFkeSA9IFtdO1xuICAgICAgICBsZXQgbmV4dCA9IG51bGw7XG4gICAgICAgIC8vIEVuc3VyZSBlcnJvcnMgYXJlIGRpc3BsYXllZCBpbiB0aGUgb3JkZXIgdGhleSBvY2N1cnJlZCBpbjpcbiAgICAgICAgZm9yKGxldCBpZHggPSAwOyBpZHggPCBlcnJvcnMubGVuZ3RoOyArK2lkeCl7XG4gICAgICAgICAgICBjb25zdCBlID0gZXJyb3JzW2lkeF07XG4gICAgICAgICAgICBjb25zdCB7IGlkIH0gPSBlO1xuICAgICAgICAgICAgaWYgKGlkIGluIGxvb2t1cHMpIHtcbiAgICAgICAgICAgICAgICByZWFkeS5wdXNoKGxvb2t1cHNbaWRdKTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIENoZWNrIGZvciBkdXBsaWNhdGUgZXJyb3JzXG4gICAgICAgICAgICBpZiAoaWR4ID4gMCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHByZXYgPSBlcnJvcnNbaWR4IC0gMV07XG4gICAgICAgICAgICAgICAgaWYgKGdldEVycm9yU2lnbmF0dXJlKHByZXYpID09PSBnZXRFcnJvclNpZ25hdHVyZShlKSkge1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBuZXh0ID0gZTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICByZWFkeSxcbiAgICAgICAgICAgIG5leHRcbiAgICAgICAgXTtcbiAgICB9LCBbXG4gICAgICAgIGVycm9ycyxcbiAgICAgICAgbG9va3Vwc1xuICAgIF0pO1xuICAgIGNvbnN0IGlzTG9hZGluZyA9ICgwLCBfcmVhY3QudXNlTWVtbykoKCk9PntcbiAgICAgICAgcmV0dXJuIHJlYWR5RXJyb3JzLmxlbmd0aCA8IDEgJiYgQm9vbGVhbihlcnJvcnMubGVuZ3RoKTtcbiAgICB9LCBbXG4gICAgICAgIGVycm9ycy5sZW5ndGgsXG4gICAgICAgIHJlYWR5RXJyb3JzLmxlbmd0aFxuICAgIF0pO1xuICAgICgwLCBfcmVhY3QudXNlRWZmZWN0KSgoKT0+e1xuICAgICAgICBpZiAobmV4dEVycm9yID09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBsZXQgbW91bnRlZCA9IHRydWU7XG4gICAgICAgICgwLCBfZ2V0RXJyb3JCeVR5cGUuZ2V0RXJyb3JCeVR5cGUpKG5leHRFcnJvciwgaXNBcHBEaXIpLnRoZW4oKHJlc29sdmVkKT0+e1xuICAgICAgICAgICAgLy8gV2UgZG9uJ3QgY2FyZSBpZiB0aGUgZGVzaXJlZCBlcnJvciBjaGFuZ2VkIHdoaWxlIHdlIHdlcmUgcmVzb2x2aW5nLFxuICAgICAgICAgICAgLy8gdGh1cyB3ZSdyZSBub3QgdHJhY2tpbmcgaXQgdXNpbmcgYSByZWYuIE9uY2UgdGhlIHdvcmsgaGFzIGJlZW4gZG9uZSxcbiAgICAgICAgICAgIC8vIHdlJ2xsIHN0b3JlIGl0LlxuICAgICAgICAgICAgaWYgKG1vdW50ZWQpIHtcbiAgICAgICAgICAgICAgICBzZXRMb29rdXBzKChtKT0+KHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC4uLm0sXG4gICAgICAgICAgICAgICAgICAgICAgICBbcmVzb2x2ZWQuaWRdOiByZXNvbHZlZFxuICAgICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sICgpPT57XG4gICAgICAgIC8vIFRPRE86IGhhbmRsZSB0aGlzLCB0aG91Z2ggYW4gZWRnZSBjYXNlXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gKCk9PntcbiAgICAgICAgICAgIG1vdW50ZWQgPSBmYWxzZTtcbiAgICAgICAgfTtcbiAgICB9LCBbXG4gICAgICAgIG5leHRFcnJvcixcbiAgICAgICAgaXNBcHBEaXJcbiAgICBdKTtcbiAgICBjb25zdCBbZGlzcGxheVN0YXRlLCBzZXREaXNwbGF5U3RhdGVdID0gKDAsIF9yZWFjdC51c2VTdGF0ZSkoaW5pdGlhbERpc3BsYXlTdGF0ZSk7XG4gICAgY29uc3QgW2FjdGl2ZUlkeCwgc2V0QWN0aXZlSW5kZXhdID0gKDAsIF9yZWFjdC51c2VTdGF0ZSkoMCk7XG4gICAgY29uc3QgcHJldmlvdXMgPSAoMCwgX3JlYWN0LnVzZUNhbGxiYWNrKSgoKT0+c2V0QWN0aXZlSW5kZXgoKHYpPT5NYXRoLm1heCgwLCB2IC0gMSkpLCBbXSk7XG4gICAgY29uc3QgbmV4dCA9ICgwLCBfcmVhY3QudXNlQ2FsbGJhY2spKCgpPT5zZXRBY3RpdmVJbmRleCgodik9Pk1hdGgubWF4KDAsIE1hdGgubWluKHJlYWR5RXJyb3JzLmxlbmd0aCAtIDEsIHYgKyAxKSkpLCBbXG4gICAgICAgIHJlYWR5RXJyb3JzLmxlbmd0aFxuICAgIF0pO1xuICAgIGNvbnN0IGFjdGl2ZUVycm9yID0gKDAsIF9yZWFjdC51c2VNZW1vKSgoKT0+e1xuICAgICAgICB2YXIgX3JlYWR5RXJyb3JzX2FjdGl2ZUlkeDtcbiAgICAgICAgcmV0dXJuIChfcmVhZHlFcnJvcnNfYWN0aXZlSWR4ID0gcmVhZHlFcnJvcnNbYWN0aXZlSWR4XSkgIT0gbnVsbCA/IF9yZWFkeUVycm9yc19hY3RpdmVJZHggOiBudWxsO1xuICAgIH0sIFtcbiAgICAgICAgYWN0aXZlSWR4LFxuICAgICAgICByZWFkeUVycm9yc1xuICAgIF0pO1xuICAgIC8vIFJlc2V0IGNvbXBvbmVudCBzdGF0ZSB3aGVuIHRoZXJlIGFyZSBubyBlcnJvcnMgdG8gYmUgZGlzcGxheWVkLlxuICAgIC8vIFRoaXMgc2hvdWxkIG5ldmVyIGhhcHBlbiwgYnV0IGxldHMgaGFuZGxlIGl0LlxuICAgICgwLCBfcmVhY3QudXNlRWZmZWN0KSgoKT0+e1xuICAgICAgICBpZiAoZXJyb3JzLmxlbmd0aCA8IDEpIHtcbiAgICAgICAgICAgIHNldExvb2t1cHMoe30pO1xuICAgICAgICAgICAgc2V0RGlzcGxheVN0YXRlKFwiaGlkZGVuXCIpO1xuICAgICAgICAgICAgc2V0QWN0aXZlSW5kZXgoMCk7XG4gICAgICAgIH1cbiAgICB9LCBbXG4gICAgICAgIGVycm9ycy5sZW5ndGhcbiAgICBdKTtcbiAgICBjb25zdCBtaW5pbWl6ZSA9ICgwLCBfcmVhY3QudXNlQ2FsbGJhY2spKCgpPT5zZXREaXNwbGF5U3RhdGUoXCJtaW5pbWl6ZWRcIiksIFtdKTtcbiAgICBjb25zdCBoaWRlID0gKDAsIF9yZWFjdC51c2VDYWxsYmFjaykoKCk9PnNldERpc3BsYXlTdGF0ZShcImhpZGRlblwiKSwgW10pO1xuICAgIGNvbnN0IGZ1bGxzY3JlZW4gPSAoMCwgX3JlYWN0LnVzZUNhbGxiYWNrKSgoKT0+c2V0RGlzcGxheVN0YXRlKFwiZnVsbHNjcmVlblwiKSwgW10pO1xuICAgIC8vIFRoaXMgY29tcG9uZW50IHNob3VsZG4ndCBiZSByZW5kZXJlZCB3aXRoIG5vIGVycm9ycywgYnV0IGlmIGl0IGlzLCBsZXQnc1xuICAgIC8vIGhhbmRsZSBpdCBncmFjZWZ1bGx5IGJ5IHJlbmRlcmluZyBub3RoaW5nLlxuICAgIGlmIChlcnJvcnMubGVuZ3RoIDwgMSB8fCBhY3RpdmVFcnJvciA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBpZiAoaXNMb2FkaW5nKSB7XG4gICAgICAgIC8vIFRPRE86IGJldHRlciBsb2FkaW5nIHN0YXRlXG4gICAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovICgwLCBfanN4cnVudGltZS5qc3gpKF9PdmVybGF5Lk92ZXJsYXksIHt9KTtcbiAgICB9XG4gICAgaWYgKGRpc3BsYXlTdGF0ZSA9PT0gXCJoaWRkZW5cIikge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgaWYgKGRpc3BsYXlTdGF0ZSA9PT0gXCJtaW5pbWl6ZWRcIikge1xuICAgICAgICByZXR1cm4gLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4KShfVG9hc3QuVG9hc3QsIHtcbiAgICAgICAgICAgIGNsYXNzTmFtZTogXCJuZXh0anMtdG9hc3QtZXJyb3JzLXBhcmVudFwiLFxuICAgICAgICAgICAgb25DbGljazogZnVsbHNjcmVlbixcbiAgICAgICAgICAgIGNoaWxkcmVuOiAvKiNfX1BVUkVfXyovICgwLCBfanN4cnVudGltZS5qc3hzKShcImRpdlwiLCB7XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcIm5leHRqcy10b2FzdC1lcnJvcnNcIixcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAvKiNfX1BVUkVfXyovICgwLCBfanN4cnVudGltZS5qc3hzKShcInN2Z1wiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICB4bWxuczogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IFwiMjRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogXCIyNFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmlld0JveDogXCIwIDAgMjQgMjRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpbGw6IFwibm9uZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlOiBcImN1cnJlbnRDb2xvclwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlV2lkdGg6IFwiMlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlTGluZWNhcDogXCJyb3VuZFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlTGluZWpvaW46IFwicm91bmRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4KShcImNpcmNsZVwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN4OiBcIjEyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN5OiBcIjEyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHI6IFwiMTBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qI19fUFVSRV9fKi8gKDAsIF9qc3hydW50aW1lLmpzeCkoXCJsaW5lXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeDE6IFwiMTJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeTE6IFwiOFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB4MjogXCIxMlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB5MjogXCIxMlwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4KShcImxpbmVcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB4MTogXCIxMlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB5MTogXCIxNlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB4MjogXCIxMi4wMVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB5MjogXCIxNlwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgIC8qI19fUFVSRV9fKi8gKDAsIF9qc3hydW50aW1lLmpzeHMpKFwic3BhblwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWR5RXJyb3JzLmxlbmd0aCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIiBlcnJvclwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWR5RXJyb3JzLmxlbmd0aCA+IDEgPyBcInNcIiA6IFwiXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgIC8qI19fUFVSRV9fKi8gKDAsIF9qc3hydW50aW1lLmpzeCkoXCJidXR0b25cIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJkYXRhLW5leHRqcy10b2FzdC1lcnJvcnMtaGlkZS1idXR0b25cIjogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJuZXh0anMtdG9hc3QtZXJyb3JzLWhpZGUtYnV0dG9uXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImJ1dHRvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljazogKGUpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoaWRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJhcmlhLWxhYmVsXCI6IFwiSGlkZSBFcnJvcnNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiAvKiNfX1BVUkVfXyovICgwLCBfanN4cnVudGltZS5qc3gpKF9DbG9zZUljb24uQ2xvc2VJY29uLCB7fSlcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9KVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgY29uc3QgZXJyb3IgPSBhY3RpdmVFcnJvci5lcnJvcjtcbiAgICBjb25zdCBpc1NlcnZlckVycm9yID0gW1xuICAgICAgICBcInNlcnZlclwiLFxuICAgICAgICBcImVkZ2Utc2VydmVyXCJcbiAgICBdLmluY2x1ZGVzKCgwLCBfZXJyb3Jzb3VyY2UuZ2V0RXJyb3JTb3VyY2UpKGVycm9yKSB8fCBcIlwiKTtcbiAgICBjb25zdCBlcnJvckRldGFpbHMgPSBlcnJvci5kZXRhaWxzIHx8IHt9O1xuICAgIGNvbnN0IFt3YXJuaW5nVGVtcGxhdGUsIHNlcnZlckNvbnRlbnQsIGNsaWVudENvbnRlbnRdID0gZXJyb3JEZXRhaWxzLndhcm5pbmcgfHwgW1xuICAgICAgICBudWxsLFxuICAgICAgICBcIlwiLFxuICAgICAgICBcIlwiXG4gICAgXTtcbiAgICBjb25zdCBoeWRyYXRpb25FcnJvclR5cGUgPSAoMCwgX2h5ZHJhdGlvbmVycm9yaW5mby5nZXRIeWRyYXRpb25XYXJuaW5nVHlwZSkod2FybmluZ1RlbXBsYXRlKTtcbiAgICBjb25zdCBoeWRyYXRpb25XYXJuaW5nID0gd2FybmluZ1RlbXBsYXRlID8gd2FybmluZ1RlbXBsYXRlLnJlcGxhY2UoXCIlc1wiLCBzZXJ2ZXJDb250ZW50KS5yZXBsYWNlKFwiJXNcIiwgY2xpZW50Q29udGVudCkucmVwbGFjZShcIiVzXCIsIFwiXCIpIC8vIHJlbW92ZSB0aGUgJXMgZm9yIHN0YWNrXG4gICAgLnJlcGxhY2UoLyVzJC8sIFwiXCIpIC8vIElmIHRoZXJlJ3Mgc3RpbGwgYSAlcyBhdCB0aGUgZW5kLCByZW1vdmUgaXRcbiAgICAucmVwbGFjZSgvXldhcm5pbmc6IC8sIFwiXCIpIDogbnVsbDtcbiAgICByZXR1cm4gLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4KShfT3ZlcmxheS5PdmVybGF5LCB7XG4gICAgICAgIGNoaWxkcmVuOiAvKiNfX1BVUkVfXyovICgwLCBfanN4cnVudGltZS5qc3gpKF9EaWFsb2cuRGlhbG9nLCB7XG4gICAgICAgICAgICB0eXBlOiBcImVycm9yXCIsXG4gICAgICAgICAgICBcImFyaWEtbGFiZWxsZWRieVwiOiBcIm5leHRqc19fY29udGFpbmVyX2Vycm9yc19sYWJlbFwiLFxuICAgICAgICAgICAgXCJhcmlhLWRlc2NyaWJlZGJ5XCI6IFwibmV4dGpzX19jb250YWluZXJfZXJyb3JzX2Rlc2NcIixcbiAgICAgICAgICAgIG9uQ2xvc2U6IGlzU2VydmVyRXJyb3IgPyB1bmRlZmluZWQgOiBtaW5pbWl6ZSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiAvKiNfX1BVUkVfXyovICgwLCBfanN4cnVudGltZS5qc3hzKShfRGlhbG9nLkRpYWxvZ0NvbnRlbnQsIHtcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAvKiNfX1BVUkVfXyovICgwLCBfanN4cnVudGltZS5qc3hzKShfRGlhbG9nLkRpYWxvZ0hlYWRlciwge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcIm5leHRqcy1jb250YWluZXItZXJyb3JzLWhlYWRlclwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiNfX1BVUkVfXyovICgwLCBfanN4cnVudGltZS5qc3hzKShfTGVmdFJpZ2h0RGlhbG9nSGVhZGVyLkxlZnRSaWdodERpYWxvZ0hlYWRlciwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmV2aW91czogYWN0aXZlSWR4ID4gMCA/IHByZXZpb3VzIDogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV4dDogYWN0aXZlSWR4IDwgcmVhZHlFcnJvcnMubGVuZ3RoIC0gMSA/IG5leHQgOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbG9zZTogaXNTZXJ2ZXJFcnJvciA/IHVuZGVmaW5lZCA6IG1pbmltaXplLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4cykoXCJzbWFsbFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4KShcInNwYW5cIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IGFjdGl2ZUlkeCArIDFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiIG9mXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiIFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiNfX1BVUkVfXyovICgwLCBfanN4cnVudGltZS5qc3gpKFwic3BhblwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImRhdGEtbmV4dGpzLWRpYWxvZy1oZWFkZXItdG90YWwtY291bnRcIjogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiByZWFkeUVycm9ycy5sZW5ndGhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiIGVycm9yXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWR5RXJyb3JzLmxlbmd0aCA8IDIgPyBcIlwiIDogXCJzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZlcnNpb25JbmZvID8gLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4KShfVmVyc2lvblN0YWxlbmVzc0luZm8uVmVyc2lvblN0YWxlbmVzc0luZm8sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuLi52ZXJzaW9uSW5mb1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkgOiBudWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiNfX1BVUkVfXyovICgwLCBfanN4cnVudGltZS5qc3gpKFwiaDFcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogXCJuZXh0anNfX2NvbnRhaW5lcl9lcnJvcnNfbGFiZWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IGlzU2VydmVyRXJyb3IgPyBcIlNlcnZlciBFcnJvclwiIDogXCJVbmhhbmRsZWQgUnVudGltZSBFcnJvclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4cykoXCJwXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IFwibmV4dGpzX19jb250YWluZXJfZXJyb3JzX2Rlc2NcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcIm5leHRqc19fY29udGFpbmVyX2Vycm9yc19kZXNjXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvci5uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCI6XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIiBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qI19fUFVSRV9fKi8gKDAsIF9qc3hydW50aW1lLmpzeCkoX2hvdGxpbmtlZHRleHQuSG90bGlua2VkVGV4dCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6IGVycm9yLm1lc3NhZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2hlcjogaXNOZXh0anNMaW5rXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaHlkcmF0aW9uV2FybmluZyAmJiAvKiNfX1BVUkVfXyovICgwLCBfanN4cnVudGltZS5qc3hzKShfanN4cnVudGltZS5GcmFnbWVudCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4KShcInBcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBcIm5leHRqc19fY29udGFpbmVyX2Vycm9yc19fbm90ZXNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwibmV4dGpzX19jb250YWluZXJfZXJyb3JzX19ub3Rlc1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBoeWRyYXRpb25XYXJuaW5nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICgoX2FjdGl2ZUVycm9yX2NvbXBvbmVudFN0YWNrRnJhbWVzID0gYWN0aXZlRXJyb3IuY29tcG9uZW50U3RhY2tGcmFtZXMpID09IG51bGwgPyB2b2lkIDAgOiBfYWN0aXZlRXJyb3JfY29tcG9uZW50U3RhY2tGcmFtZXMubGVuZ3RoKSA/IC8qI19fUFVSRV9fKi8gKDAsIF9qc3hydW50aW1lLmpzeCkoX2NvbXBvbmVudHN0YWNrcHNldWRvaHRtbC5Qc2V1ZG9IdG1sRGlmZiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJuZXh0anNfX2NvbnRhaW5lcl9lcnJvcnNfX2NvbXBvbmVudC1zdGFja1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGh5ZHJhdGlvbk1pc21hdGNoVHlwZTogaHlkcmF0aW9uRXJyb3JUeXBlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBvbmVudFN0YWNrRnJhbWVzOiBhY3RpdmVFcnJvci5jb21wb25lbnRTdGFja0ZyYW1lcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaXJzdENvbnRlbnQ6IHNlcnZlckNvbnRlbnQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Vjb25kQ29udGVudDogY2xpZW50Q29udGVudFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkgOiBudWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1NlcnZlckVycm9yID8gLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4KShcImRpdlwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiAvKiNfX1BVUkVfXyovICgwLCBfanN4cnVudGltZS5qc3gpKFwic21hbGxcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiVGhpcyBlcnJvciBoYXBwZW5lZCB3aGlsZSBnZW5lcmF0aW5nIHRoZSBwYWdlLiBBbnkgY29uc29sZSBsb2dzIHdpbGwgYmUgZGlzcGxheWVkIGluIHRoZSB0ZXJtaW5hbCB3aW5kb3cuXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSA6IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4KShfRGlhbG9nLkRpYWxvZ0JvZHksIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJuZXh0anMtY29udGFpbmVyLWVycm9ycy1ib2R5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4KShfUnVudGltZUVycm9yLlJ1bnRpbWVFcnJvciwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBhY3RpdmVFcnJvclxuICAgICAgICAgICAgICAgICAgICAgICAgfSwgYWN0aXZlRXJyb3IuaWQudG9TdHJpbmcoKSlcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgIH0pO1xufVxuY29uc3Qgc3R5bGVzID0gKDAsIF9ub29wdGVtcGxhdGUubm9vcCkoX3RlbXBsYXRlT2JqZWN0KCkpO1xuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1FcnJvcnMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwibW9kdWxlIiwiRXJyb3JzIiwic3R5bGVzIiwiX2V4cG9ydCIsInRhcmdldCIsImFsbCIsIm5hbWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiX3RhZ2dlZF90ZW1wbGF0ZV9saXRlcmFsX2xvb3NlIiwicmVxdWlyZSIsIl9qc3hydW50aW1lIiwiX3JlYWN0IiwiX3NoYXJlZCIsIl9EaWFsb2ciLCJfTGVmdFJpZ2h0RGlhbG9nSGVhZGVyIiwiX092ZXJsYXkiLCJfVG9hc3QiLCJfZ2V0RXJyb3JCeVR5cGUiLCJfbm9vcHRlbXBsYXRlIiwiX0Nsb3NlSWNvbiIsIl9SdW50aW1lRXJyb3IiLCJfVmVyc2lvblN0YWxlbmVzc0luZm8iLCJfZXJyb3Jzb3VyY2UiLCJfaG90bGlua2VkdGV4dCIsIl9jb21wb25lbnRzdGFja3BzZXVkb2h0bWwiLCJfaHlkcmF0aW9uZXJyb3JpbmZvIiwiX3RlbXBsYXRlT2JqZWN0IiwiZGF0YSIsIl8iLCJpc05leHRqc0xpbmsiLCJ0ZXh0Iiwic3RhcnRzV2l0aCIsImdldEVycm9yU2lnbmF0dXJlIiwiZXYiLCJldmVudCIsInR5cGUiLCJBQ1RJT05fVU5IQU5ETEVEX0VSUk9SIiwiQUNUSU9OX1VOSEFORExFRF9SRUpFQ1RJT04iLCJyZWFzb24iLCJtZXNzYWdlIiwic3RhY2siLCJwYXJhbSIsImlzQXBwRGlyIiwiZXJyb3JzIiwiaW5pdGlhbERpc3BsYXlTdGF0ZSIsInZlcnNpb25JbmZvIiwiX2FjdGl2ZUVycm9yX2NvbXBvbmVudFN0YWNrRnJhbWVzIiwibG9va3VwcyIsInNldExvb2t1cHMiLCJ1c2VTdGF0ZSIsInJlYWR5RXJyb3JzIiwibmV4dEVycm9yIiwidXNlTWVtbyIsInJlYWR5IiwibmV4dCIsImlkeCIsImxlbmd0aCIsImUiLCJpZCIsInB1c2giLCJwcmV2IiwiaXNMb2FkaW5nIiwiQm9vbGVhbiIsInVzZUVmZmVjdCIsIm1vdW50ZWQiLCJnZXRFcnJvckJ5VHlwZSIsInRoZW4iLCJyZXNvbHZlZCIsIm0iLCJkaXNwbGF5U3RhdGUiLCJzZXREaXNwbGF5U3RhdGUiLCJhY3RpdmVJZHgiLCJzZXRBY3RpdmVJbmRleCIsInByZXZpb3VzIiwidXNlQ2FsbGJhY2siLCJ2IiwiTWF0aCIsIm1heCIsIm1pbiIsImFjdGl2ZUVycm9yIiwiX3JlYWR5RXJyb3JzX2FjdGl2ZUlkeCIsIm1pbmltaXplIiwiaGlkZSIsImZ1bGxzY3JlZW4iLCJqc3giLCJPdmVybGF5IiwiVG9hc3QiLCJjbGFzc05hbWUiLCJvbkNsaWNrIiwiY2hpbGRyZW4iLCJqc3hzIiwieG1sbnMiLCJ3aWR0aCIsImhlaWdodCIsInZpZXdCb3giLCJmaWxsIiwic3Ryb2tlIiwic3Ryb2tlV2lkdGgiLCJzdHJva2VMaW5lY2FwIiwic3Ryb2tlTGluZWpvaW4iLCJjeCIsImN5IiwiciIsIngxIiwieTEiLCJ4MiIsInkyIiwic3RvcFByb3BhZ2F0aW9uIiwiQ2xvc2VJY29uIiwiZXJyb3IiLCJpc1NlcnZlckVycm9yIiwiaW5jbHVkZXMiLCJnZXRFcnJvclNvdXJjZSIsImVycm9yRGV0YWlscyIsImRldGFpbHMiLCJ3YXJuaW5nVGVtcGxhdGUiLCJzZXJ2ZXJDb250ZW50IiwiY2xpZW50Q29udGVudCIsIndhcm5pbmciLCJoeWRyYXRpb25FcnJvclR5cGUiLCJnZXRIeWRyYXRpb25XYXJuaW5nVHlwZSIsImh5ZHJhdGlvbldhcm5pbmciLCJyZXBsYWNlIiwiRGlhbG9nIiwib25DbG9zZSIsInVuZGVmaW5lZCIsIkRpYWxvZ0NvbnRlbnQiLCJEaWFsb2dIZWFkZXIiLCJMZWZ0UmlnaHREaWFsb2dIZWFkZXIiLCJjbG9zZSIsIlZlcnNpb25TdGFsZW5lc3NJbmZvIiwiSG90bGlua2VkVGV4dCIsIm1hdGNoZXIiLCJGcmFnbWVudCIsImNvbXBvbmVudFN0YWNrRnJhbWVzIiwiUHNldWRvSHRtbERpZmYiLCJoeWRyYXRpb25NaXNtYXRjaFR5cGUiLCJmaXJzdENvbnRlbnQiLCJzZWNvbmRDb250ZW50IiwiRGlhbG9nQm9keSIsIlJ1bnRpbWVFcnJvciIsInRvU3RyaW5nIiwibm9vcCIsImRlZmF1bHQiLCJfX2VzTW9kdWxlIiwiYXNzaWduIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5948\n");

/***/ }),

/***/ 8999:
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/container/RuntimeError/CallStackFrame.js ***!
  \**********************************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"CallStackFrame\", ({\n    enumerable: true,\n    get: function() {\n        return CallStackFrame;\n    }\n}));\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ 7247);\nconst _stackframe = __webpack_require__(/*! ../../helpers/stack-frame */ 9028);\nconst _useopenineditor = __webpack_require__(/*! ../../helpers/use-open-in-editor */ 6534);\nconst _hotlinkedtext = __webpack_require__(/*! ../../components/hot-linked-text */ 8745);\nconst CallStackFrame = function CallStackFrame(param) {\n    let { frame } = param;\n    var _frame_originalStackFrame;\n    // TODO: ability to expand resolved frames\n    // TODO: render error or external indicator\n    const f = (_frame_originalStackFrame = frame.originalStackFrame) != null ? _frame_originalStackFrame : frame.sourceStackFrame;\n    const hasSource = Boolean(frame.originalCodeFrame);\n    const open = (0, _useopenineditor.useOpenInEditor)(hasSource ? {\n        file: f.file,\n        lineNumber: f.lineNumber,\n        column: f.column\n    } : undefined);\n    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(\"div\", {\n        \"data-nextjs-call-stack-frame\": true,\n        children: [\n            /*#__PURE__*/ (0, _jsxruntime.jsx)(\"h3\", {\n                \"data-nextjs-frame-expanded\": Boolean(frame.expanded),\n                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_hotlinkedtext.HotlinkedText, {\n                    text: f.methodName\n                })\n            }),\n            /*#__PURE__*/ (0, _jsxruntime.jsxs)(\"div\", {\n                \"data-has-source\": hasSource ? \"true\" : undefined,\n                tabIndex: hasSource ? 10 : undefined,\n                role: hasSource ? \"link\" : undefined,\n                onClick: open,\n                title: hasSource ? \"Click to open in your editor\" : undefined,\n                children: [\n                    /*#__PURE__*/ (0, _jsxruntime.jsx)(\"span\", {\n                        children: (0, _stackframe.getFrameSource)(f)\n                    }),\n                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(\"svg\", {\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        viewBox: \"0 0 24 24\",\n                        fill: \"none\",\n                        stroke: \"currentColor\",\n                        strokeWidth: \"2\",\n                        strokeLinecap: \"round\",\n                        strokeLinejoin: \"round\",\n                        children: [\n                            /*#__PURE__*/ (0, _jsxruntime.jsx)(\"path\", {\n                                d: \"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"\n                            }),\n                            /*#__PURE__*/ (0, _jsxruntime.jsx)(\"polyline\", {\n                                points: \"15 3 21 3 21 9\"\n                            }),\n                            /*#__PURE__*/ (0, _jsxruntime.jsx)(\"line\", {\n                                x1: \"10\",\n                                y1: \"14\",\n                                x2: \"21\",\n                                y2: \"3\"\n                            })\n                        ]\n                    })\n                ]\n            })\n        ]\n    });\n};\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=CallStackFrame.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8999\n");

/***/ }),

/***/ 7144:
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/container/RuntimeError/GroupedStackFrames.js ***!
  \**************************************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"GroupedStackFrames\", ({\n    enumerable: true,\n    get: function() {\n        return GroupedStackFrames;\n    }\n}));\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ 7247);\nconst _CallStackFrame = __webpack_require__(/*! ./CallStackFrame */ 8999);\nconst _CollapseIcon = __webpack_require__(/*! ../../icons/CollapseIcon */ 9407);\nconst _FrameworkIcon = __webpack_require__(/*! ../../icons/FrameworkIcon */ 6866);\nfunction FrameworkGroup(param) {\n    let { framework, stackFrames } = param;\n    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(\"details\", {\n        \"data-nextjs-collapsed-call-stack-details\": true,\n        children: [\n            /*#__PURE__*/ (0, _jsxruntime.jsxs)(\"summary\", {\n                tabIndex: 10,\n                children: [\n                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_CollapseIcon.CollapseIcon, {}),\n                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_FrameworkIcon.FrameworkIcon, {\n                        framework: framework\n                    }),\n                    framework === \"react\" ? \"React\" : \"Next.js\"\n                ]\n            }),\n            stackFrames.map((frame, index)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_CallStackFrame.CallStackFrame, {\n                    frame: frame\n                }, \"call-stack-\" + index))\n        ]\n    });\n}\nfunction GroupedStackFrames(param) {\n    let { groupedStackFrames, show } = param;\n    if (!show) return;\n    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_jsxruntime.Fragment, {\n        children: groupedStackFrames.map((stackFramesGroup, groupIndex)=>{\n            // Collapse React and Next.js frames\n            if (stackFramesGroup.framework) {\n                return /*#__PURE__*/ (0, _jsxruntime.jsx)(FrameworkGroup, {\n                    framework: stackFramesGroup.framework,\n                    stackFrames: stackFramesGroup.stackFrames\n                }, \"call-stack-framework-group-\" + groupIndex);\n            }\n            return stackFramesGroup.stackFrames.map((frame, frameIndex)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_CallStackFrame.CallStackFrame, {\n                    frame: frame\n                }, \"call-stack-\" + groupIndex + \"-\" + frameIndex));\n        })\n    });\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=GroupedStackFrames.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzE0NC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsc0RBQXFEO0lBQ2pESSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsY0FBY0MsbUJBQU9BLENBQUMsNkJBQW1CO0FBQy9DLE1BQU1DLGtCQUFrQkQsbUJBQU9BLENBQUMsNEJBQWtCO0FBQ2xELE1BQU1FLGdCQUFnQkYsbUJBQU9BLENBQUMsb0NBQTBCO0FBQ3hELE1BQU1HLGlCQUFpQkgsbUJBQU9BLENBQUMscUNBQTJCO0FBQzFELFNBQVNJLGVBQWVDLEtBQUs7SUFDekIsSUFBSSxFQUFFQyxTQUFTLEVBQUVDLFdBQVcsRUFBRSxHQUFHRjtJQUNqQyxPQUFxQixXQUFILEdBQUksSUFBR04sWUFBWVMsSUFBSSxFQUFFLFdBQVc7UUFDbEQsNENBQTRDO1FBQzVDQyxVQUFVO1lBQ04sV0FBVyxHQUFJLElBQUdWLFlBQVlTLElBQUksRUFBRSxXQUFXO2dCQUMzQ0UsVUFBVTtnQkFDVkQsVUFBVTtvQkFDTixXQUFXLEdBQUksSUFBR1YsWUFBWVksR0FBRyxFQUFFVCxjQUFjVSxZQUFZLEVBQUUsQ0FBQztvQkFDaEUsV0FBVyxHQUFJLElBQUdiLFlBQVlZLEdBQUcsRUFBRVIsZUFBZVUsYUFBYSxFQUFFO3dCQUM3RFAsV0FBV0E7b0JBQ2Y7b0JBQ0FBLGNBQWMsVUFBVSxVQUFVO2lCQUNyQztZQUNMO1lBQ0FDLFlBQVlPLEdBQUcsQ0FBQyxDQUFDQyxPQUFPQyxRQUFzQixXQUFILEdBQUksSUFBR2pCLFlBQVlZLEdBQUcsRUFBRVYsZ0JBQWdCZ0IsY0FBYyxFQUFFO29CQUMzRkYsT0FBT0E7Z0JBQ1gsR0FBRyxnQkFBZ0JDO1NBQzFCO0lBQ0w7QUFDSjtBQUNBLFNBQVNsQixtQkFBbUJPLEtBQUs7SUFDN0IsSUFBSSxFQUFFYSxrQkFBa0IsRUFBRUMsSUFBSSxFQUFFLEdBQUdkO0lBQ25DLElBQUksQ0FBQ2MsTUFBTTtJQUNYLE9BQXFCLFdBQUgsR0FBSSxJQUFHcEIsWUFBWVksR0FBRyxFQUFFWixZQUFZcUIsUUFBUSxFQUFFO1FBQzVEWCxVQUFVUyxtQkFBbUJKLEdBQUcsQ0FBQyxDQUFDTyxrQkFBa0JDO1lBQ2hELG9DQUFvQztZQUNwQyxJQUFJRCxpQkFBaUJmLFNBQVMsRUFBRTtnQkFDNUIsT0FBcUIsV0FBSCxHQUFJLElBQUdQLFlBQVlZLEdBQUcsRUFBRVAsZ0JBQWdCO29CQUN0REUsV0FBV2UsaUJBQWlCZixTQUFTO29CQUNyQ0MsYUFBYWMsaUJBQWlCZCxXQUFXO2dCQUM3QyxHQUFHLGdDQUFnQ2U7WUFDdkM7WUFDQSxPQUNBRCxpQkFBaUJkLFdBQVcsQ0FBQ08sR0FBRyxDQUFDLENBQUNDLE9BQU9RLGFBQTJCLFdBQUgsR0FBSSxJQUFHeEIsWUFBWVksR0FBRyxFQUFFVixnQkFBZ0JnQixjQUFjLEVBQUU7b0JBQ2pIRixPQUFPQTtnQkFDWCxHQUFHLGdCQUFnQk8sYUFBYSxNQUFNQztRQUM5QztJQUNKO0FBQ0o7QUFFQSxJQUFJLENBQUMsT0FBTzdCLFFBQVE4QixPQUFPLEtBQUssY0FBZSxPQUFPOUIsUUFBUThCLE9BQU8sS0FBSyxZQUFZOUIsUUFBUThCLE9BQU8sS0FBSyxJQUFJLEtBQU0sT0FBTzlCLFFBQVE4QixPQUFPLENBQUNDLFVBQVUsS0FBSyxhQUFhO0lBQ3JLakMsT0FBT0MsY0FBYyxDQUFDQyxRQUFROEIsT0FBTyxFQUFFLGNBQWM7UUFBRTdCLE9BQU87SUFBSztJQUNuRUgsT0FBT2tDLE1BQU0sQ0FBQ2hDLFFBQVE4QixPQUFPLEVBQUU5QjtJQUMvQmlDLE9BQU9qQyxPQUFPLEdBQUdBLFFBQVE4QixPQUFPO0FBQ2xDLEVBRUEsOENBQThDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvcmVhY3QtZGV2LW92ZXJsYXkvaW50ZXJuYWwvY29udGFpbmVyL1J1bnRpbWVFcnJvci9Hcm91cGVkU3RhY2tGcmFtZXMuanM/OWE5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkdyb3VwZWRTdGFja0ZyYW1lc1wiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gR3JvdXBlZFN0YWNrRnJhbWVzO1xuICAgIH1cbn0pO1xuY29uc3QgX2pzeHJ1bnRpbWUgPSByZXF1aXJlKFwicmVhY3QvanN4LXJ1bnRpbWVcIik7XG5jb25zdCBfQ2FsbFN0YWNrRnJhbWUgPSByZXF1aXJlKFwiLi9DYWxsU3RhY2tGcmFtZVwiKTtcbmNvbnN0IF9Db2xsYXBzZUljb24gPSByZXF1aXJlKFwiLi4vLi4vaWNvbnMvQ29sbGFwc2VJY29uXCIpO1xuY29uc3QgX0ZyYW1ld29ya0ljb24gPSByZXF1aXJlKFwiLi4vLi4vaWNvbnMvRnJhbWV3b3JrSWNvblwiKTtcbmZ1bmN0aW9uIEZyYW1ld29ya0dyb3VwKHBhcmFtKSB7XG4gICAgbGV0IHsgZnJhbWV3b3JrLCBzdGFja0ZyYW1lcyB9ID0gcGFyYW07XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi8gKDAsIF9qc3hydW50aW1lLmpzeHMpKFwiZGV0YWlsc1wiLCB7XG4gICAgICAgIFwiZGF0YS1uZXh0anMtY29sbGFwc2VkLWNhbGwtc3RhY2stZGV0YWlsc1wiOiB0cnVlLFxuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4cykoXCJzdW1tYXJ5XCIsIHtcbiAgICAgICAgICAgICAgICB0YWJJbmRleDogMTAsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgICAgLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4KShfQ29sbGFwc2VJY29uLkNvbGxhcHNlSWNvbiwge30pLFxuICAgICAgICAgICAgICAgICAgICAvKiNfX1BVUkVfXyovICgwLCBfanN4cnVudGltZS5qc3gpKF9GcmFtZXdvcmtJY29uLkZyYW1ld29ya0ljb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZyYW1ld29yazogZnJhbWV3b3JrXG4gICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICBmcmFtZXdvcmsgPT09IFwicmVhY3RcIiA/IFwiUmVhY3RcIiA6IFwiTmV4dC5qc1wiXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBzdGFja0ZyYW1lcy5tYXAoKGZyYW1lLCBpbmRleCk9Pi8qI19fUFVSRV9fKi8gKDAsIF9qc3hydW50aW1lLmpzeCkoX0NhbGxTdGFja0ZyYW1lLkNhbGxTdGFja0ZyYW1lLCB7XG4gICAgICAgICAgICAgICAgICAgIGZyYW1lOiBmcmFtZVxuICAgICAgICAgICAgICAgIH0sIFwiY2FsbC1zdGFjay1cIiArIGluZGV4KSlcbiAgICAgICAgXVxuICAgIH0pO1xufVxuZnVuY3Rpb24gR3JvdXBlZFN0YWNrRnJhbWVzKHBhcmFtKSB7XG4gICAgbGV0IHsgZ3JvdXBlZFN0YWNrRnJhbWVzLCBzaG93IH0gPSBwYXJhbTtcbiAgICBpZiAoIXNob3cpIHJldHVybjtcbiAgICByZXR1cm4gLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4KShfanN4cnVudGltZS5GcmFnbWVudCwge1xuICAgICAgICBjaGlsZHJlbjogZ3JvdXBlZFN0YWNrRnJhbWVzLm1hcCgoc3RhY2tGcmFtZXNHcm91cCwgZ3JvdXBJbmRleCk9PntcbiAgICAgICAgICAgIC8vIENvbGxhcHNlIFJlYWN0IGFuZCBOZXh0LmpzIGZyYW1lc1xuICAgICAgICAgICAgaWYgKHN0YWNrRnJhbWVzR3JvdXAuZnJhbWV3b3JrKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi8gKDAsIF9qc3hydW50aW1lLmpzeCkoRnJhbWV3b3JrR3JvdXAsIHtcbiAgICAgICAgICAgICAgICAgICAgZnJhbWV3b3JrOiBzdGFja0ZyYW1lc0dyb3VwLmZyYW1ld29yayxcbiAgICAgICAgICAgICAgICAgICAgc3RhY2tGcmFtZXM6IHN0YWNrRnJhbWVzR3JvdXAuc3RhY2tGcmFtZXNcbiAgICAgICAgICAgICAgICB9LCBcImNhbGwtc3RhY2stZnJhbWV3b3JrLWdyb3VwLVwiICsgZ3JvdXBJbmRleCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4oLy8gRG9uJ3QgZ3JvdXAgbm9uIFJlYWN0IGFuZCBOZXh0LmpzIGZyYW1lc1xuICAgICAgICAgICAgc3RhY2tGcmFtZXNHcm91cC5zdGFja0ZyYW1lcy5tYXAoKGZyYW1lLCBmcmFtZUluZGV4KT0+LyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4KShfQ2FsbFN0YWNrRnJhbWUuQ2FsbFN0YWNrRnJhbWUsIHtcbiAgICAgICAgICAgICAgICAgICAgZnJhbWU6IGZyYW1lXG4gICAgICAgICAgICAgICAgfSwgXCJjYWxsLXN0YWNrLVwiICsgZ3JvdXBJbmRleCArIFwiLVwiICsgZnJhbWVJbmRleCkpKTtcbiAgICAgICAgfSlcbiAgICB9KTtcbn1cblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9R3JvdXBlZFN0YWNrRnJhbWVzLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJHcm91cGVkU3RhY2tGcmFtZXMiLCJfanN4cnVudGltZSIsInJlcXVpcmUiLCJfQ2FsbFN0YWNrRnJhbWUiLCJfQ29sbGFwc2VJY29uIiwiX0ZyYW1ld29ya0ljb24iLCJGcmFtZXdvcmtHcm91cCIsInBhcmFtIiwiZnJhbWV3b3JrIiwic3RhY2tGcmFtZXMiLCJqc3hzIiwiY2hpbGRyZW4iLCJ0YWJJbmRleCIsImpzeCIsIkNvbGxhcHNlSWNvbiIsIkZyYW1ld29ya0ljb24iLCJtYXAiLCJmcmFtZSIsImluZGV4IiwiQ2FsbFN0YWNrRnJhbWUiLCJncm91cGVkU3RhY2tGcmFtZXMiLCJzaG93IiwiRnJhZ21lbnQiLCJzdGFja0ZyYW1lc0dyb3VwIiwiZ3JvdXBJbmRleCIsImZyYW1lSW5kZXgiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7144\n");

/***/ }),

/***/ 7267:
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/container/RuntimeError/component-stack-pseudo-html.js ***!
  \***********************************************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"PseudoHtmlDiff\", ({\n    enumerable: true,\n    get: function() {\n        return PseudoHtmlDiff;\n    }\n}));\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ 7247);\nconst _react = __webpack_require__(/*! react */ 8964);\nconst _CollapseIcon = __webpack_require__(/*! ../../icons/CollapseIcon */ 9407);\nfunction getAdjacentProps(isAdj) {\n    return {\n        \"data-nextjs-container-errors-pseudo-html--tag-adjacent\": isAdj\n    };\n}\nfunction PseudoHtmlDiff(param) {\n    let { componentStackFrames, firstContent, secondContent, hydrationMismatchType, ...props } = param;\n    const isHtmlTagsWarning = hydrationMismatchType === \"tag\";\n    // For text mismatch, mismatched text will take 2 rows, so we display 4 rows of component stack\n    const MAX_NON_COLLAPSED_FRAMES = isHtmlTagsWarning ? 6 : 4;\n    const shouldCollapse = componentStackFrames.length > MAX_NON_COLLAPSED_FRAMES;\n    const [isHtmlCollapsed, toggleCollapseHtml] = (0, _react.useState)(shouldCollapse);\n    const htmlComponents = (0, _react.useMemo)(()=>{\n        const tagNames = isHtmlTagsWarning ? [\n            firstContent.replace(/<|>/g, \"\"),\n            secondContent.replace(/<|>/g, \"\")\n        ] : [];\n        const nestedHtmlStack = [];\n        let lastText = \"\";\n        const componentStack = componentStackFrames.map((frame)=>frame.component).reverse();\n        // [child index, parent index]\n        const matchedIndex = [\n            -1,\n            -1\n        ];\n        if (isHtmlTagsWarning) {\n            // Reverse search for the child tag\n            for(let i = componentStack.length - 1; i >= 0; i--){\n                if (componentStack[i] === tagNames[0]) {\n                    matchedIndex[0] = i;\n                    break;\n                }\n            }\n            // Start searching parent tag from child tag above\n            for(let i = matchedIndex[0] - 1; i >= 0; i--){\n                if (componentStack[i] === tagNames[1]) {\n                    matchedIndex[1] = i;\n                    break;\n                }\n            }\n        }\n        componentStack.forEach((component, index, componentList)=>{\n            const spaces = \" \".repeat(nestedHtmlStack.length * 2);\n            // const prevComponent = componentList[index - 1]\n            // const nextComponent = componentList[index + 1]\n            // When component is the server or client tag name, highlight it\n            const isHighlightedTag = isHtmlTagsWarning ? index === matchedIndex[0] || index === matchedIndex[1] : tagNames.includes(component);\n            const isAdjacentTag = isHighlightedTag || Math.abs(index - matchedIndex[0]) <= 1 || Math.abs(index - matchedIndex[1]) <= 1;\n            const isLastFewFrames = !isHtmlTagsWarning && index >= componentList.length - 6;\n            const adjProps = getAdjacentProps(isAdjacentTag);\n            if (isHtmlTagsWarning && isAdjacentTag || isLastFewFrames) {\n                const codeLine = /*#__PURE__*/ (0, _jsxruntime.jsxs)(\"span\", {\n                    children: [\n                        spaces,\n                        /*#__PURE__*/ (0, _jsxruntime.jsx)(\"span\", {\n                            ...adjProps,\n                            ...isHighlightedTag ? {\n                                \"data-nextjs-container-errors-pseudo-html--tag-error\": true\n                            } : undefined,\n                            children: \"<\" + component + \">\\n\"\n                        })\n                    ]\n                });\n                lastText = component;\n                const wrappedCodeLine = /*#__PURE__*/ (0, _jsxruntime.jsxs)(_react.Fragment, {\n                    children: [\n                        codeLine,\n                        isHighlightedTag && /*#__PURE__*/ (0, _jsxruntime.jsx)(\"span\", {\n                            \"data-nextjs-container-errors-pseudo-html--hint\": true,\n                            children: spaces + \"^\".repeat(component.length + 2) + \"\\n\"\n                        })\n                    ]\n                }, nestedHtmlStack.length);\n                nestedHtmlStack.push(wrappedCodeLine);\n            } else {\n                if (nestedHtmlStack.length >= MAX_NON_COLLAPSED_FRAMES && isHtmlCollapsed) {\n                    return;\n                }\n                if (!isHtmlCollapsed || isLastFewFrames) {\n                    nestedHtmlStack.push(/*#__PURE__*/ (0, _react.createElement)(\"span\", {\n                        ...adjProps,\n                        key: nestedHtmlStack.length,\n                        children: [\n                            spaces,\n                            \"<\" + component + \">\\n\"\n                        ]\n                    }));\n                } else if (isHtmlCollapsed && lastText !== \"...\") {\n                    lastText = \"...\";\n                    nestedHtmlStack.push(/*#__PURE__*/ (0, _react.createElement)(\"span\", {\n                        ...adjProps,\n                        key: nestedHtmlStack.length,\n                        children: [\n                            spaces,\n                            \"...\\n\"\n                        ]\n                    }));\n                }\n            }\n        });\n        // Hydration mismatch: text or text-tag\n        if (!isHtmlTagsWarning) {\n            const spaces = \" \".repeat(nestedHtmlStack.length * 2);\n            let wrappedCodeLine;\n            if (hydrationMismatchType === \"text\") {\n                // hydration type is \"text\", represent [server content, client content]\n                wrappedCodeLine = /*#__PURE__*/ (0, _jsxruntime.jsxs)(_react.Fragment, {\n                    children: [\n                        /*#__PURE__*/ (0, _jsxruntime.jsx)(\"span\", {\n                            \"data-nextjs-container-errors-pseudo-html--diff-remove\": true,\n                            children: spaces + ('\"' + firstContent + '\"\\n')\n                        }),\n                        /*#__PURE__*/ (0, _jsxruntime.jsx)(\"span\", {\n                            \"data-nextjs-container-errors-pseudo-html--diff-add\": true,\n                            children: spaces + ('\"' + secondContent + '\"\\n')\n                        })\n                    ]\n                }, nestedHtmlStack.length);\n            } else {\n                // hydration type is \"text-in-tag\", represent [parent tag, mismatch content]\n                wrappedCodeLine = /*#__PURE__*/ (0, _jsxruntime.jsxs)(_react.Fragment, {\n                    children: [\n                        /*#__PURE__*/ (0, _jsxruntime.jsx)(\"span\", {\n                            \"data-nextjs-container-errors-pseudo-html--tag-adjacent\": true,\n                            children: spaces + (\"<\" + secondContent + \">\\n\")\n                        }),\n                        /*#__PURE__*/ (0, _jsxruntime.jsx)(\"span\", {\n                            \"data-nextjs-container-errors-pseudo-html--diff-remove\": true,\n                            children: spaces + ('  \"' + firstContent + '\"\\n')\n                        })\n                    ]\n                }, nestedHtmlStack.length);\n            }\n            nestedHtmlStack.push(wrappedCodeLine);\n        }\n        return nestedHtmlStack;\n    }, [\n        componentStackFrames,\n        isHtmlCollapsed,\n        firstContent,\n        secondContent,\n        isHtmlTagsWarning,\n        hydrationMismatchType,\n        MAX_NON_COLLAPSED_FRAMES\n    ]);\n    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(\"div\", {\n        \"data-nextjs-container-errors-pseudo-html\": true,\n        children: [\n            /*#__PURE__*/ (0, _jsxruntime.jsx)(\"button\", {\n                tabIndex: 10,\n                \"data-nextjs-container-errors-pseudo-html-collapse\": true,\n                onClick: ()=>toggleCollapseHtml(!isHtmlCollapsed),\n                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_CollapseIcon.CollapseIcon, {\n                    collapsed: isHtmlCollapsed\n                })\n            }),\n            /*#__PURE__*/ (0, _jsxruntime.jsx)(\"pre\", {\n                ...props,\n                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(\"code\", {\n                    children: htmlComponents\n                })\n            })\n        ]\n    });\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=component-stack-pseudo-html.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7267\n");

/***/ }),

/***/ 2717:
/*!*************************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/container/RuntimeError/index.js ***!
  \*************************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    RuntimeError: function() {\n        return RuntimeError;\n    },\n    styles: function() {\n        return styles;\n    }\n});\nconst _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ 6870);\nconst _tagged_template_literal_loose = __webpack_require__(/*! @swc/helpers/_/_tagged_template_literal_loose */ 7614);\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ 7247);\nconst _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! react */ 8964));\nconst _CodeFrame = __webpack_require__(/*! ../../components/CodeFrame */ 2712);\nconst _nooptemplate = __webpack_require__(/*! ../../helpers/noop-template */ 2037);\nconst _groupstackframesbyframework = __webpack_require__(/*! ../../helpers/group-stack-frames-by-framework */ 4115);\nconst _GroupedStackFrames = __webpack_require__(/*! ./GroupedStackFrames */ 7144);\nfunction _templateObject() {\n    const data = _tagged_template_literal_loose._([\n        \"\\n  button[data-nextjs-data-runtime-error-collapsed-action] {\\n    background: none;\\n    border: none;\\n    padding: 0;\\n    font-size: var(--size-font-small);\\n    line-height: var(--size-font-bigger);\\n    color: var(--color-accents-3);\\n  }\\n\\n  [data-nextjs-call-stack-frame]:not(:last-child),\\n  [data-nextjs-component-stack-frame]:not(:last-child) {\\n    margin-bottom: var(--size-gap-double);\\n  }\\n\\n  [data-nextjs-call-stack-frame] > h3,\\n  [data-nextjs-component-stack-frame] > h3 {\\n    margin-top: 0;\\n    margin-bottom: var(--size-gap);\\n    font-family: var(--font-stack-monospace);\\n    font-size: var(--size-font);\\n    color: #222;\\n  }\\n  [data-nextjs-call-stack-frame] > h3[data-nextjs-frame-expanded='false'] {\\n    color: #666;\\n  }\\n  [data-nextjs-call-stack-frame] > div,\\n  [data-nextjs-component-stack-frame] > div {\\n    display: flex;\\n    align-items: center;\\n    padding-left: calc(var(--size-gap) + var(--size-gap-half));\\n    font-size: var(--size-font-small);\\n    color: #999;\\n  }\\n  [data-nextjs-call-stack-frame] > div > svg,\\n  [data-nextjs-component-stack-frame] > [role='link'] > svg {\\n    width: auto;\\n    height: var(--size-font-small);\\n    margin-left: var(--size-gap);\\n    flex-shrink: 0;\\n\\n    display: none;\\n  }\\n\\n  [data-nextjs-call-stack-frame] > div[data-has-source],\\n  [data-nextjs-component-stack-frame] > [role='link'] {\\n    cursor: pointer;\\n  }\\n  [data-nextjs-call-stack-frame] > div[data-has-source]:hover,\\n  [data-nextjs-component-stack-frame] > [role='link']:hover {\\n    text-decoration: underline dotted;\\n  }\\n  [data-nextjs-call-stack-frame] > div[data-has-source] > svg,\\n  [data-nextjs-component-stack-frame] > [role='link'] > svg {\\n    display: unset;\\n  }\\n\\n  [data-nextjs-call-stack-framework-icon] {\\n    margin-right: var(--size-gap);\\n  }\\n  [data-nextjs-call-stack-framework-icon='next'] > mask {\\n    mask-type: alpha;\\n  }\\n  [data-nextjs-call-stack-framework-icon='react'] {\\n    color: rgb(20, 158, 202);\\n  }\\n  [data-nextjs-collapsed-call-stack-details][open]\\n    [data-nextjs-call-stack-chevron-icon] {\\n    transform: rotate(90deg);\\n  }\\n  [data-nextjs-collapsed-call-stack-details] summary {\\n    display: flex;\\n    align-items: center;\\n    margin-bottom: var(--size-gap);\\n    list-style: none;\\n  }\\n  [data-nextjs-collapsed-call-stack-details] summary::-webkit-details-marker {\\n    display: none;\\n  }\\n\\n  [data-nextjs-collapsed-call-stack-details] h3 {\\n    color: #666;\\n  }\\n  [data-nextjs-collapsed-call-stack-details] [data-nextjs-call-stack-frame] {\\n    margin-bottom: var(--size-gap-double);\\n  }\\n\\n  [data-nextjs-container-errors-pseudo-html] {\\n    position: relative;\\n  }\\n  [data-nextjs-container-errors-pseudo-html-collapse] {\\n    position: absolute;\\n    left: 10px;\\n    top: 10px;\\n    color: inherit;\\n    background: none;\\n    border: none;\\n    padding: 0;\\n  }\\n  [data-nextjs-container-errors-pseudo-html--diff-add] {\\n    color: var(--color-ansi-green);\\n  }\\n  [data-nextjs-container-errors-pseudo-html--diff-remove] {\\n    color: var(--color-ansi-red);\\n  }\\n  [data-nextjs-container-errors-pseudo-html--tag-error] {\\n    color: var(--color-ansi-red);\\n    font-weight: bold;\\n  }\\n  /* hide but text are still accessible in DOM */\\n  [data-nextjs-container-errors-pseudo-html--hint] {\\n    display: inline-block;\\n    font-size: 0;\\n  }\\n  [data-nextjs-container-errors-pseudo-html--tag-adjacent='false'] {\\n    color: var(--color-accents-1);\\n  }\\n\"\n    ]);\n    _templateObject = function() {\n        return data;\n    };\n    return data;\n}\nfunction RuntimeError(param) {\n    let { error } = param;\n    const { firstFrame, allLeadingFrames, allCallStackFrames } = _react.useMemo(()=>{\n        const filteredFrames = error.frames.filter((f)=>{\n            var _f_sourceStackFrame_file;\n            return !(f.sourceStackFrame.file === \"<anonymous>\" && [\n                \"stringify\",\n                \"<unknown>\"\n            ].includes(f.sourceStackFrame.methodName)) && !((_f_sourceStackFrame_file = f.sourceStackFrame.file) == null ? void 0 : _f_sourceStackFrame_file.startsWith(\"node:internal\"));\n        });\n        const firstFirstPartyFrameIndex = filteredFrames.findIndex((entry)=>entry.expanded && Boolean(entry.originalCodeFrame) && Boolean(entry.originalStackFrame));\n        var _filteredFrames_firstFirstPartyFrameIndex;\n        return {\n            firstFrame: (_filteredFrames_firstFirstPartyFrameIndex = filteredFrames[firstFirstPartyFrameIndex]) != null ? _filteredFrames_firstFirstPartyFrameIndex : null,\n            allLeadingFrames: firstFirstPartyFrameIndex < 0 ? [] : filteredFrames.slice(0, firstFirstPartyFrameIndex),\n            allCallStackFrames: filteredFrames.slice(firstFirstPartyFrameIndex + 1)\n        };\n    }, [\n        error.frames\n    ]);\n    const [all, setAll] = _react.useState(firstFrame == null);\n    const { canShowMore, leadingFramesGroupedByFramework, stackFramesGroupedByFramework } = _react.useMemo(()=>{\n        const leadingFrames = allLeadingFrames.filter((f)=>f.expanded || all);\n        const visibleCallStackFrames = allCallStackFrames.filter((f)=>f.expanded || all);\n        return {\n            canShowMore: allCallStackFrames.length !== visibleCallStackFrames.length || all && firstFrame != null,\n            stackFramesGroupedByFramework: (0, _groupstackframesbyframework.groupStackFramesByFramework)(allCallStackFrames),\n            leadingFramesGroupedByFramework: (0, _groupstackframesbyframework.groupStackFramesByFramework)(leadingFrames)\n        };\n    }, [\n        all,\n        allCallStackFrames,\n        allLeadingFrames,\n        firstFrame\n    ]);\n    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_react.Fragment, {\n        children: [\n            firstFrame ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_react.Fragment, {\n                children: [\n                    /*#__PURE__*/ (0, _jsxruntime.jsx)(\"h2\", {\n                        children: \"Source\"\n                    }),\n                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_GroupedStackFrames.GroupedStackFrames, {\n                        groupedStackFrames: leadingFramesGroupedByFramework,\n                        show: all\n                    }),\n                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_CodeFrame.CodeFrame, {\n                        stackFrame: firstFrame.originalStackFrame,\n                        codeFrame: firstFrame.originalCodeFrame\n                    })\n                ]\n            }) : undefined,\n            stackFramesGroupedByFramework.length ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_react.Fragment, {\n                children: [\n                    /*#__PURE__*/ (0, _jsxruntime.jsx)(\"h2\", {\n                        children: \"Call Stack\"\n                    }),\n                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_GroupedStackFrames.GroupedStackFrames, {\n                        groupedStackFrames: stackFramesGroupedByFramework,\n                        show: all\n                    })\n                ]\n            }) : undefined,\n            canShowMore ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.Fragment, {\n                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(\"button\", {\n                    tabIndex: 10,\n                    \"data-nextjs-data-runtime-error-collapsed-action\": true,\n                    type: \"button\",\n                    onClick: ()=>setAll(!all),\n                    children: [\n                        all ? \"Hide\" : \"Show\",\n                        \" collapsed frames\"\n                    ]\n                })\n            }) : undefined\n        ]\n    });\n}\nconst styles = (0, _nooptemplate.noop)(_templateObject());\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2717\n");

/***/ }),

/***/ 5872:
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/container/root-layout-missing-tags-error.js ***!
  \*************************************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"RootLayoutMissingTagsError\", ({\n    enumerable: true,\n    get: function() {\n        return RootLayoutMissingTagsError;\n    }\n}));\nconst _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ 6870);\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ 7247);\nconst _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! react */ 8964));\nconst _Dialog = __webpack_require__(/*! ../components/Dialog */ 893);\nconst _Overlay = __webpack_require__(/*! ../components/Overlay */ 6740);\nconst _VersionStalenessInfo = __webpack_require__(/*! ../components/VersionStalenessInfo */ 6422);\nconst _hotlinkedtext = __webpack_require__(/*! ../components/hot-linked-text */ 8745);\nconst RootLayoutMissingTagsError = function RootLayoutMissingTagsError(param) {\n    let { missingTags, versionInfo } = param;\n    const noop = _react.useCallback(()=>{}, []);\n    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_Overlay.Overlay, {\n        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Dialog.Dialog, {\n            type: \"error\",\n            \"aria-labelledby\": \"nextjs__container_errors_label\",\n            \"aria-describedby\": \"nextjs__container_errors_desc\",\n            onClose: noop,\n            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Dialog.DialogContent, {\n                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_Dialog.DialogHeader, {\n                    className: \"nextjs-container-errors-header\",\n                    children: [\n                        /*#__PURE__*/ (0, _jsxruntime.jsx)(\"h3\", {\n                            id: \"nextjs__container_errors_label\",\n                            children: \"Missing required html tags\"\n                        }),\n                        versionInfo ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_VersionStalenessInfo.VersionStalenessInfo, {\n                            ...versionInfo\n                        }) : null,\n                        /*#__PURE__*/ (0, _jsxruntime.jsx)(\"p\", {\n                            id: \"nextjs__container_errors_desc\",\n                            className: \"nextjs__container_errors_desc\",\n                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_hotlinkedtext.HotlinkedText, {\n                                text: \"The following tags are missing in the Root Layout: \" + missingTags.map((tagName)=>\"<\" + tagName + \">\").join(\", \") + \".\\nRead more at https://nextjs.org/docs/messages/missing-root-layout-tags\"\n                            })\n                        })\n                    ]\n                })\n            })\n        })\n    });\n};\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=root-layout-missing-tags-error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTg3Mi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsOERBQTZEO0lBQ3pESSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsNEJBQTRCQyxtQkFBT0EsQ0FBQyxvREFBMEM7QUFDcEYsTUFBTUMsY0FBY0QsbUJBQU9BLENBQUMsNkJBQW1CO0FBQy9DLE1BQU1FLFNBQVMsV0FBVyxHQUFHSCwwQkFBMEJJLENBQUMsQ0FBQ0gsbUJBQU9BLENBQUMsaUJBQU87QUFDeEUsTUFBTUksVUFBVUosbUJBQU9BLENBQUMsK0JBQXNCO0FBQzlDLE1BQU1LLFdBQVdMLG1CQUFPQSxDQUFDLGlDQUF1QjtBQUNoRCxNQUFNTSx3QkFBd0JOLG1CQUFPQSxDQUFDLDhDQUFvQztBQUMxRSxNQUFNTyxpQkFBaUJQLG1CQUFPQSxDQUFDLHlDQUErQjtBQUM5RCxNQUFNRiw2QkFBNkIsU0FBU0EsMkJBQTJCVSxLQUFLO0lBQ3hFLElBQUksRUFBRUMsV0FBVyxFQUFFQyxXQUFXLEVBQUUsR0FBR0Y7SUFDbkMsTUFBTUcsT0FBT1QsT0FBT1UsV0FBVyxDQUFDLEtBQUssR0FBRyxFQUFFO0lBQzFDLE9BQXFCLFdBQUgsR0FBSSxJQUFHWCxZQUFZWSxHQUFHLEVBQUVSLFNBQVNTLE9BQU8sRUFBRTtRQUN4REMsVUFBd0IsV0FBSCxHQUFJLElBQUdkLFlBQVlZLEdBQUcsRUFBRVQsUUFBUVksTUFBTSxFQUFFO1lBQ3pEQyxNQUFNO1lBQ04sbUJBQW1CO1lBQ25CLG9CQUFvQjtZQUNwQkMsU0FBU1A7WUFDVEksVUFBd0IsV0FBSCxHQUFJLElBQUdkLFlBQVlZLEdBQUcsRUFBRVQsUUFBUWUsYUFBYSxFQUFFO2dCQUNoRUosVUFBd0IsV0FBSCxHQUFJLElBQUdkLFlBQVltQixJQUFJLEVBQUVoQixRQUFRaUIsWUFBWSxFQUFFO29CQUNoRUMsV0FBVztvQkFDWFAsVUFBVTt3QkFDTixXQUFXLEdBQUksSUFBR2QsWUFBWVksR0FBRyxFQUFFLE1BQU07NEJBQ3JDVSxJQUFJOzRCQUNKUixVQUFVO3dCQUNkO3dCQUNBTCxjQUE0QixXQUFILEdBQUksSUFBR1QsWUFBWVksR0FBRyxFQUFFUCxzQkFBc0JrQixvQkFBb0IsRUFBRTs0QkFDekYsR0FBR2QsV0FBVzt3QkFDbEIsS0FBSzt3QkFDTCxXQUFXLEdBQUksSUFBR1QsWUFBWVksR0FBRyxFQUFFLEtBQUs7NEJBQ3BDVSxJQUFJOzRCQUNKRCxXQUFXOzRCQUNYUCxVQUF3QixXQUFILEdBQUksSUFBR2QsWUFBWVksR0FBRyxFQUFFTixlQUFla0IsYUFBYSxFQUFFO2dDQUN2RUMsTUFBTSx3REFBd0RqQixZQUFZa0IsR0FBRyxDQUFDLENBQUNDLFVBQVUsTUFBTUEsVUFBVSxLQUFLQyxJQUFJLENBQUMsUUFBUTs0QkFDL0g7d0JBQ0o7cUJBQ0g7Z0JBQ0w7WUFDSjtRQUNKO0lBQ0o7QUFDSjtBQUVBLElBQUksQ0FBQyxPQUFPbkMsUUFBUW9DLE9BQU8sS0FBSyxjQUFlLE9BQU9wQyxRQUFRb0MsT0FBTyxLQUFLLFlBQVlwQyxRQUFRb0MsT0FBTyxLQUFLLElBQUksS0FBTSxPQUFPcEMsUUFBUW9DLE9BQU8sQ0FBQ0MsVUFBVSxLQUFLLGFBQWE7SUFDckt2QyxPQUFPQyxjQUFjLENBQUNDLFFBQVFvQyxPQUFPLEVBQUUsY0FBYztRQUFFbkMsT0FBTztJQUFLO0lBQ25FSCxPQUFPd0MsTUFBTSxDQUFDdEMsUUFBUW9DLE9BQU8sRUFBRXBDO0lBQy9CdUMsT0FBT3ZDLE9BQU8sR0FBR0EsUUFBUW9DLE9BQU87QUFDbEMsRUFFQSwwREFBMEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9yZWFjdC1kZXYtb3ZlcmxheS9pbnRlcm5hbC9jb250YWluZXIvcm9vdC1sYXlvdXQtbWlzc2luZy10YWdzLWVycm9yLmpzPzY3NzciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJSb290TGF5b3V0TWlzc2luZ1RhZ3NFcnJvclwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gUm9vdExheW91dE1pc3NpbmdUYWdzRXJyb3I7XG4gICAgfVxufSk7XG5jb25zdCBfaW50ZXJvcF9yZXF1aXJlX3dpbGRjYXJkID0gcmVxdWlyZShcIkBzd2MvaGVscGVycy9fL19pbnRlcm9wX3JlcXVpcmVfd2lsZGNhcmRcIik7XG5jb25zdCBfanN4cnVudGltZSA9IHJlcXVpcmUoXCJyZWFjdC9qc3gtcnVudGltZVwiKTtcbmNvbnN0IF9yZWFjdCA9IC8qI19fUFVSRV9fKi8gX2ludGVyb3BfcmVxdWlyZV93aWxkY2FyZC5fKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5jb25zdCBfRGlhbG9nID0gcmVxdWlyZShcIi4uL2NvbXBvbmVudHMvRGlhbG9nXCIpO1xuY29uc3QgX092ZXJsYXkgPSByZXF1aXJlKFwiLi4vY29tcG9uZW50cy9PdmVybGF5XCIpO1xuY29uc3QgX1ZlcnNpb25TdGFsZW5lc3NJbmZvID0gcmVxdWlyZShcIi4uL2NvbXBvbmVudHMvVmVyc2lvblN0YWxlbmVzc0luZm9cIik7XG5jb25zdCBfaG90bGlua2VkdGV4dCA9IHJlcXVpcmUoXCIuLi9jb21wb25lbnRzL2hvdC1saW5rZWQtdGV4dFwiKTtcbmNvbnN0IFJvb3RMYXlvdXRNaXNzaW5nVGFnc0Vycm9yID0gZnVuY3Rpb24gUm9vdExheW91dE1pc3NpbmdUYWdzRXJyb3IocGFyYW0pIHtcbiAgICBsZXQgeyBtaXNzaW5nVGFncywgdmVyc2lvbkluZm8gfSA9IHBhcmFtO1xuICAgIGNvbnN0IG5vb3AgPSBfcmVhY3QudXNlQ2FsbGJhY2soKCk9Pnt9LCBbXSk7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi8gKDAsIF9qc3hydW50aW1lLmpzeCkoX092ZXJsYXkuT3ZlcmxheSwge1xuICAgICAgICBjaGlsZHJlbjogLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4KShfRGlhbG9nLkRpYWxvZywge1xuICAgICAgICAgICAgdHlwZTogXCJlcnJvclwiLFxuICAgICAgICAgICAgXCJhcmlhLWxhYmVsbGVkYnlcIjogXCJuZXh0anNfX2NvbnRhaW5lcl9lcnJvcnNfbGFiZWxcIixcbiAgICAgICAgICAgIFwiYXJpYS1kZXNjcmliZWRieVwiOiBcIm5leHRqc19fY29udGFpbmVyX2Vycm9yc19kZXNjXCIsXG4gICAgICAgICAgICBvbkNsb3NlOiBub29wLFxuICAgICAgICAgICAgY2hpbGRyZW46IC8qI19fUFVSRV9fKi8gKDAsIF9qc3hydW50aW1lLmpzeCkoX0RpYWxvZy5EaWFsb2dDb250ZW50LCB7XG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IC8qI19fUFVSRV9fKi8gKDAsIF9qc3hydW50aW1lLmpzeHMpKF9EaWFsb2cuRGlhbG9nSGVhZGVyLCB7XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJuZXh0anMtY29udGFpbmVyLWVycm9ycy1oZWFkZXJcIixcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8qI19fUFVSRV9fKi8gKDAsIF9qc3hydW50aW1lLmpzeCkoXCJoM1wiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IFwibmV4dGpzX19jb250YWluZXJfZXJyb3JzX2xhYmVsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiTWlzc2luZyByZXF1aXJlZCBodG1sIHRhZ3NcIlxuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICB2ZXJzaW9uSW5mbyA/IC8qI19fUFVSRV9fKi8gKDAsIF9qc3hydW50aW1lLmpzeCkoX1ZlcnNpb25TdGFsZW5lc3NJbmZvLlZlcnNpb25TdGFsZW5lc3NJbmZvLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4udmVyc2lvbkluZm9cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pIDogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgIC8qI19fUFVSRV9fKi8gKDAsIF9qc3hydW50aW1lLmpzeCkoXCJwXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogXCJuZXh0anNfX2NvbnRhaW5lcl9lcnJvcnNfZGVzY1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJuZXh0anNfX2NvbnRhaW5lcl9lcnJvcnNfZGVzY1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiAvKiNfX1BVUkVfXyovICgwLCBfanN4cnVudGltZS5qc3gpKF9ob3RsaW5rZWR0ZXh0LkhvdGxpbmtlZFRleHQsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogXCJUaGUgZm9sbG93aW5nIHRhZ3MgYXJlIG1pc3NpbmcgaW4gdGhlIFJvb3QgTGF5b3V0OiBcIiArIG1pc3NpbmdUYWdzLm1hcCgodGFnTmFtZSk9PlwiPFwiICsgdGFnTmFtZSArIFwiPlwiKS5qb2luKFwiLCBcIikgKyBcIi5cXG5SZWFkIG1vcmUgYXQgaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlzc2luZy1yb290LWxheW91dC10YWdzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgIH0pO1xufTtcblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cm9vdC1sYXlvdXQtbWlzc2luZy10YWdzLWVycm9yLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJSb290TGF5b3V0TWlzc2luZ1RhZ3NFcnJvciIsIl9pbnRlcm9wX3JlcXVpcmVfd2lsZGNhcmQiLCJyZXF1aXJlIiwiX2pzeHJ1bnRpbWUiLCJfcmVhY3QiLCJfIiwiX0RpYWxvZyIsIl9PdmVybGF5IiwiX1ZlcnNpb25TdGFsZW5lc3NJbmZvIiwiX2hvdGxpbmtlZHRleHQiLCJwYXJhbSIsIm1pc3NpbmdUYWdzIiwidmVyc2lvbkluZm8iLCJub29wIiwidXNlQ2FsbGJhY2siLCJqc3giLCJPdmVybGF5IiwiY2hpbGRyZW4iLCJEaWFsb2ciLCJ0eXBlIiwib25DbG9zZSIsIkRpYWxvZ0NvbnRlbnQiLCJqc3hzIiwiRGlhbG9nSGVhZGVyIiwiY2xhc3NOYW1lIiwiaWQiLCJWZXJzaW9uU3RhbGVuZXNzSW5mbyIsIkhvdGxpbmtlZFRleHQiLCJ0ZXh0IiwibWFwIiwidGFnTmFtZSIsImpvaW4iLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///5872\n");

/***/ }),

/***/ 8729:
/*!****************************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/format-webpack-messages.js ***!
  \****************************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/**\nMIT License\n\nCopyright (c) 2015-present, Facebook, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return formatWebpackMessages;\n    }\n}));\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ 352);\nconst _stripansi = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! next/dist/compiled/strip-ansi */ 8860));\n// This file is based on https://github.com/facebook/create-react-app/blob/7b1a32be6ec9f99a6c9a3c66813f3ac09c4736b9/packages/react-dev-utils/formatWebpackMessages.js\n// It's been edited to remove chalk and CRA-specific logic\nconst friendlySyntaxErrorLabel = \"Syntax error:\";\nconst WEBPACK_BREAKING_CHANGE_POLYFILLS = \"\\n\\nBREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.\";\nfunction isLikelyASyntaxError(message) {\n    return (0, _stripansi.default)(message).includes(friendlySyntaxErrorLabel);\n}\nlet hadMissingSassError = false;\n// Cleans up webpack error messages.\nfunction formatMessage(message, verbose, importTraceNote) {\n    // TODO: Replace this once webpack 5 is stable\n    if (typeof message === \"object\" && message.message) {\n        const filteredModuleTrace = message.moduleTrace && message.moduleTrace.filter((trace)=>!/next-(middleware|client-pages|route|edge-function)-loader\\.js/.test(trace.originName));\n        let body = message.message;\n        const breakingChangeIndex = body.indexOf(WEBPACK_BREAKING_CHANGE_POLYFILLS);\n        if (breakingChangeIndex >= 0) {\n            body = body.slice(0, breakingChangeIndex);\n        }\n        message = (message.moduleName ? (0, _stripansi.default)(message.moduleName) + \"\\n\" : \"\") + (message.file ? (0, _stripansi.default)(message.file) + \"\\n\" : \"\") + body + (message.details && verbose ? \"\\n\" + message.details : \"\") + (filteredModuleTrace && filteredModuleTrace.length ? (importTraceNote || \"\\n\\nImport trace for requested module:\") + filteredModuleTrace.map((trace)=>\"\\n\" + trace.moduleName).join(\"\") : \"\") + (message.stack && verbose ? \"\\n\" + message.stack : \"\");\n    }\n    let lines = message.split(\"\\n\");\n    // Strip Webpack-added headers off errors/warnings\n    // https://github.com/webpack/webpack/blob/master/lib/ModuleError.js\n    lines = lines.filter((line)=>!/Module [A-z ]+\\(from/.test(line));\n    // Transform parsing error into syntax error\n    // TODO: move this to our ESLint formatter?\n    lines = lines.map((line)=>{\n        const parsingError = /Line (\\d+):(?:(\\d+):)?\\s*Parsing error: (.+)$/.exec(line);\n        if (!parsingError) {\n            return line;\n        }\n        const [, errorLine, errorColumn, errorMessage] = parsingError;\n        return friendlySyntaxErrorLabel + \" \" + errorMessage + \" (\" + errorLine + \":\" + errorColumn + \")\";\n    });\n    message = lines.join(\"\\n\");\n    // Smoosh syntax errors (commonly found in CSS)\n    message = message.replace(/SyntaxError\\s+\\((\\d+):(\\d+)\\)\\s*(.+?)\\n/g, \"\" + friendlySyntaxErrorLabel + \" $3 ($1:$2)\\n\");\n    // Clean up export errors\n    message = message.replace(/^.*export '(.+?)' was not found in '(.+?)'.*$/gm, \"Attempted import error: '$1' is not exported from '$2'.\");\n    message = message.replace(/^.*export 'default' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm, \"Attempted import error: '$2' does not contain a default export (imported as '$1').\");\n    message = message.replace(/^.*export '(.+?)' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm, \"Attempted import error: '$1' is not exported from '$3' (imported as '$2').\");\n    lines = message.split(\"\\n\");\n    // Remove leading newline\n    if (lines.length > 2 && lines[1].trim() === \"\") {\n        lines.splice(1, 1);\n    }\n    // Cleans up verbose \"module not found\" messages for files and packages.\n    if (lines[1] && lines[1].indexOf(\"Module not found: \") === 0) {\n        lines = [\n            lines[0],\n            lines[1].replace(\"Error: \", \"\").replace(\"Module not found: Cannot find file:\", \"Cannot find file:\"),\n            ...lines.slice(2)\n        ];\n    }\n    // Add helpful message for users trying to use Sass for the first time\n    if (lines[1] && lines[1].match(/Cannot find module.+sass/)) {\n        // ./file.module.scss (<<loader info>>) => ./file.module.scss\n        const firstLine = lines[0].split(\"!\");\n        lines[0] = firstLine[firstLine.length - 1];\n        lines[1] = \"To use Next.js' built-in Sass support, you first need to install `sass`.\\n\";\n        lines[1] += \"Run `npm i sass` or `yarn add sass` inside your workspace.\\n\";\n        lines[1] += \"\\nLearn more: https://nextjs.org/docs/messages/install-sass\";\n        // dispose of unhelpful stack trace\n        lines = lines.slice(0, 2);\n        hadMissingSassError = true;\n    } else if (hadMissingSassError && message.match(/(sass-loader|resolve-url-loader: CSS error)/)) {\n        // dispose of unhelpful stack trace following missing sass module\n        lines = [];\n    }\n    if (!verbose) {\n        message = lines.join(\"\\n\");\n        // Internal stacks are generally useless so we strip them... with the\n        // exception of stacks containing `webpack:` because they're normally\n        // from user code generated by Webpack. For more information see\n        // https://github.com/facebook/create-react-app/pull/1050\n        message = message.replace(/^\\s*at\\s((?!webpack:).)*:\\d+:\\d+[\\s)]*(\\n|$)/gm, \"\") // at ... ...:x:y\n        ;\n        message = message.replace(/^\\s*at\\s<anonymous>(\\n|$)/gm, \"\") // at <anonymous>\n        ;\n        message = message.replace(/File was processed with these loaders:\\n(.+[\\\\/](next[\\\\/]dist[\\\\/].+|@next[\\\\/]react-refresh-utils[\\\\/]loader)\\.js\\n)*You may need an additional loader to handle the result of these loaders.\\n/g, \"\");\n        lines = message.split(\"\\n\");\n    }\n    // Remove duplicated newlines\n    lines = lines.filter((line, index, arr)=>index === 0 || line.trim() !== \"\" || line.trim() !== arr[index - 1].trim());\n    // Reassemble the message\n    message = lines.join(\"\\n\");\n    return message.trim();\n}\nfunction formatWebpackMessages(json, verbose) {\n    const formattedErrors = json.errors.map((message)=>{\n        const isUnknownNextFontError = message.message.includes(\"An error occurred in `next/font`.\");\n        return formatMessage(message, isUnknownNextFontError || verbose);\n    });\n    const formattedWarnings = json.warnings.map((message)=>{\n        return formatMessage(message, verbose);\n    });\n    // Reorder errors to put the most relevant ones first.\n    let reactServerComponentsError = -1;\n    for(let i = 0; i < formattedErrors.length; i++){\n        const error = formattedErrors[i];\n        if (error.includes(\"ReactServerComponentsError\")) {\n            reactServerComponentsError = i;\n            break;\n        }\n    }\n    // Move the reactServerComponentsError to the top if it exists\n    if (reactServerComponentsError !== -1) {\n        const error = formattedErrors.splice(reactServerComponentsError, 1);\n        formattedErrors.unshift(error[0]);\n    }\n    const result = {\n        ...json,\n        errors: formattedErrors,\n        warnings: formattedWarnings\n    };\n    if (!verbose && result.errors.some(isLikelyASyntaxError)) {\n        // If there are any syntax errors, show just them.\n        result.errors = result.errors.filter(isLikelyASyntaxError);\n        result.warnings = [];\n    }\n    return result;\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=format-webpack-messages.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8729\n");

/***/ }),

/***/ 1103:
/*!*******************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/get-socket-url.js ***!
  \*******************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"getSocketUrl\", ({\n    enumerable: true,\n    get: function() {\n        return getSocketUrl;\n    }\n}));\nconst _normalizedassetprefix = __webpack_require__(/*! ../../../../../shared/lib/normalized-asset-prefix */ 6784);\nfunction getSocketProtocol(assetPrefix) {\n    let protocol = window.location.protocol;\n    try {\n        // assetPrefix is a url\n        protocol = new URL(assetPrefix).protocol;\n    } catch (e) {}\n    return protocol === \"http:\" ? \"ws:\" : \"wss:\";\n}\nfunction getSocketUrl(assetPrefix) {\n    const prefix = (0, _normalizedassetprefix.normalizedAssetPrefix)(assetPrefix);\n    const protocol = getSocketProtocol(assetPrefix || \"\");\n    if (URL.canParse(prefix)) {\n        // since normalized asset prefix is ensured to be a URL format,\n        // we can safely replace the protocol\n        return prefix.replace(/^http/, \"ws\");\n    }\n    const { hostname, port } = window.location;\n    return protocol + \"//\" + hostname + (port ? \":\" + port : \"\") + prefix;\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=get-socket-url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEwMy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsZ0RBQStDO0lBQzNDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMseUJBQXlCQyxtQkFBT0EsQ0FBQyw2REFBbUQ7QUFDMUYsU0FBU0Msa0JBQWtCQyxXQUFXO0lBQ2xDLElBQUlDLFdBQVdDLE9BQU9DLFFBQVEsQ0FBQ0YsUUFBUTtJQUN2QyxJQUFJO1FBQ0EsdUJBQXVCO1FBQ3ZCQSxXQUFXLElBQUlHLElBQUlKLGFBQWFDLFFBQVE7SUFDNUMsRUFBRSxPQUFPSSxHQUFHLENBQUM7SUFDYixPQUFPSixhQUFhLFVBQVUsUUFBUTtBQUMxQztBQUNBLFNBQVNMLGFBQWFJLFdBQVc7SUFDN0IsTUFBTU0sU0FBUyxDQUFDLEdBQUdULHVCQUF1QlUscUJBQXFCLEVBQUVQO0lBQ2pFLE1BQU1DLFdBQVdGLGtCQUFrQkMsZUFBZTtJQUNsRCxJQUFJSSxJQUFJSSxRQUFRLENBQUNGLFNBQVM7UUFDdEIsK0RBQStEO1FBQy9ELHFDQUFxQztRQUNyQyxPQUFPQSxPQUFPRyxPQUFPLENBQUMsU0FBUztJQUNuQztJQUNBLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxJQUFJLEVBQUUsR0FBR1QsT0FBT0MsUUFBUTtJQUMxQyxPQUFPRixXQUFXLE9BQU9TLFdBQVlDLENBQUFBLE9BQU8sTUFBTUEsT0FBTyxFQUFDLElBQUtMO0FBQ25FO0FBRUEsSUFBSSxDQUFDLE9BQU9kLFFBQVFvQixPQUFPLEtBQUssY0FBZSxPQUFPcEIsUUFBUW9CLE9BQU8sS0FBSyxZQUFZcEIsUUFBUW9CLE9BQU8sS0FBSyxJQUFJLEtBQU0sT0FBT3BCLFFBQVFvQixPQUFPLENBQUNDLFVBQVUsS0FBSyxhQUFhO0lBQ3JLdkIsT0FBT0MsY0FBYyxDQUFDQyxRQUFRb0IsT0FBTyxFQUFFLGNBQWM7UUFBRW5CLE9BQU87SUFBSztJQUNuRUgsT0FBT3dCLE1BQU0sQ0FBQ3RCLFFBQVFvQixPQUFPLEVBQUVwQjtJQUMvQnVCLE9BQU92QixPQUFPLEdBQUdBLFFBQVFvQixPQUFPO0FBQ2xDLEVBRUEsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvcmVhY3QtZGV2LW92ZXJsYXkvaW50ZXJuYWwvaGVscGVycy9nZXQtc29ja2V0LXVybC5qcz85ZTA4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZ2V0U29ja2V0VXJsXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBnZXRTb2NrZXRVcmw7XG4gICAgfVxufSk7XG5jb25zdCBfbm9ybWFsaXplZGFzc2V0cHJlZml4ID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uLy4uL3NoYXJlZC9saWIvbm9ybWFsaXplZC1hc3NldC1wcmVmaXhcIik7XG5mdW5jdGlvbiBnZXRTb2NrZXRQcm90b2NvbChhc3NldFByZWZpeCkge1xuICAgIGxldCBwcm90b2NvbCA9IHdpbmRvdy5sb2NhdGlvbi5wcm90b2NvbDtcbiAgICB0cnkge1xuICAgICAgICAvLyBhc3NldFByZWZpeCBpcyBhIHVybFxuICAgICAgICBwcm90b2NvbCA9IG5ldyBVUkwoYXNzZXRQcmVmaXgpLnByb3RvY29sO1xuICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgcmV0dXJuIHByb3RvY29sID09PSBcImh0dHA6XCIgPyBcIndzOlwiIDogXCJ3c3M6XCI7XG59XG5mdW5jdGlvbiBnZXRTb2NrZXRVcmwoYXNzZXRQcmVmaXgpIHtcbiAgICBjb25zdCBwcmVmaXggPSAoMCwgX25vcm1hbGl6ZWRhc3NldHByZWZpeC5ub3JtYWxpemVkQXNzZXRQcmVmaXgpKGFzc2V0UHJlZml4KTtcbiAgICBjb25zdCBwcm90b2NvbCA9IGdldFNvY2tldFByb3RvY29sKGFzc2V0UHJlZml4IHx8IFwiXCIpO1xuICAgIGlmIChVUkwuY2FuUGFyc2UocHJlZml4KSkge1xuICAgICAgICAvLyBzaW5jZSBub3JtYWxpemVkIGFzc2V0IHByZWZpeCBpcyBlbnN1cmVkIHRvIGJlIGEgVVJMIGZvcm1hdCxcbiAgICAgICAgLy8gd2UgY2FuIHNhZmVseSByZXBsYWNlIHRoZSBwcm90b2NvbFxuICAgICAgICByZXR1cm4gcHJlZml4LnJlcGxhY2UoL15odHRwLywgXCJ3c1wiKTtcbiAgICB9XG4gICAgY29uc3QgeyBob3N0bmFtZSwgcG9ydCB9ID0gd2luZG93LmxvY2F0aW9uO1xuICAgIHJldHVybiBwcm90b2NvbCArIFwiLy9cIiArIGhvc3RuYW1lICsgKHBvcnQgPyBcIjpcIiArIHBvcnQgOiBcIlwiKSArIHByZWZpeDtcbn1cblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0LXNvY2tldC11cmwuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsImdldFNvY2tldFVybCIsIl9ub3JtYWxpemVkYXNzZXRwcmVmaXgiLCJyZXF1aXJlIiwiZ2V0U29ja2V0UHJvdG9jb2wiLCJhc3NldFByZWZpeCIsInByb3RvY29sIiwid2luZG93IiwibG9jYXRpb24iLCJVUkwiLCJlIiwicHJlZml4Iiwibm9ybWFsaXplZEFzc2V0UHJlZml4IiwiY2FuUGFyc2UiLCJyZXBsYWNlIiwiaG9zdG5hbWUiLCJwb3J0IiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1103\n");

/***/ }),

/***/ 8622:
/*!*******************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/getErrorByType.js ***!
  \*******************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"getErrorByType\", ({\n    enumerable: true,\n    get: function() {\n        return getErrorByType;\n    }\n}));\nconst _shared = __webpack_require__(/*! ../../shared */ 5745);\nconst _stackframe = __webpack_require__(/*! ./stack-frame */ 9028);\nconst _errorsource = __webpack_require__(/*! ../../../../../shared/lib/error-source */ 2616);\nasync function getErrorByType(ev, isAppDir) {\n    const { id, event } = ev;\n    switch(event.type){\n        case _shared.ACTION_UNHANDLED_ERROR:\n        case _shared.ACTION_UNHANDLED_REJECTION:\n            {\n                const readyRuntimeError = {\n                    id,\n                    runtime: true,\n                    error: event.reason,\n                    frames: await (0, _stackframe.getOriginalStackFrames)(event.frames, (0, _errorsource.getErrorSource)(event.reason), isAppDir, event.reason.toString())\n                };\n                if (event.type === _shared.ACTION_UNHANDLED_ERROR) {\n                    readyRuntimeError.componentStackFrames = event.componentStackFrames;\n                }\n                return readyRuntimeError;\n            }\n        default:\n            {\n                break;\n            }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const _ = event;\n    throw new Error(\"type system invariant violation\");\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=getErrorByType.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODYyMi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsa0RBQWlEO0lBQzdDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsVUFBVUMsbUJBQU9BLENBQUMsd0JBQWM7QUFDdEMsTUFBTUMsY0FBY0QsbUJBQU9BLENBQUMseUJBQWU7QUFDM0MsTUFBTUUsZUFBZUYsbUJBQU9BLENBQUMsa0RBQXdDO0FBQ3JFLGVBQWVGLGVBQWVLLEVBQUUsRUFBRUMsUUFBUTtJQUN0QyxNQUFNLEVBQUVDLEVBQUUsRUFBRUMsS0FBSyxFQUFFLEdBQUdIO0lBQ3RCLE9BQU9HLE1BQU1DLElBQUk7UUFDYixLQUFLUixRQUFRUyxzQkFBc0I7UUFDbkMsS0FBS1QsUUFBUVUsMEJBQTBCO1lBQ25DO2dCQUNJLE1BQU1DLG9CQUFvQjtvQkFDdEJMO29CQUNBTSxTQUFTO29CQUNUQyxPQUFPTixNQUFNTyxNQUFNO29CQUNuQkMsUUFBUSxNQUFNLENBQUMsR0FBR2IsWUFBWWMsc0JBQXNCLEVBQUVULE1BQU1RLE1BQU0sRUFBRSxDQUFDLEdBQUdaLGFBQWFjLGNBQWMsRUFBRVYsTUFBTU8sTUFBTSxHQUFHVCxVQUFVRSxNQUFNTyxNQUFNLENBQUNJLFFBQVE7Z0JBQ3ZKO2dCQUNBLElBQUlYLE1BQU1DLElBQUksS0FBS1IsUUFBUVMsc0JBQXNCLEVBQUU7b0JBQy9DRSxrQkFBa0JRLG9CQUFvQixHQUFHWixNQUFNWSxvQkFBb0I7Z0JBQ3ZFO2dCQUNBLE9BQU9SO1lBQ1g7UUFDSjtZQUNJO2dCQUNJO1lBQ0o7SUFDUjtJQUNBLDZEQUE2RDtJQUM3RCxNQUFNUyxJQUFJYjtJQUNWLE1BQU0sSUFBSWMsTUFBTTtBQUNwQjtBQUVBLElBQUksQ0FBQyxPQUFPMUIsUUFBUTJCLE9BQU8sS0FBSyxjQUFlLE9BQU8zQixRQUFRMkIsT0FBTyxLQUFLLFlBQVkzQixRQUFRMkIsT0FBTyxLQUFLLElBQUksS0FBTSxPQUFPM0IsUUFBUTJCLE9BQU8sQ0FBQ0MsVUFBVSxLQUFLLGFBQWE7SUFDcks5QixPQUFPQyxjQUFjLENBQUNDLFFBQVEyQixPQUFPLEVBQUUsY0FBYztRQUFFMUIsT0FBTztJQUFLO0lBQ25FSCxPQUFPK0IsTUFBTSxDQUFDN0IsUUFBUTJCLE9BQU8sRUFBRTNCO0lBQy9COEIsT0FBTzlCLE9BQU8sR0FBR0EsUUFBUTJCLE9BQU87QUFDbEMsRUFFQSwwQ0FBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9yZWFjdC1kZXYtb3ZlcmxheS9pbnRlcm5hbC9oZWxwZXJzL2dldEVycm9yQnlUeXBlLmpzPzVhY2IiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJnZXRFcnJvckJ5VHlwZVwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gZ2V0RXJyb3JCeVR5cGU7XG4gICAgfVxufSk7XG5jb25zdCBfc2hhcmVkID0gcmVxdWlyZShcIi4uLy4uL3NoYXJlZFwiKTtcbmNvbnN0IF9zdGFja2ZyYW1lID0gcmVxdWlyZShcIi4vc3RhY2stZnJhbWVcIik7XG5jb25zdCBfZXJyb3Jzb3VyY2UgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vLi4vc2hhcmVkL2xpYi9lcnJvci1zb3VyY2VcIik7XG5hc3luYyBmdW5jdGlvbiBnZXRFcnJvckJ5VHlwZShldiwgaXNBcHBEaXIpIHtcbiAgICBjb25zdCB7IGlkLCBldmVudCB9ID0gZXY7XG4gICAgc3dpdGNoKGV2ZW50LnR5cGUpe1xuICAgICAgICBjYXNlIF9zaGFyZWQuQUNUSU9OX1VOSEFORExFRF9FUlJPUjpcbiAgICAgICAgY2FzZSBfc2hhcmVkLkFDVElPTl9VTkhBTkRMRURfUkVKRUNUSU9OOlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlYWR5UnVudGltZUVycm9yID0ge1xuICAgICAgICAgICAgICAgICAgICBpZCxcbiAgICAgICAgICAgICAgICAgICAgcnVudGltZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGV2ZW50LnJlYXNvbixcbiAgICAgICAgICAgICAgICAgICAgZnJhbWVzOiBhd2FpdCAoMCwgX3N0YWNrZnJhbWUuZ2V0T3JpZ2luYWxTdGFja0ZyYW1lcykoZXZlbnQuZnJhbWVzLCAoMCwgX2Vycm9yc291cmNlLmdldEVycm9yU291cmNlKShldmVudC5yZWFzb24pLCBpc0FwcERpciwgZXZlbnQucmVhc29uLnRvU3RyaW5nKCkpXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBpZiAoZXZlbnQudHlwZSA9PT0gX3NoYXJlZC5BQ1RJT05fVU5IQU5ETEVEX0VSUk9SKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlYWR5UnVudGltZUVycm9yLmNvbXBvbmVudFN0YWNrRnJhbWVzID0gZXZlbnQuY29tcG9uZW50U3RhY2tGcmFtZXM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiByZWFkeVJ1bnRpbWVFcnJvcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICB9XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuICAgIGNvbnN0IF8gPSBldmVudDtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJ0eXBlIHN5c3RlbSBpbnZhcmlhbnQgdmlvbGF0aW9uXCIpO1xufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRFcnJvckJ5VHlwZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZ2V0RXJyb3JCeVR5cGUiLCJfc2hhcmVkIiwicmVxdWlyZSIsIl9zdGFja2ZyYW1lIiwiX2Vycm9yc291cmNlIiwiZXYiLCJpc0FwcERpciIsImlkIiwiZXZlbnQiLCJ0eXBlIiwiQUNUSU9OX1VOSEFORExFRF9FUlJPUiIsIkFDVElPTl9VTkhBTkRMRURfUkVKRUNUSU9OIiwicmVhZHlSdW50aW1lRXJyb3IiLCJydW50aW1lIiwiZXJyb3IiLCJyZWFzb24iLCJmcmFtZXMiLCJnZXRPcmlnaW5hbFN0YWNrRnJhbWVzIiwiZ2V0RXJyb3JTb3VyY2UiLCJ0b1N0cmluZyIsImNvbXBvbmVudFN0YWNrRnJhbWVzIiwiXyIsIkVycm9yIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8622\n");

/***/ }),

/***/ 4115:
/*!************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/group-stack-frames-by-framework.js ***!
  \************************************************************************************************************************/
/***/ ((module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"groupStackFramesByFramework\", ({\n    enumerable: true,\n    get: function() {\n        return groupStackFramesByFramework;\n    }\n}));\nfunction groupStackFramesByFramework(stackFrames) {\n    const stackFramesGroupedByFramework = [];\n    for (const stackFrame of stackFrames){\n        const currentGroup = stackFramesGroupedByFramework[stackFramesGroupedByFramework.length - 1];\n        const framework = stackFrame.sourcePackage;\n        if (currentGroup && currentGroup.framework === framework) {\n            currentGroup.stackFrames.push(stackFrame);\n        } else {\n            stackFramesGroupedByFramework.push({\n                framework: framework,\n                stackFrames: [\n                    stackFrame\n                ]\n            });\n        }\n    }\n    return stackFramesGroupedByFramework;\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=group-stack-frames-by-framework.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDExNS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsK0RBQThEO0lBQzFESSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsU0FBU0EsNEJBQTRCQyxXQUFXO0lBQzVDLE1BQU1DLGdDQUFnQyxFQUFFO0lBQ3hDLEtBQUssTUFBTUMsY0FBY0YsWUFBWTtRQUNqQyxNQUFNRyxlQUFlRiw2QkFBNkIsQ0FBQ0EsOEJBQThCRyxNQUFNLEdBQUcsRUFBRTtRQUM1RixNQUFNQyxZQUFZSCxXQUFXSSxhQUFhO1FBQzFDLElBQUlILGdCQUFnQkEsYUFBYUUsU0FBUyxLQUFLQSxXQUFXO1lBQ3RERixhQUFhSCxXQUFXLENBQUNPLElBQUksQ0FBQ0w7UUFDbEMsT0FBTztZQUNIRCw4QkFBOEJNLElBQUksQ0FBQztnQkFDL0JGLFdBQVdBO2dCQUNYTCxhQUFhO29CQUNURTtpQkFDSDtZQUNMO1FBQ0o7SUFDSjtJQUNBLE9BQU9EO0FBQ1g7QUFFQSxJQUFJLENBQUMsT0FBT04sUUFBUWEsT0FBTyxLQUFLLGNBQWUsT0FBT2IsUUFBUWEsT0FBTyxLQUFLLFlBQVliLFFBQVFhLE9BQU8sS0FBSyxJQUFJLEtBQU0sT0FBT2IsUUFBUWEsT0FBTyxDQUFDQyxVQUFVLEtBQUssYUFBYTtJQUNyS2hCLE9BQU9DLGNBQWMsQ0FBQ0MsUUFBUWEsT0FBTyxFQUFFLGNBQWM7UUFBRVosT0FBTztJQUFLO0lBQ25FSCxPQUFPaUIsTUFBTSxDQUFDZixRQUFRYSxPQUFPLEVBQUViO0lBQy9CZ0IsT0FBT2hCLE9BQU8sR0FBR0EsUUFBUWEsT0FBTztBQUNsQyxFQUVBLDJEQUEyRCIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3JlYWN0LWRldi1vdmVybGF5L2ludGVybmFsL2hlbHBlcnMvZ3JvdXAtc3RhY2stZnJhbWVzLWJ5LWZyYW1ld29yay5qcz9iODg5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZ3JvdXBTdGFja0ZyYW1lc0J5RnJhbWV3b3JrXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBncm91cFN0YWNrRnJhbWVzQnlGcmFtZXdvcms7XG4gICAgfVxufSk7XG5mdW5jdGlvbiBncm91cFN0YWNrRnJhbWVzQnlGcmFtZXdvcmsoc3RhY2tGcmFtZXMpIHtcbiAgICBjb25zdCBzdGFja0ZyYW1lc0dyb3VwZWRCeUZyYW1ld29yayA9IFtdO1xuICAgIGZvciAoY29uc3Qgc3RhY2tGcmFtZSBvZiBzdGFja0ZyYW1lcyl7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRHcm91cCA9IHN0YWNrRnJhbWVzR3JvdXBlZEJ5RnJhbWV3b3JrW3N0YWNrRnJhbWVzR3JvdXBlZEJ5RnJhbWV3b3JrLmxlbmd0aCAtIDFdO1xuICAgICAgICBjb25zdCBmcmFtZXdvcmsgPSBzdGFja0ZyYW1lLnNvdXJjZVBhY2thZ2U7XG4gICAgICAgIGlmIChjdXJyZW50R3JvdXAgJiYgY3VycmVudEdyb3VwLmZyYW1ld29yayA9PT0gZnJhbWV3b3JrKSB7XG4gICAgICAgICAgICBjdXJyZW50R3JvdXAuc3RhY2tGcmFtZXMucHVzaChzdGFja0ZyYW1lKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHN0YWNrRnJhbWVzR3JvdXBlZEJ5RnJhbWV3b3JrLnB1c2goe1xuICAgICAgICAgICAgICAgIGZyYW1ld29yazogZnJhbWV3b3JrLFxuICAgICAgICAgICAgICAgIHN0YWNrRnJhbWVzOiBbXG4gICAgICAgICAgICAgICAgICAgIHN0YWNrRnJhbWVcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gc3RhY2tGcmFtZXNHcm91cGVkQnlGcmFtZXdvcms7XG59XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdyb3VwLXN0YWNrLWZyYW1lcy1ieS1mcmFtZXdvcmsuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsImdyb3VwU3RhY2tGcmFtZXNCeUZyYW1ld29yayIsInN0YWNrRnJhbWVzIiwic3RhY2tGcmFtZXNHcm91cGVkQnlGcmFtZXdvcmsiLCJzdGFja0ZyYW1lIiwiY3VycmVudEdyb3VwIiwibGVuZ3RoIiwiZnJhbWV3b3JrIiwic291cmNlUGFja2FnZSIsInB1c2giLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4115\n");

/***/ }),

/***/ 2216:
/*!*************************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/hydration-error-info.js ***!
  \*************************************************************************************************************/
/***/ ((module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    getHydrationWarningType: function() {\n        return getHydrationWarningType;\n    },\n    hydrationErrorState: function() {\n        return hydrationErrorState;\n    },\n    patchConsoleError: function() {\n        return patchConsoleError;\n    }\n});\nconst getHydrationWarningType = (msg)=>{\n    if (isHtmlTagsWarning(msg)) return \"tag\";\n    if (isTextInTagsMismatchWarning(msg)) return \"text-in-tag\";\n    return \"text\";\n};\nconst isHtmlTagsWarning = (msg)=>Boolean(msg && htmlTagsWarnings.has(msg));\nconst isTextMismatchWarning = (msg)=>textMismatchWarning === msg;\nconst isTextInTagsMismatchWarning = (msg)=>Boolean(msg && textAndTagsMismatchWarnings.has(msg));\nconst isKnownHydrationWarning = (msg)=>isHtmlTagsWarning(msg) || isTextInTagsMismatchWarning(msg) || isTextMismatchWarning(msg);\nconst hydrationErrorState = {};\n// https://github.com/facebook/react/blob/main/packages/react-dom/src/__tests__/ReactDOMHydrationDiff-test.js used as a reference\nconst htmlTagsWarnings = new Set([\n    'Warning: Cannot render a sync or defer <script> outside the main document without knowing its order. Try adding async=\"\" or moving it into the root <head> tag.%s',\n    \"Warning: In HTML, %s cannot be a child of <%s>.%s\\nThis will cause a hydration error.%s\",\n    \"Warning: In HTML, %s cannot be a descendant of <%s>.\\nThis will cause a hydration error.%s\",\n    \"Warning: In HTML, text nodes cannot be a child of <%s>.\\nThis will cause a hydration error.\",\n    \"Warning: In HTML, whitespace text nodes cannot be a child of <%s>. Make sure you don't have any extra whitespace between tags on each line of your source code.\\nThis will cause a hydration error.\",\n    \"Warning: Expected server HTML to contain a matching <%s> in <%s>.%s\",\n    \"Warning: Did not expect server HTML to contain a <%s> in <%s>.%s\"\n]);\nconst textAndTagsMismatchWarnings = new Set([\n    'Warning: Expected server HTML to contain a matching text node for \"%s\" in <%s>.%s',\n    'Warning: Did not expect server HTML to contain the text node \"%s\" in <%s>.%s'\n]);\nconst textMismatchWarning = 'Warning: Text content did not match. Server: \"%s\" Client: \"%s\"%s';\nfunction patchConsoleError() {\n    const prev = console.error;\n    console.error = function(msg, serverContent, clientContent, componentStack) {\n        if (isKnownHydrationWarning(msg)) {\n            hydrationErrorState.warning = [\n                // remove the last %s from the message\n                msg,\n                serverContent,\n                clientContent\n            ];\n            hydrationErrorState.componentStack = componentStack;\n            hydrationErrorState.serverContent = serverContent;\n            hydrationErrorState.clientContent = clientContent;\n        }\n        // @ts-expect-error argument is defined\n        prev.apply(console, arguments);\n    };\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=hydration-error-info.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIxNi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRixLQUFNQyxDQUFBQSxDQUlOO0FBQ0EsU0FBU0ksUUFBUUMsTUFBTSxFQUFFQyxHQUFHO0lBQ3hCLElBQUksSUFBSUMsUUFBUUQsSUFBSVYsT0FBT0MsY0FBYyxDQUFDUSxRQUFRRSxNQUFNO1FBQ3BEQyxZQUFZO1FBQ1pDLEtBQUtILEdBQUcsQ0FBQ0MsS0FBSztJQUNsQjtBQUNKO0FBQ0FILFFBQVFOLFNBQVM7SUFDYkcseUJBQXlCO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQUMscUJBQXFCO1FBQ2pCLE9BQU9BO0lBQ1g7SUFDQUMsbUJBQW1CO1FBQ2YsT0FBT0E7SUFDWDtBQUNKO0FBQ0EsTUFBTUYsMEJBQTBCLENBQUNTO0lBQzdCLElBQUlDLGtCQUFrQkQsTUFBTSxPQUFPO0lBQ25DLElBQUlFLDRCQUE0QkYsTUFBTSxPQUFPO0lBQzdDLE9BQU87QUFDWDtBQUNBLE1BQU1DLG9CQUFvQixDQUFDRCxNQUFNRyxRQUFRSCxPQUFPSSxpQkFBaUJDLEdBQUcsQ0FBQ0w7QUFDckUsTUFBTU0sd0JBQXdCLENBQUNOLE1BQU1PLHdCQUF3QlA7QUFDN0QsTUFBTUUsOEJBQThCLENBQUNGLE1BQU1HLFFBQVFILE9BQU9RLDRCQUE0QkgsR0FBRyxDQUFDTDtBQUMxRixNQUFNUywwQkFBMEIsQ0FBQ1QsTUFBTUMsa0JBQWtCRCxRQUFRRSw0QkFBNEJGLFFBQVFNLHNCQUFzQk47QUFDM0gsTUFBTVIsc0JBQXNCLENBQUM7QUFDN0IsaUlBQWlJO0FBQ2pJLE1BQU1ZLG1CQUFtQixJQUFJTSxJQUFJO0lBQzdCO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0NBQ0g7QUFDRCxNQUFNRiw4QkFBOEIsSUFBSUUsSUFBSTtJQUN4QztJQUNBO0NBQ0g7QUFDRCxNQUFNSCxzQkFBc0I7QUFDNUIsU0FBU2Q7SUFDTCxNQUFNa0IsT0FBT0MsUUFBUUMsS0FBSztJQUMxQkQsUUFBUUMsS0FBSyxHQUFHLFNBQVNiLEdBQUcsRUFBRWMsYUFBYSxFQUFFQyxhQUFhLEVBQUVDLGNBQWM7UUFDdEUsSUFBSVAsd0JBQXdCVCxNQUFNO1lBQzlCUixvQkFBb0J5QixPQUFPLEdBQUc7Z0JBQzFCLHNDQUFzQztnQkFDdENqQjtnQkFDQWM7Z0JBQ0FDO2FBQ0g7WUFDRHZCLG9CQUFvQndCLGNBQWMsR0FBR0E7WUFDckN4QixvQkFBb0JzQixhQUFhLEdBQUdBO1lBQ3BDdEIsb0JBQW9CdUIsYUFBYSxHQUFHQTtRQUN4QztRQUNBLHVDQUF1QztRQUN2Q0osS0FBS08sS0FBSyxDQUFDTixTQUFTTztJQUN4QjtBQUNKO0FBRUEsSUFBSSxDQUFDLE9BQU8vQixRQUFRZ0MsT0FBTyxLQUFLLGNBQWUsT0FBT2hDLFFBQVFnQyxPQUFPLEtBQUssWUFBWWhDLFFBQVFnQyxPQUFPLEtBQUssSUFBSSxLQUFNLE9BQU9oQyxRQUFRZ0MsT0FBTyxDQUFDQyxVQUFVLEtBQUssYUFBYTtJQUNyS25DLE9BQU9DLGNBQWMsQ0FBQ0MsUUFBUWdDLE9BQU8sRUFBRSxjQUFjO1FBQUUvQixPQUFPO0lBQUs7SUFDbkVILE9BQU9vQyxNQUFNLENBQUNsQyxRQUFRZ0MsT0FBTyxFQUFFaEM7SUFDL0JFLE9BQU9GLE9BQU8sR0FBR0EsUUFBUWdDLE9BQU87QUFDbEMsRUFFQSxnREFBZ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9yZWFjdC1kZXYtb3ZlcmxheS9pbnRlcm5hbC9oZWxwZXJzL2h5ZHJhdGlvbi1lcnJvci1pbmZvLmpzPzMyYWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBnZXRIeWRyYXRpb25XYXJuaW5nVHlwZTogbnVsbCxcbiAgICBoeWRyYXRpb25FcnJvclN0YXRlOiBudWxsLFxuICAgIHBhdGNoQ29uc29sZUVycm9yOiBudWxsXG59KTtcbmZ1bmN0aW9uIF9leHBvcnQodGFyZ2V0LCBhbGwpIHtcbiAgICBmb3IodmFyIG5hbWUgaW4gYWxsKU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIG5hbWUsIHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgZ2V0OiBhbGxbbmFtZV1cbiAgICB9KTtcbn1cbl9leHBvcnQoZXhwb3J0cywge1xuICAgIGdldEh5ZHJhdGlvbldhcm5pbmdUeXBlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGdldEh5ZHJhdGlvbldhcm5pbmdUeXBlO1xuICAgIH0sXG4gICAgaHlkcmF0aW9uRXJyb3JTdGF0ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBoeWRyYXRpb25FcnJvclN0YXRlO1xuICAgIH0sXG4gICAgcGF0Y2hDb25zb2xlRXJyb3I6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gcGF0Y2hDb25zb2xlRXJyb3I7XG4gICAgfVxufSk7XG5jb25zdCBnZXRIeWRyYXRpb25XYXJuaW5nVHlwZSA9IChtc2cpPT57XG4gICAgaWYgKGlzSHRtbFRhZ3NXYXJuaW5nKG1zZykpIHJldHVybiBcInRhZ1wiO1xuICAgIGlmIChpc1RleHRJblRhZ3NNaXNtYXRjaFdhcm5pbmcobXNnKSkgcmV0dXJuIFwidGV4dC1pbi10YWdcIjtcbiAgICByZXR1cm4gXCJ0ZXh0XCI7XG59O1xuY29uc3QgaXNIdG1sVGFnc1dhcm5pbmcgPSAobXNnKT0+Qm9vbGVhbihtc2cgJiYgaHRtbFRhZ3NXYXJuaW5ncy5oYXMobXNnKSk7XG5jb25zdCBpc1RleHRNaXNtYXRjaFdhcm5pbmcgPSAobXNnKT0+dGV4dE1pc21hdGNoV2FybmluZyA9PT0gbXNnO1xuY29uc3QgaXNUZXh0SW5UYWdzTWlzbWF0Y2hXYXJuaW5nID0gKG1zZyk9PkJvb2xlYW4obXNnICYmIHRleHRBbmRUYWdzTWlzbWF0Y2hXYXJuaW5ncy5oYXMobXNnKSk7XG5jb25zdCBpc0tub3duSHlkcmF0aW9uV2FybmluZyA9IChtc2cpPT5pc0h0bWxUYWdzV2FybmluZyhtc2cpIHx8IGlzVGV4dEluVGFnc01pc21hdGNoV2FybmluZyhtc2cpIHx8IGlzVGV4dE1pc21hdGNoV2FybmluZyhtc2cpO1xuY29uc3QgaHlkcmF0aW9uRXJyb3JTdGF0ZSA9IHt9O1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2Jsb2IvbWFpbi9wYWNrYWdlcy9yZWFjdC1kb20vc3JjL19fdGVzdHNfXy9SZWFjdERPTUh5ZHJhdGlvbkRpZmYtdGVzdC5qcyB1c2VkIGFzIGEgcmVmZXJlbmNlXG5jb25zdCBodG1sVGFnc1dhcm5pbmdzID0gbmV3IFNldChbXG4gICAgJ1dhcm5pbmc6IENhbm5vdCByZW5kZXIgYSBzeW5jIG9yIGRlZmVyIDxzY3JpcHQ+IG91dHNpZGUgdGhlIG1haW4gZG9jdW1lbnQgd2l0aG91dCBrbm93aW5nIGl0cyBvcmRlci4gVHJ5IGFkZGluZyBhc3luYz1cIlwiIG9yIG1vdmluZyBpdCBpbnRvIHRoZSByb290IDxoZWFkPiB0YWcuJXMnLFxuICAgIFwiV2FybmluZzogSW4gSFRNTCwgJXMgY2Fubm90IGJlIGEgY2hpbGQgb2YgPCVzPi4lc1xcblRoaXMgd2lsbCBjYXVzZSBhIGh5ZHJhdGlvbiBlcnJvci4lc1wiLFxuICAgIFwiV2FybmluZzogSW4gSFRNTCwgJXMgY2Fubm90IGJlIGEgZGVzY2VuZGFudCBvZiA8JXM+LlxcblRoaXMgd2lsbCBjYXVzZSBhIGh5ZHJhdGlvbiBlcnJvci4lc1wiLFxuICAgIFwiV2FybmluZzogSW4gSFRNTCwgdGV4dCBub2RlcyBjYW5ub3QgYmUgYSBjaGlsZCBvZiA8JXM+LlxcblRoaXMgd2lsbCBjYXVzZSBhIGh5ZHJhdGlvbiBlcnJvci5cIixcbiAgICBcIldhcm5pbmc6IEluIEhUTUwsIHdoaXRlc3BhY2UgdGV4dCBub2RlcyBjYW5ub3QgYmUgYSBjaGlsZCBvZiA8JXM+LiBNYWtlIHN1cmUgeW91IGRvbid0IGhhdmUgYW55IGV4dHJhIHdoaXRlc3BhY2UgYmV0d2VlbiB0YWdzIG9uIGVhY2ggbGluZSBvZiB5b3VyIHNvdXJjZSBjb2RlLlxcblRoaXMgd2lsbCBjYXVzZSBhIGh5ZHJhdGlvbiBlcnJvci5cIixcbiAgICBcIldhcm5pbmc6IEV4cGVjdGVkIHNlcnZlciBIVE1MIHRvIGNvbnRhaW4gYSBtYXRjaGluZyA8JXM+IGluIDwlcz4uJXNcIixcbiAgICBcIldhcm5pbmc6IERpZCBub3QgZXhwZWN0IHNlcnZlciBIVE1MIHRvIGNvbnRhaW4gYSA8JXM+IGluIDwlcz4uJXNcIlxuXSk7XG5jb25zdCB0ZXh0QW5kVGFnc01pc21hdGNoV2FybmluZ3MgPSBuZXcgU2V0KFtcbiAgICAnV2FybmluZzogRXhwZWN0ZWQgc2VydmVyIEhUTUwgdG8gY29udGFpbiBhIG1hdGNoaW5nIHRleHQgbm9kZSBmb3IgXCIlc1wiIGluIDwlcz4uJXMnLFxuICAgICdXYXJuaW5nOiBEaWQgbm90IGV4cGVjdCBzZXJ2ZXIgSFRNTCB0byBjb250YWluIHRoZSB0ZXh0IG5vZGUgXCIlc1wiIGluIDwlcz4uJXMnXG5dKTtcbmNvbnN0IHRleHRNaXNtYXRjaFdhcm5pbmcgPSAnV2FybmluZzogVGV4dCBjb250ZW50IGRpZCBub3QgbWF0Y2guIFNlcnZlcjogXCIlc1wiIENsaWVudDogXCIlc1wiJXMnO1xuZnVuY3Rpb24gcGF0Y2hDb25zb2xlRXJyb3IoKSB7XG4gICAgY29uc3QgcHJldiA9IGNvbnNvbGUuZXJyb3I7XG4gICAgY29uc29sZS5lcnJvciA9IGZ1bmN0aW9uKG1zZywgc2VydmVyQ29udGVudCwgY2xpZW50Q29udGVudCwgY29tcG9uZW50U3RhY2spIHtcbiAgICAgICAgaWYgKGlzS25vd25IeWRyYXRpb25XYXJuaW5nKG1zZykpIHtcbiAgICAgICAgICAgIGh5ZHJhdGlvbkVycm9yU3RhdGUud2FybmluZyA9IFtcbiAgICAgICAgICAgICAgICAvLyByZW1vdmUgdGhlIGxhc3QgJXMgZnJvbSB0aGUgbWVzc2FnZVxuICAgICAgICAgICAgICAgIG1zZyxcbiAgICAgICAgICAgICAgICBzZXJ2ZXJDb250ZW50LFxuICAgICAgICAgICAgICAgIGNsaWVudENvbnRlbnRcbiAgICAgICAgICAgIF07XG4gICAgICAgICAgICBoeWRyYXRpb25FcnJvclN0YXRlLmNvbXBvbmVudFN0YWNrID0gY29tcG9uZW50U3RhY2s7XG4gICAgICAgICAgICBoeWRyYXRpb25FcnJvclN0YXRlLnNlcnZlckNvbnRlbnQgPSBzZXJ2ZXJDb250ZW50O1xuICAgICAgICAgICAgaHlkcmF0aW9uRXJyb3JTdGF0ZS5jbGllbnRDb250ZW50ID0gY2xpZW50Q29udGVudDtcbiAgICAgICAgfVxuICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIGFyZ3VtZW50IGlzIGRlZmluZWRcbiAgICAgICAgcHJldi5hcHBseShjb25zb2xlLCBhcmd1bWVudHMpO1xuICAgIH07XG59XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWh5ZHJhdGlvbi1lcnJvci1pbmZvLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIm1vZHVsZSIsImdldEh5ZHJhdGlvbldhcm5pbmdUeXBlIiwiaHlkcmF0aW9uRXJyb3JTdGF0ZSIsInBhdGNoQ29uc29sZUVycm9yIiwiX2V4cG9ydCIsInRhcmdldCIsImFsbCIsIm5hbWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwibXNnIiwiaXNIdG1sVGFnc1dhcm5pbmciLCJpc1RleHRJblRhZ3NNaXNtYXRjaFdhcm5pbmciLCJCb29sZWFuIiwiaHRtbFRhZ3NXYXJuaW5ncyIsImhhcyIsImlzVGV4dE1pc21hdGNoV2FybmluZyIsInRleHRNaXNtYXRjaFdhcm5pbmciLCJ0ZXh0QW5kVGFnc01pc21hdGNoV2FybmluZ3MiLCJpc0tub3duSHlkcmF0aW9uV2FybmluZyIsIlNldCIsInByZXYiLCJjb25zb2xlIiwiZXJyb3IiLCJzZXJ2ZXJDb250ZW50IiwiY2xpZW50Q29udGVudCIsImNvbXBvbmVudFN0YWNrIiwid2FybmluZyIsImFwcGx5IiwiYXJndW1lbnRzIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2216\n");

/***/ }),

/***/ 2037:
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/noop-template.js ***!
  \******************************************************************************************************/
/***/ ((module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"noop\", ({\n    enumerable: true,\n    get: function() {\n        return noop;\n    }\n}));\nfunction noop(strings) {\n    for(var _len = arguments.length, keys = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        keys[_key - 1] = arguments[_key];\n    }\n    const lastIndex = strings.length - 1;\n    return strings.slice(0, lastIndex).reduce((p, s, i)=>p + s + keys[i], \"\") + strings[lastIndex];\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=noop-template.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAzNy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsd0NBQXVDO0lBQ25DSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsU0FBU0EsS0FBS0MsT0FBTztJQUNqQixJQUFJLElBQUlDLE9BQU9DLFVBQVVDLE1BQU0sRUFBRUMsT0FBTyxJQUFJQyxNQUFNSixPQUFPLElBQUlBLE9BQU8sSUFBSSxJQUFJSyxPQUFPLEdBQUdBLE9BQU9MLE1BQU1LLE9BQU87UUFDdEdGLElBQUksQ0FBQ0UsT0FBTyxFQUFFLEdBQUdKLFNBQVMsQ0FBQ0ksS0FBSztJQUNwQztJQUNBLE1BQU1DLFlBQVlQLFFBQVFHLE1BQU0sR0FBRztJQUNuQyxPQUFPSCxRQUFRUSxLQUFLLENBQUMsR0FBR0QsV0FBV0UsTUFBTSxDQUFDLENBQUNDLEdBQUdDLEdBQUdDLElBQUlGLElBQUlDLElBQUlQLElBQUksQ0FBQ1EsRUFBRSxFQUFFLE1BQU1aLE9BQU8sQ0FBQ08sVUFBVTtBQUNsRztBQUVBLElBQUksQ0FBQyxPQUFPWixRQUFRa0IsT0FBTyxLQUFLLGNBQWUsT0FBT2xCLFFBQVFrQixPQUFPLEtBQUssWUFBWWxCLFFBQVFrQixPQUFPLEtBQUssSUFBSSxLQUFNLE9BQU9sQixRQUFRa0IsT0FBTyxDQUFDQyxVQUFVLEtBQUssYUFBYTtJQUNyS3JCLE9BQU9DLGNBQWMsQ0FBQ0MsUUFBUWtCLE9BQU8sRUFBRSxjQUFjO1FBQUVqQixPQUFPO0lBQUs7SUFDbkVILE9BQU9zQixNQUFNLENBQUNwQixRQUFRa0IsT0FBTyxFQUFFbEI7SUFDL0JxQixPQUFPckIsT0FBTyxHQUFHQSxRQUFRa0IsT0FBTztBQUNsQyxFQUVBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3JlYWN0LWRldi1vdmVybGF5L2ludGVybmFsL2hlbHBlcnMvbm9vcC10ZW1wbGF0ZS5qcz9lNjVmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwibm9vcFwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gbm9vcDtcbiAgICB9XG59KTtcbmZ1bmN0aW9uIG5vb3Aoc3RyaW5ncykge1xuICAgIGZvcih2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGtleXMgPSBuZXcgQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKyl7XG4gICAgICAgIGtleXNbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cbiAgICBjb25zdCBsYXN0SW5kZXggPSBzdHJpbmdzLmxlbmd0aCAtIDE7XG4gICAgcmV0dXJuIHN0cmluZ3Muc2xpY2UoMCwgbGFzdEluZGV4KS5yZWR1Y2UoKHAsIHMsIGkpPT5wICsgcyArIGtleXNbaV0sIFwiXCIpICsgc3RyaW5nc1tsYXN0SW5kZXhdO1xufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub29wLXRlbXBsYXRlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJub29wIiwic3RyaW5ncyIsIl9sZW4iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJrZXlzIiwiQXJyYXkiLCJfa2V5IiwibGFzdEluZGV4Iiwic2xpY2UiLCJyZWR1Y2UiLCJwIiwicyIsImkiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2037\n");

/***/ }),

/***/ 9297:
/*!**************************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/parse-component-stack.js ***!
  \**************************************************************************************************************/
/***/ ((module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"parseComponentStack\", ({\n    enumerable: true,\n    get: function() {\n        return parseComponentStack;\n    }\n}));\nvar LocationType;\n(function(LocationType) {\n    LocationType[\"FILE\"] = \"file\";\n    LocationType[\"WEBPACK_INTERNAL\"] = \"webpack-internal\";\n    LocationType[\"HTTP\"] = \"http\";\n    LocationType[\"PROTOCOL_RELATIVE\"] = \"protocol-relative\";\n    LocationType[\"UNKNOWN\"] = \"unknown\";\n})(LocationType || (LocationType = {}));\n/**\n * Get the type of frame line based on the location\n */ function getLocationType(location) {\n    if (location.startsWith(\"file://\")) {\n        return \"file\";\n    }\n    if (location.startsWith(\"webpack-internal://\")) {\n        return \"webpack-internal\";\n    }\n    if (location.startsWith(\"http://\") || location.startsWith(\"https://\")) {\n        return \"http\";\n    }\n    if (location.startsWith(\"//\")) {\n        return \"protocol-relative\";\n    }\n    return \"unknown\";\n}\nfunction parseStackFrameLocation(location) {\n    const locationType = getLocationType(location);\n    const modulePath = location == null ? void 0 : location.replace(/^(webpack-internal:\\/\\/\\/|file:\\/\\/)(\\(.*\\)\\/)?/, \"\");\n    var _modulePath_match;\n    const [, file, lineNumber, column] = (_modulePath_match = modulePath == null ? void 0 : modulePath.match(/^(.+):(\\d+):(\\d+)/)) != null ? _modulePath_match : [];\n    switch(locationType){\n        case \"file\":\n        case \"webpack-internal\":\n            return {\n                canOpenInEditor: true,\n                file,\n                lineNumber: lineNumber ? Number(lineNumber) : undefined,\n                column: column ? Number(column) : undefined\n            };\n        // When the location is a URL we only show the file\n        // TODO: Resolve http(s) URLs through sourcemaps\n        case \"http\":\n        case \"protocol-relative\":\n        case \"unknown\":\n        default:\n            {\n                return {\n                    canOpenInEditor: false\n                };\n            }\n    }\n}\nfunction parseComponentStack(componentStack) {\n    const componentStackFrames = [];\n    for (const line of componentStack.trim().split(\"\\n\")){\n        // Get component and file from the component stack line\n        const match = /at ([^ ]+)( \\((.*)\\))?/.exec(line);\n        if (match == null ? void 0 : match[1]) {\n            const component = match[1];\n            const location = match[3];\n            if (!location) {\n                componentStackFrames.push({\n                    canOpenInEditor: false,\n                    component\n                });\n                continue;\n            }\n            // Stop parsing the component stack if we reach a Next.js component\n            if (location == null ? void 0 : location.includes(\"next/dist\")) {\n                break;\n            }\n            const frameLocation = parseStackFrameLocation(location);\n            componentStackFrames.push({\n                component,\n                ...frameLocation\n            });\n        }\n    }\n    return componentStackFrames;\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=parse-component-stack.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9297\n");

/***/ }),

/***/ 7648:
/*!***************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/parseStack.js ***!
  \***************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"parseStack\", ({\n    enumerable: true,\n    get: function() {\n        return parseStack;\n    }\n}));\nconst _stacktraceparser = __webpack_require__(/*! next/dist/compiled/stacktrace-parser */ 5985);\nconst regexNextStatic = /\\/_next(\\/static\\/.+)/;\nfunction parseStack(stack) {\n    const frames = (0, _stacktraceparser.parse)(stack);\n    return frames.map((frame)=>{\n        try {\n            const url = new URL(frame.file);\n            const res = regexNextStatic.exec(url.pathname);\n            if (res) {\n                var _process_env___NEXT_DIST_DIR_replace, _process_env___NEXT_DIST_DIR;\n                const distDir = (_process_env___NEXT_DIST_DIR = process.env.__NEXT_DIST_DIR) == null ? void 0 : (_process_env___NEXT_DIST_DIR_replace = _process_env___NEXT_DIST_DIR.replace(/\\\\/g, \"/\")) == null ? void 0 : _process_env___NEXT_DIST_DIR_replace.replace(/\\/$/, \"\");\n                if (distDir) {\n                    frame.file = \"file://\" + distDir.concat(res.pop()) + url.search;\n                }\n            }\n        } catch (e) {}\n        return frame;\n    });\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=parseStack.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzY0OC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsOENBQTZDO0lBQ3pDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsb0JBQW9CQyxtQkFBT0EsQ0FBQyxnREFBc0M7QUFDeEUsTUFBTUMsa0JBQWtCO0FBQ3hCLFNBQVNILFdBQVdJLEtBQUs7SUFDckIsTUFBTUMsU0FBUyxDQUFDLEdBQUdKLGtCQUFrQkssS0FBSyxFQUFFRjtJQUM1QyxPQUFPQyxPQUFPRSxHQUFHLENBQUMsQ0FBQ0M7UUFDZixJQUFJO1lBQ0EsTUFBTUMsTUFBTSxJQUFJQyxJQUFJRixNQUFNRyxJQUFJO1lBQzlCLE1BQU1DLE1BQU1ULGdCQUFnQlUsSUFBSSxDQUFDSixJQUFJSyxRQUFRO1lBQzdDLElBQUlGLEtBQUs7Z0JBQ0wsSUFBSUcsc0NBQXNDQztnQkFDMUMsTUFBTUMsVUFBVSxDQUFDRCwrQkFBK0JFLFFBQVFDLEdBQUcsQ0FBQ0MsZUFBZSxLQUFLLE9BQU8sS0FBSyxJQUFJLENBQUNMLHVDQUF1Q0MsNkJBQTZCSyxPQUFPLENBQUMsT0FBTyxJQUFHLEtBQU0sT0FBTyxLQUFLLElBQUlOLHFDQUFxQ00sT0FBTyxDQUFDLE9BQU87Z0JBQ2pRLElBQUlKLFNBQVM7b0JBQ1RULE1BQU1HLElBQUksR0FBRyxZQUFZTSxRQUFRSyxNQUFNLENBQUNWLElBQUlXLEdBQUcsTUFBTWQsSUFBSWUsTUFBTTtnQkFDbkU7WUFDSjtRQUNKLEVBQUUsT0FBT0MsR0FBRyxDQUFDO1FBQ2IsT0FBT2pCO0lBQ1g7QUFDSjtBQUVBLElBQUksQ0FBQyxPQUFPWixRQUFROEIsT0FBTyxLQUFLLGNBQWUsT0FBTzlCLFFBQVE4QixPQUFPLEtBQUssWUFBWTlCLFFBQVE4QixPQUFPLEtBQUssSUFBSSxLQUFNLE9BQU85QixRQUFROEIsT0FBTyxDQUFDQyxVQUFVLEtBQUssYUFBYTtJQUNyS2pDLE9BQU9DLGNBQWMsQ0FBQ0MsUUFBUThCLE9BQU8sRUFBRSxjQUFjO1FBQUU3QixPQUFPO0lBQUs7SUFDbkVILE9BQU9rQyxNQUFNLENBQUNoQyxRQUFROEIsT0FBTyxFQUFFOUI7SUFDL0JpQyxPQUFPakMsT0FBTyxHQUFHQSxRQUFROEIsT0FBTztBQUNsQyxFQUVBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3JlYWN0LWRldi1vdmVybGF5L2ludGVybmFsL2hlbHBlcnMvcGFyc2VTdGFjay5qcz8zNTQyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwicGFyc2VTdGFja1wiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gcGFyc2VTdGFjaztcbiAgICB9XG59KTtcbmNvbnN0IF9zdGFja3RyYWNlcGFyc2VyID0gcmVxdWlyZShcIm5leHQvZGlzdC9jb21waWxlZC9zdGFja3RyYWNlLXBhcnNlclwiKTtcbmNvbnN0IHJlZ2V4TmV4dFN0YXRpYyA9IC9cXC9fbmV4dChcXC9zdGF0aWNcXC8uKykvO1xuZnVuY3Rpb24gcGFyc2VTdGFjayhzdGFjaykge1xuICAgIGNvbnN0IGZyYW1lcyA9ICgwLCBfc3RhY2t0cmFjZXBhcnNlci5wYXJzZSkoc3RhY2spO1xuICAgIHJldHVybiBmcmFtZXMubWFwKChmcmFtZSk9PntcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHVybCA9IG5ldyBVUkwoZnJhbWUuZmlsZSk7XG4gICAgICAgICAgICBjb25zdCByZXMgPSByZWdleE5leHRTdGF0aWMuZXhlYyh1cmwucGF0aG5hbWUpO1xuICAgICAgICAgICAgaWYgKHJlcykge1xuICAgICAgICAgICAgICAgIHZhciBfcHJvY2Vzc19lbnZfX19ORVhUX0RJU1RfRElSX3JlcGxhY2UsIF9wcm9jZXNzX2Vudl9fX05FWFRfRElTVF9ESVI7XG4gICAgICAgICAgICAgICAgY29uc3QgZGlzdERpciA9IChfcHJvY2Vzc19lbnZfX19ORVhUX0RJU1RfRElSID0gcHJvY2Vzcy5lbnYuX19ORVhUX0RJU1RfRElSKSA9PSBudWxsID8gdm9pZCAwIDogKF9wcm9jZXNzX2Vudl9fX05FWFRfRElTVF9ESVJfcmVwbGFjZSA9IF9wcm9jZXNzX2Vudl9fX05FWFRfRElTVF9ESVIucmVwbGFjZSgvXFxcXC9nLCBcIi9cIikpID09IG51bGwgPyB2b2lkIDAgOiBfcHJvY2Vzc19lbnZfX19ORVhUX0RJU1RfRElSX3JlcGxhY2UucmVwbGFjZSgvXFwvJC8sIFwiXCIpO1xuICAgICAgICAgICAgICAgIGlmIChkaXN0RGlyKSB7XG4gICAgICAgICAgICAgICAgICAgIGZyYW1lLmZpbGUgPSBcImZpbGU6Ly9cIiArIGRpc3REaXIuY29uY2F0KHJlcy5wb3AoKSkgKyB1cmwuc2VhcmNoO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgICAgcmV0dXJuIGZyYW1lO1xuICAgIH0pO1xufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXJzZVN0YWNrLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJwYXJzZVN0YWNrIiwiX3N0YWNrdHJhY2VwYXJzZXIiLCJyZXF1aXJlIiwicmVnZXhOZXh0U3RhdGljIiwic3RhY2siLCJmcmFtZXMiLCJwYXJzZSIsIm1hcCIsImZyYW1lIiwidXJsIiwiVVJMIiwiZmlsZSIsInJlcyIsImV4ZWMiLCJwYXRobmFtZSIsIl9wcm9jZXNzX2Vudl9fX05FWFRfRElTVF9ESVJfcmVwbGFjZSIsIl9wcm9jZXNzX2Vudl9fX05FWFRfRElTVF9ESVIiLCJkaXN0RGlyIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9ESVNUX0RJUiIsInJlcGxhY2UiLCJjb25jYXQiLCJwb3AiLCJzZWFyY2giLCJlIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7648\n");

/***/ }),

/***/ 8384:
/*!**************************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/runtime-error-handler.js ***!
  \**************************************************************************************************************/
/***/ ((module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"RuntimeErrorHandler\", ({\n    enumerable: true,\n    get: function() {\n        return RuntimeErrorHandler;\n    }\n}));\nconst RuntimeErrorHandler = {\n    hadRuntimeError: false\n};\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=runtime-error-handler.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODM4NC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsdURBQXNEO0lBQ2xESSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUEsc0JBQXNCO0lBQ3hCQyxpQkFBaUI7QUFDckI7QUFFQSxJQUFJLENBQUMsT0FBT0wsUUFBUU0sT0FBTyxLQUFLLGNBQWUsT0FBT04sUUFBUU0sT0FBTyxLQUFLLFlBQVlOLFFBQVFNLE9BQU8sS0FBSyxJQUFJLEtBQU0sT0FBT04sUUFBUU0sT0FBTyxDQUFDQyxVQUFVLEtBQUssYUFBYTtJQUNyS1QsT0FBT0MsY0FBYyxDQUFDQyxRQUFRTSxPQUFPLEVBQUUsY0FBYztRQUFFTCxPQUFPO0lBQUs7SUFDbkVILE9BQU9VLE1BQU0sQ0FBQ1IsUUFBUU0sT0FBTyxFQUFFTjtJQUMvQlMsT0FBT1QsT0FBTyxHQUFHQSxRQUFRTSxPQUFPO0FBQ2xDLEVBRUEsaURBQWlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvcmVhY3QtZGV2LW92ZXJsYXkvaW50ZXJuYWwvaGVscGVycy9ydW50aW1lLWVycm9yLWhhbmRsZXIuanM/NWM0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJ1bnRpbWVFcnJvckhhbmRsZXJcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIFJ1bnRpbWVFcnJvckhhbmRsZXI7XG4gICAgfVxufSk7XG5jb25zdCBSdW50aW1lRXJyb3JIYW5kbGVyID0ge1xuICAgIGhhZFJ1bnRpbWVFcnJvcjogZmFsc2Vcbn07XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJ1bnRpbWUtZXJyb3ItaGFuZGxlci5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiUnVudGltZUVycm9ySGFuZGxlciIsImhhZFJ1bnRpbWVFcnJvciIsImRlZmF1bHQiLCJfX2VzTW9kdWxlIiwiYXNzaWduIiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///8384\n");

/***/ }),

/***/ 9028:
/*!****************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/stack-frame.js ***!
  \****************************************************************************************************/
/***/ ((module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    getFrameSource: function() {\n        return getFrameSource;\n    },\n    getOriginalStackFrames: function() {\n        return getOriginalStackFrames;\n    }\n});\nfunction getOriginalStackFrame(source, type, isAppDir, errorMessage) {\n    var _source_file, _source_file1;\n    async function _getOriginalStackFrame() {\n        var /* collapsed */ _source_file, _body_originalStackFrame_file, _body_originalStackFrame, _body_originalStackFrame_file1, _body_originalStackFrame1;\n        const params = new URLSearchParams();\n        params.append(\"isServer\", String(type === \"server\"));\n        params.append(\"isEdgeServer\", String(type === \"edge-server\"));\n        params.append(\"isAppDirectory\", String(isAppDir));\n        params.append(\"errorMessage\", errorMessage);\n        for(const key in source){\n            var _source_key;\n            params.append(key, ((_source_key = source[key]) != null ? _source_key : \"\").toString());\n        }\n        const controller = new AbortController();\n        const tm = setTimeout(()=>controller.abort(), 3000);\n        const res = await self.fetch(( false || \"\") + \"/__nextjs_original-stack-frame?\" + params.toString(), {\n            signal: controller.signal\n        }).finally(()=>{\n            clearTimeout(tm);\n        });\n        if (!res.ok || res.status === 204) {\n            return Promise.reject(new Error(await res.text()));\n        }\n        const body = await res.json();\n        var _ref;\n        return {\n            error: false,\n            reason: null,\n            external: false,\n            expanded: !Boolean((_ref = ((_source_file = source.file) == null ? void 0 : _source_file.includes(\"node_modules\")) || ((_body_originalStackFrame = body.originalStackFrame) == null ? void 0 : (_body_originalStackFrame_file = _body_originalStackFrame.file) == null ? void 0 : _body_originalStackFrame_file.includes(\"node_modules\")) || ((_body_originalStackFrame1 = body.originalStackFrame) == null ? void 0 : (_body_originalStackFrame_file1 = _body_originalStackFrame1.file) == null ? void 0 : _body_originalStackFrame_file1.startsWith(\"[turbopack]/\"))) != null ? _ref : true),\n            sourceStackFrame: source,\n            originalStackFrame: body.originalStackFrame,\n            originalCodeFrame: body.originalCodeFrame || null,\n            sourcePackage: body.sourcePackage\n        };\n    }\n    if (source.file === \"<anonymous>\" || ((_source_file = source.file) == null ? void 0 : _source_file.match(/^node:/)) || ((_source_file1 = source.file) == null ? void 0 : _source_file1.match(/https?:\\/\\//))) {\n        return Promise.resolve({\n            error: false,\n            reason: null,\n            external: true,\n            expanded: false,\n            sourceStackFrame: source,\n            originalStackFrame: null,\n            originalCodeFrame: null,\n            sourcePackage: null\n        });\n    }\n    return _getOriginalStackFrame().catch((err)=>{\n        var _err_message, _ref;\n        return {\n            error: true,\n            reason: (_ref = (_err_message = err == null ? void 0 : err.message) != null ? _err_message : err == null ? void 0 : err.toString()) != null ? _ref : \"Unknown Error\",\n            external: false,\n            expanded: false,\n            sourceStackFrame: source,\n            originalStackFrame: null,\n            originalCodeFrame: null,\n            sourcePackage: null\n        };\n    });\n}\nfunction getOriginalStackFrames(frames, type, isAppDir, errorMessage) {\n    return Promise.all(frames.map((frame)=>getOriginalStackFrame(frame, type, isAppDir, errorMessage)));\n}\nconst webpackRegExes = [\n    /^webpack-internal:\\/\\/\\/(\\.)?(\\((\\w+)\\))?/,\n    /^(webpack:\\/\\/\\/(\\.)?|webpack:\\/\\/(_N_E\\/)?)(\\((\\w+)\\))?/\n];\nfunction isWebpackBundled(file) {\n    return webpackRegExes.some((regEx)=>regEx.test(file));\n}\n/**\n * Format the webpack internal id to original file path\n * webpack-internal:///./src/hello.tsx => ./src/hello.tsx\n * webpack://_N_E/./src/hello.tsx => ./src/hello.tsx\n * webpack://./src/hello.tsx => ./src/hello.tsx\n * webpack:///./src/hello.tsx => ./src/hello.tsx\n */ function formatFrameSourceFile(file) {\n    for (const regex of webpackRegExes)file = file.replace(regex, \"\");\n    return file;\n}\nfunction getFrameSource(frame) {\n    if (!frame.file) return \"\";\n    let str = \"\";\n    try {\n        var _globalThis_location;\n        const u = new URL(frame.file);\n        // Strip the origin for same-origin scripts.\n        if (((_globalThis_location = globalThis.location) == null ? void 0 : _globalThis_location.origin) !== u.origin) {\n            // URLs can be valid without an `origin`, so long as they have a\n            // `protocol`. However, `origin` is preferred.\n            if (u.origin === \"null\") {\n                str += u.protocol;\n            } else {\n                str += u.origin;\n            }\n        }\n        // Strip query string information as it's typically too verbose to be\n        // meaningful.\n        str += u.pathname;\n        str += \" \";\n        str = formatFrameSourceFile(str);\n    } catch (e) {\n        str += formatFrameSourceFile(frame.file || \"(unknown)\") + \" \";\n    }\n    if (!isWebpackBundled(frame.file) && frame.lineNumber != null) {\n        if (frame.column != null) {\n            str += \"(\" + frame.lineNumber + \":\" + frame.column + \") \";\n        } else {\n            str += \"(\" + frame.lineNumber + \") \";\n        }\n    }\n    return str.slice(0, -1);\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=stack-frame.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9028\n");

/***/ }),

/***/ 7168:
/*!**********************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/use-error-handler.js ***!
  \**********************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"useErrorHandler\", ({\n    enumerable: true,\n    get: function() {\n        return useErrorHandler;\n    }\n}));\nconst _react = __webpack_require__(/*! react */ 8964);\nconst _hydrationerrorinfo = __webpack_require__(/*! ./hydration-error-info */ 2216);\nconst _isnextroutererror = __webpack_require__(/*! ../../../is-next-router-error */ 1701);\nconst _ishydrationerror = __webpack_require__(/*! ../../../is-hydration-error */ 7709);\nif (false) {}\nlet hasHydrationError = false;\nconst errorQueue = [];\nconst rejectionQueue = [];\nconst errorHandlers = [];\nconst rejectionHandlers = [];\nif (false) {}\nfunction useErrorHandler(handleOnUnhandledError, handleOnUnhandledRejection) {\n    (0, _react.useEffect)(()=>{\n        // Handle queued errors.\n        errorQueue.forEach(handleOnUnhandledError);\n        rejectionQueue.forEach(handleOnUnhandledRejection);\n        // Listen to new errors.\n        errorHandlers.push(handleOnUnhandledError);\n        rejectionHandlers.push(handleOnUnhandledRejection);\n        return ()=>{\n            // Remove listeners.\n            errorHandlers.splice(errorHandlers.indexOf(handleOnUnhandledError), 1);\n            rejectionHandlers.splice(rejectionHandlers.indexOf(handleOnUnhandledRejection), 1);\n        };\n    }, [\n        handleOnUnhandledError,\n        handleOnUnhandledRejection\n    ]);\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=use-error-handler.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7168\n");

/***/ }),

/***/ 6534:
/*!***********************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/use-open-in-editor.js ***!
  \***********************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"useOpenInEditor\", ({\n    enumerable: true,\n    get: function() {\n        return useOpenInEditor;\n    }\n}));\nconst _react = __webpack_require__(/*! react */ 8964);\nfunction useOpenInEditor(param) {\n    let { file, lineNumber, column } = param === void 0 ? {} : param;\n    const openInEditor = (0, _react.useCallback)(()=>{\n        if (file == null || lineNumber == null || column == null) return;\n        const params = new URLSearchParams();\n        params.append(\"file\", file);\n        params.append(\"lineNumber\", String(lineNumber));\n        params.append(\"column\", String(column));\n        self.fetch(( false || \"\") + \"/__nextjs_launch-editor?\" + params.toString()).then(()=>{}, ()=>{\n            console.error(\"There was an issue opening this code in your editor.\");\n        });\n    }, [\n        file,\n        lineNumber,\n        column\n    ]);\n    return openInEditor;\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=use-open-in-editor.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjUzNC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsbURBQWtEO0lBQzlDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsU0FBU0MsbUJBQU9BLENBQUMsaUJBQU87QUFDOUIsU0FBU0YsZ0JBQWdCRyxLQUFLO0lBQzFCLElBQUksRUFBRUMsSUFBSSxFQUFFQyxVQUFVLEVBQUVDLE1BQU0sRUFBRSxHQUFHSCxVQUFVLEtBQUssSUFBSSxDQUFDLElBQUlBO0lBQzNELE1BQU1JLGVBQWUsQ0FBQyxHQUFHTixPQUFPTyxXQUFXLEVBQUU7UUFDekMsSUFBSUosUUFBUSxRQUFRQyxjQUFjLFFBQVFDLFVBQVUsTUFBTTtRQUMxRCxNQUFNRyxTQUFTLElBQUlDO1FBQ25CRCxPQUFPRSxNQUFNLENBQUMsUUFBUVA7UUFDdEJLLE9BQU9FLE1BQU0sQ0FBQyxjQUFjQyxPQUFPUDtRQUNuQ0ksT0FBT0UsTUFBTSxDQUFDLFVBQVVDLE9BQU9OO1FBQy9CTyxLQUFLQyxLQUFLLENBQUMsQ0FBQ0MsTUFBa0MsSUFBSSxFQUFDLElBQUssNkJBQTZCTixPQUFPUyxRQUFRLElBQUlDLElBQUksQ0FBQyxLQUFLLEdBQUc7WUFDakhDLFFBQVFDLEtBQUssQ0FBQztRQUNsQjtJQUNKLEdBQUc7UUFDQ2pCO1FBQ0FDO1FBQ0FDO0tBQ0g7SUFDRCxPQUFPQztBQUNYO0FBRUEsSUFBSSxDQUFDLE9BQU9YLFFBQVEwQixPQUFPLEtBQUssY0FBZSxPQUFPMUIsUUFBUTBCLE9BQU8sS0FBSyxZQUFZMUIsUUFBUTBCLE9BQU8sS0FBSyxJQUFJLEtBQU0sT0FBTzFCLFFBQVEwQixPQUFPLENBQUNDLFVBQVUsS0FBSyxhQUFhO0lBQ3JLN0IsT0FBT0MsY0FBYyxDQUFDQyxRQUFRMEIsT0FBTyxFQUFFLGNBQWM7UUFBRXpCLE9BQU87SUFBSztJQUNuRUgsT0FBTzhCLE1BQU0sQ0FBQzVCLFFBQVEwQixPQUFPLEVBQUUxQjtJQUMvQjZCLE9BQU83QixPQUFPLEdBQUdBLFFBQVEwQixPQUFPO0FBQ2xDLEVBRUEsOENBQThDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvcmVhY3QtZGV2LW92ZXJsYXkvaW50ZXJuYWwvaGVscGVycy91c2Utb3Blbi1pbi1lZGl0b3IuanM/MTQyMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInVzZU9wZW5JbkVkaXRvclwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdXNlT3BlbkluRWRpdG9yO1xuICAgIH1cbn0pO1xuY29uc3QgX3JlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuZnVuY3Rpb24gdXNlT3BlbkluRWRpdG9yKHBhcmFtKSB7XG4gICAgbGV0IHsgZmlsZSwgbGluZU51bWJlciwgY29sdW1uIH0gPSBwYXJhbSA9PT0gdm9pZCAwID8ge30gOiBwYXJhbTtcbiAgICBjb25zdCBvcGVuSW5FZGl0b3IgPSAoMCwgX3JlYWN0LnVzZUNhbGxiYWNrKSgoKT0+e1xuICAgICAgICBpZiAoZmlsZSA9PSBudWxsIHx8IGxpbmVOdW1iZXIgPT0gbnVsbCB8fCBjb2x1bW4gPT0gbnVsbCkgcmV0dXJuO1xuICAgICAgICBjb25zdCBwYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKCk7XG4gICAgICAgIHBhcmFtcy5hcHBlbmQoXCJmaWxlXCIsIGZpbGUpO1xuICAgICAgICBwYXJhbXMuYXBwZW5kKFwibGluZU51bWJlclwiLCBTdHJpbmcobGluZU51bWJlcikpO1xuICAgICAgICBwYXJhbXMuYXBwZW5kKFwiY29sdW1uXCIsIFN0cmluZyhjb2x1bW4pKTtcbiAgICAgICAgc2VsZi5mZXRjaCgocHJvY2Vzcy5lbnYuX19ORVhUX1JPVVRFUl9CQVNFUEFUSCB8fCBcIlwiKSArIFwiL19fbmV4dGpzX2xhdW5jaC1lZGl0b3I/XCIgKyBwYXJhbXMudG9TdHJpbmcoKSkudGhlbigoKT0+e30sICgpPT57XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiVGhlcmUgd2FzIGFuIGlzc3VlIG9wZW5pbmcgdGhpcyBjb2RlIGluIHlvdXIgZWRpdG9yLlwiKTtcbiAgICAgICAgfSk7XG4gICAgfSwgW1xuICAgICAgICBmaWxlLFxuICAgICAgICBsaW5lTnVtYmVyLFxuICAgICAgICBjb2x1bW5cbiAgICBdKTtcbiAgICByZXR1cm4gb3BlbkluRWRpdG9yO1xufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2Utb3Blbi1pbi1lZGl0b3IuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsInVzZU9wZW5JbkVkaXRvciIsIl9yZWFjdCIsInJlcXVpcmUiLCJwYXJhbSIsImZpbGUiLCJsaW5lTnVtYmVyIiwiY29sdW1uIiwib3BlbkluRWRpdG9yIiwidXNlQ2FsbGJhY2siLCJwYXJhbXMiLCJVUkxTZWFyY2hQYXJhbXMiLCJhcHBlbmQiLCJTdHJpbmciLCJzZWxmIiwiZmV0Y2giLCJwcm9jZXNzIiwiZW52IiwiX19ORVhUX1JPVVRFUl9CQVNFUEFUSCIsInRvU3RyaW5nIiwidGhlbiIsImNvbnNvbGUiLCJlcnJvciIsImRlZmF1bHQiLCJfX2VzTW9kdWxlIiwiYXNzaWduIiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///6534\n");

/***/ }),

/***/ 6178:
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/use-websocket.js ***!
  \******************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ 6870);\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    useSendMessage: function() {\n        return useSendMessage;\n    },\n    useTurbopack: function() {\n        return useTurbopack;\n    },\n    useWebsocket: function() {\n        return useWebsocket;\n    },\n    useWebsocketPing: function() {\n        return useWebsocketPing;\n    }\n});\nconst _react = __webpack_require__(/*! react */ 8964);\nconst _approutercontextsharedruntime = __webpack_require__(/*! ../../../../../shared/lib/app-router-context.shared-runtime */ 7240);\nconst _getsocketurl = __webpack_require__(/*! ./get-socket-url */ 1103);\nfunction useWebsocket(assetPrefix) {\n    const webSocketRef = (0, _react.useRef)();\n    (0, _react.useEffect)(()=>{\n        if (webSocketRef.current) {\n            return;\n        }\n        const url = (0, _getsocketurl.getSocketUrl)(assetPrefix);\n        webSocketRef.current = new window.WebSocket(\"\" + url + \"/_next/webpack-hmr\");\n    }, [\n        assetPrefix\n    ]);\n    return webSocketRef;\n}\nfunction useSendMessage(webSocketRef) {\n    const sendMessage = (0, _react.useCallback)((data)=>{\n        const socket = webSocketRef.current;\n        if (!socket || socket.readyState !== socket.OPEN) {\n            return;\n        }\n        return socket.send(data);\n    }, [\n        webSocketRef\n    ]);\n    return sendMessage;\n}\nfunction useTurbopack(sendMessage, onUpdateError) {\n    const turbopackState = (0, _react.useRef)({\n        init: false,\n        // Until the dynamic import resolves, queue any turbopack messages which will be replayed.\n        queue: [],\n        callback: undefined\n    });\n    const processTurbopackMessage = (0, _react.useCallback)((msg)=>{\n        const { callback, queue } = turbopackState.current;\n        if (callback) {\n            callback(msg);\n        } else {\n            queue.push(msg);\n        }\n    }, []);\n    (0, _react.useEffect)(()=>{\n        const { current: initCurrent } = turbopackState;\n        // TODO(WEB-1589): only install if `process.turbopack` set.\n        if (initCurrent.init) {\n            return;\n        }\n        initCurrent.init = true;\n        Promise.resolve().then(()=>/*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! @vercel/turbopack-ecmascript-runtime/dev/client/hmr-client.ts */ 8871))).then((param)=>{\n            let { connect } = param;\n            const { current } = turbopackState;\n            connect({\n                addMessageListener (cb) {\n                    current.callback = cb;\n                    // Replay all Turbopack messages before we were able to establish the HMR client.\n                    for (const msg of current.queue){\n                        cb(msg);\n                    }\n                    current.queue = undefined;\n                },\n                sendMessage,\n                onUpdateError\n            });\n        });\n    }, [\n        sendMessage,\n        onUpdateError\n    ]);\n    return processTurbopackMessage;\n}\nfunction useWebsocketPing(websocketRef) {\n    const sendMessage = useSendMessage(websocketRef);\n    const { tree } = (0, _react.useContext)(_approutercontextsharedruntime.GlobalLayoutRouterContext);\n    (0, _react.useEffect)(()=>{\n        // Taken from on-demand-entries-client.js\n        const interval = setInterval(()=>{\n            sendMessage(JSON.stringify({\n                event: \"ping\",\n                tree,\n                appDirRoute: true\n            }));\n        }, 2500);\n        return ()=>clearInterval(interval);\n    }, [\n        tree,\n        sendMessage\n    ]);\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=use-websocket.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6178\n");

/***/ }),

/***/ 2164:
/*!***********************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/hooks/use-on-click-outside.js ***!
  \***********************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"useOnClickOutside\", ({\n    enumerable: true,\n    get: function() {\n        return useOnClickOutside;\n    }\n}));\nconst _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ 6870);\nconst _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! react */ 8964));\nfunction useOnClickOutside(el, handler) {\n    _react.useEffect(()=>{\n        if (el == null || handler == null) {\n            return;\n        }\n        const listener = (e)=>{\n            // Do nothing if clicking ref's element or descendent elements\n            if (!el || el.contains(e.target)) {\n                return;\n            }\n            handler(e);\n        };\n        const root = el.getRootNode();\n        root.addEventListener(\"mousedown\", listener);\n        root.addEventListener(\"touchstart\", listener);\n        return function() {\n            root.removeEventListener(\"mousedown\", listener);\n            root.removeEventListener(\"touchstart\", listener);\n        };\n    }, [\n        handler,\n        el\n    ]);\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=use-on-click-outside.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjE2NC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgscURBQW9EO0lBQ2hESSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsNEJBQTRCQyxtQkFBT0EsQ0FBQyxvREFBMEM7QUFDcEYsTUFBTUMsU0FBUyxXQUFXLEdBQUdGLDBCQUEwQkcsQ0FBQyxDQUFDRixtQkFBT0EsQ0FBQyxpQkFBTztBQUN4RSxTQUFTRixrQkFBa0JLLEVBQUUsRUFBRUMsT0FBTztJQUNsQ0gsT0FBT0ksU0FBUyxDQUFDO1FBQ2IsSUFBSUYsTUFBTSxRQUFRQyxXQUFXLE1BQU07WUFDL0I7UUFDSjtRQUNBLE1BQU1FLFdBQVcsQ0FBQ0M7WUFDZCw4REFBOEQ7WUFDOUQsSUFBSSxDQUFDSixNQUFNQSxHQUFHSyxRQUFRLENBQUNELEVBQUVFLE1BQU0sR0FBRztnQkFDOUI7WUFDSjtZQUNBTCxRQUFRRztRQUNaO1FBQ0EsTUFBTUcsT0FBT1AsR0FBR1EsV0FBVztRQUMzQkQsS0FBS0UsZ0JBQWdCLENBQUMsYUFBYU47UUFDbkNJLEtBQUtFLGdCQUFnQixDQUFDLGNBQWNOO1FBQ3BDLE9BQU87WUFDSEksS0FBS0csbUJBQW1CLENBQUMsYUFBYVA7WUFDdENJLEtBQUtHLG1CQUFtQixDQUFDLGNBQWNQO1FBQzNDO0lBQ0osR0FBRztRQUNDRjtRQUNBRDtLQUNIO0FBQ0w7QUFFQSxJQUFJLENBQUMsT0FBT1QsUUFBUW9CLE9BQU8sS0FBSyxjQUFlLE9BQU9wQixRQUFRb0IsT0FBTyxLQUFLLFlBQVlwQixRQUFRb0IsT0FBTyxLQUFLLElBQUksS0FBTSxPQUFPcEIsUUFBUW9CLE9BQU8sQ0FBQ0MsVUFBVSxLQUFLLGFBQWE7SUFDckt2QixPQUFPQyxjQUFjLENBQUNDLFFBQVFvQixPQUFPLEVBQUUsY0FBYztRQUFFbkIsT0FBTztJQUFLO0lBQ25FSCxPQUFPd0IsTUFBTSxDQUFDdEIsUUFBUW9CLE9BQU8sRUFBRXBCO0lBQy9CdUIsT0FBT3ZCLE9BQU8sR0FBR0EsUUFBUW9CLE9BQU87QUFDbEMsRUFFQSxnREFBZ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9yZWFjdC1kZXYtb3ZlcmxheS9pbnRlcm5hbC9ob29rcy91c2Utb24tY2xpY2stb3V0c2lkZS5qcz9jNjkwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwidXNlT25DbGlja091dHNpZGVcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHVzZU9uQ2xpY2tPdXRzaWRlO1xuICAgIH1cbn0pO1xuY29uc3QgX2ludGVyb3BfcmVxdWlyZV93aWxkY2FyZCA9IHJlcXVpcmUoXCJAc3djL2hlbHBlcnMvXy9faW50ZXJvcF9yZXF1aXJlX3dpbGRjYXJkXCIpO1xuY29uc3QgX3JlYWN0ID0gLyojX19QVVJFX18qLyBfaW50ZXJvcF9yZXF1aXJlX3dpbGRjYXJkLl8ocmVxdWlyZShcInJlYWN0XCIpKTtcbmZ1bmN0aW9uIHVzZU9uQ2xpY2tPdXRzaWRlKGVsLCBoYW5kbGVyKSB7XG4gICAgX3JlYWN0LnVzZUVmZmVjdCgoKT0+e1xuICAgICAgICBpZiAoZWwgPT0gbnVsbCB8fCBoYW5kbGVyID09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBsaXN0ZW5lciA9IChlKT0+e1xuICAgICAgICAgICAgLy8gRG8gbm90aGluZyBpZiBjbGlja2luZyByZWYncyBlbGVtZW50IG9yIGRlc2NlbmRlbnQgZWxlbWVudHNcbiAgICAgICAgICAgIGlmICghZWwgfHwgZWwuY29udGFpbnMoZS50YXJnZXQpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaGFuZGxlcihlKTtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3Qgcm9vdCA9IGVsLmdldFJvb3ROb2RlKCk7XG4gICAgICAgIHJvb3QuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCBsaXN0ZW5lcik7XG4gICAgICAgIHJvb3QuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoc3RhcnRcIiwgbGlzdGVuZXIpO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByb290LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgbGlzdGVuZXIpO1xuICAgICAgICAgICAgcm9vdC5yZW1vdmVFdmVudExpc3RlbmVyKFwidG91Y2hzdGFydFwiLCBsaXN0ZW5lcik7XG4gICAgICAgIH07XG4gICAgfSwgW1xuICAgICAgICBoYW5kbGVyLFxuICAgICAgICBlbFxuICAgIF0pO1xufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2Utb24tY2xpY2stb3V0c2lkZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwidXNlT25DbGlja091dHNpZGUiLCJfaW50ZXJvcF9yZXF1aXJlX3dpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdCIsIl8iLCJlbCIsImhhbmRsZXIiLCJ1c2VFZmZlY3QiLCJsaXN0ZW5lciIsImUiLCJjb250YWlucyIsInRhcmdldCIsInJvb3QiLCJnZXRSb290Tm9kZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2164\n");

/***/ }),

/***/ 3812:
/*!************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/icons/CloseIcon.js ***!
  \************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"CloseIcon\", ({\n    enumerable: true,\n    get: function() {\n        return CloseIcon;\n    }\n}));\nconst _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ 6870);\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ 7247);\nconst _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! react */ 8964));\nconst CloseIcon = ()=>{\n    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(\"svg\", {\n        width: \"24\",\n        height: \"24\",\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: [\n            /*#__PURE__*/ (0, _jsxruntime.jsx)(\"path\", {\n                d: \"M18 6L6 18\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\"\n            }),\n            /*#__PURE__*/ (0, _jsxruntime.jsx)(\"path\", {\n                d: \"M6 6L18 18\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\"\n            })\n        ]\n    });\n};\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=CloseIcon.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzgxMi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsNkNBQTRDO0lBQ3hDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsNEJBQTRCQyxtQkFBT0EsQ0FBQyxvREFBMEM7QUFDcEYsTUFBTUMsY0FBY0QsbUJBQU9BLENBQUMsNkJBQW1CO0FBQy9DLE1BQU1FLFNBQVMsV0FBVyxHQUFHSCwwQkFBMEJJLENBQUMsQ0FBQ0gsbUJBQU9BLENBQUMsaUJBQU87QUFDeEUsTUFBTUYsWUFBWTtJQUNkLE9BQXFCLFdBQUgsR0FBSSxJQUFHRyxZQUFZRyxJQUFJLEVBQUUsT0FBTztRQUM5Q0MsT0FBTztRQUNQQyxRQUFRO1FBQ1JDLFNBQVM7UUFDVEMsTUFBTTtRQUNOQyxPQUFPO1FBQ1BDLFVBQVU7WUFDTixXQUFXLEdBQUksSUFBR1QsWUFBWVUsR0FBRyxFQUFFLFFBQVE7Z0JBQ3ZDQyxHQUFHO2dCQUNIQyxRQUFRO2dCQUNSQyxhQUFhO2dCQUNiQyxlQUFlO2dCQUNmQyxnQkFBZ0I7WUFDcEI7WUFDQSxXQUFXLEdBQUksSUFBR2YsWUFBWVUsR0FBRyxFQUFFLFFBQVE7Z0JBQ3ZDQyxHQUFHO2dCQUNIQyxRQUFRO2dCQUNSQyxhQUFhO2dCQUNiQyxlQUFlO2dCQUNmQyxnQkFBZ0I7WUFDcEI7U0FDSDtJQUNMO0FBQ0o7QUFFQSxJQUFJLENBQUMsT0FBT3RCLFFBQVF1QixPQUFPLEtBQUssY0FBZSxPQUFPdkIsUUFBUXVCLE9BQU8sS0FBSyxZQUFZdkIsUUFBUXVCLE9BQU8sS0FBSyxJQUFJLEtBQU0sT0FBT3ZCLFFBQVF1QixPQUFPLENBQUNDLFVBQVUsS0FBSyxhQUFhO0lBQ3JLMUIsT0FBT0MsY0FBYyxDQUFDQyxRQUFRdUIsT0FBTyxFQUFFLGNBQWM7UUFBRXRCLE9BQU87SUFBSztJQUNuRUgsT0FBTzJCLE1BQU0sQ0FBQ3pCLFFBQVF1QixPQUFPLEVBQUV2QjtJQUMvQjBCLE9BQU8xQixPQUFPLEdBQUdBLFFBQVF1QixPQUFPO0FBQ2xDLEVBRUEscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvcmVhY3QtZGV2LW92ZXJsYXkvaW50ZXJuYWwvaWNvbnMvQ2xvc2VJY29uLmpzPzY4YzgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDbG9zZUljb25cIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIENsb3NlSWNvbjtcbiAgICB9XG59KTtcbmNvbnN0IF9pbnRlcm9wX3JlcXVpcmVfd2lsZGNhcmQgPSByZXF1aXJlKFwiQHN3Yy9oZWxwZXJzL18vX2ludGVyb3BfcmVxdWlyZV93aWxkY2FyZFwiKTtcbmNvbnN0IF9qc3hydW50aW1lID0gcmVxdWlyZShcInJlYWN0L2pzeC1ydW50aW1lXCIpO1xuY29uc3QgX3JlYWN0ID0gLyojX19QVVJFX18qLyBfaW50ZXJvcF9yZXF1aXJlX3dpbGRjYXJkLl8ocmVxdWlyZShcInJlYWN0XCIpKTtcbmNvbnN0IENsb3NlSWNvbiA9ICgpPT57XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi8gKDAsIF9qc3hydW50aW1lLmpzeHMpKFwic3ZnXCIsIHtcbiAgICAgICAgd2lkdGg6IFwiMjRcIixcbiAgICAgICAgaGVpZ2h0OiBcIjI0XCIsXG4gICAgICAgIHZpZXdCb3g6IFwiMCAwIDI0IDI0XCIsXG4gICAgICAgIGZpbGw6IFwibm9uZVwiLFxuICAgICAgICB4bWxuczogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFxuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4KShcInBhdGhcIiwge1xuICAgICAgICAgICAgICAgIGQ6IFwiTTE4IDZMNiAxOFwiLFxuICAgICAgICAgICAgICAgIHN0cm9rZTogXCJjdXJyZW50Q29sb3JcIixcbiAgICAgICAgICAgICAgICBzdHJva2VXaWR0aDogXCIyXCIsXG4gICAgICAgICAgICAgICAgc3Ryb2tlTGluZWNhcDogXCJyb3VuZFwiLFxuICAgICAgICAgICAgICAgIHN0cm9rZUxpbmVqb2luOiBcInJvdW5kXCJcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4KShcInBhdGhcIiwge1xuICAgICAgICAgICAgICAgIGQ6IFwiTTYgNkwxOCAxOFwiLFxuICAgICAgICAgICAgICAgIHN0cm9rZTogXCJjdXJyZW50Q29sb3JcIixcbiAgICAgICAgICAgICAgICBzdHJva2VXaWR0aDogXCIyXCIsXG4gICAgICAgICAgICAgICAgc3Ryb2tlTGluZWNhcDogXCJyb3VuZFwiLFxuICAgICAgICAgICAgICAgIHN0cm9rZUxpbmVqb2luOiBcInJvdW5kXCJcbiAgICAgICAgICAgIH0pXG4gICAgICAgIF1cbiAgICB9KTtcbn07XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNsb3NlSWNvbi5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiQ2xvc2VJY29uIiwiX2ludGVyb3BfcmVxdWlyZV93aWxkY2FyZCIsInJlcXVpcmUiLCJfanN4cnVudGltZSIsIl9yZWFjdCIsIl8iLCJqc3hzIiwid2lkdGgiLCJoZWlnaHQiLCJ2aWV3Qm94IiwiZmlsbCIsInhtbG5zIiwiY2hpbGRyZW4iLCJqc3giLCJkIiwic3Ryb2tlIiwic3Ryb2tlV2lkdGgiLCJzdHJva2VMaW5lY2FwIiwic3Ryb2tlTGluZWpvaW4iLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3812\n");

/***/ }),

/***/ 9407:
/*!***************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/icons/CollapseIcon.js ***!
  \***************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"CollapseIcon\", ({\n    enumerable: true,\n    get: function() {\n        return CollapseIcon;\n    }\n}));\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ 7247);\nfunction CollapseIcon(param) {\n    let { collapsed } = param === void 0 ? {} : param;\n    return /*#__PURE__*/ (0, _jsxruntime.jsx)(\"svg\", {\n        \"data-nextjs-call-stack-chevron-icon\": true,\n        \"data-collapsed\": collapsed,\n        fill: \"none\",\n        height: \"20\",\n        width: \"20\",\n        shapeRendering: \"geometricPrecision\",\n        stroke: \"currentColor\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"2\",\n        viewBox: \"0 0 24 24\",\n        ...typeof collapsed === \"boolean\" ? {\n            style: {\n                transform: collapsed ? undefined : \"rotate(90deg)\"\n            }\n        } : {},\n        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(\"path\", {\n            d: \"M9 18l6-6-6-6\"\n        })\n    });\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=CollapseIcon.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTQwNy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsZ0RBQStDO0lBQzNDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsY0FBY0MsbUJBQU9BLENBQUMsNkJBQW1CO0FBQy9DLFNBQVNGLGFBQWFHLEtBQUs7SUFDdkIsSUFBSSxFQUFFQyxTQUFTLEVBQUUsR0FBR0QsVUFBVSxLQUFLLElBQUksQ0FBQyxJQUFJQTtJQUM1QyxPQUFxQixXQUFILEdBQUksSUFBR0YsWUFBWUksR0FBRyxFQUFFLE9BQU87UUFDN0MsdUNBQXVDO1FBQ3ZDLGtCQUFrQkQ7UUFDbEJFLE1BQU07UUFDTkMsUUFBUTtRQUNSQyxPQUFPO1FBQ1BDLGdCQUFnQjtRQUNoQkMsUUFBUTtRQUNSQyxlQUFlO1FBQ2ZDLGdCQUFnQjtRQUNoQkMsYUFBYTtRQUNiQyxTQUFTO1FBQ1QsR0FBRyxPQUFPVixjQUFjLFlBQVk7WUFDaENXLE9BQU87Z0JBQ0hDLFdBQVdaLFlBQVlhLFlBQVk7WUFDdkM7UUFDSixJQUFJLENBQUMsQ0FBQztRQUNOQyxVQUF3QixXQUFILEdBQUksSUFBR2pCLFlBQVlJLEdBQUcsRUFBRSxRQUFRO1lBQ2pEYyxHQUFHO1FBQ1A7SUFDSjtBQUNKO0FBRUEsSUFBSSxDQUFDLE9BQU92QixRQUFRd0IsT0FBTyxLQUFLLGNBQWUsT0FBT3hCLFFBQVF3QixPQUFPLEtBQUssWUFBWXhCLFFBQVF3QixPQUFPLEtBQUssSUFBSSxLQUFNLE9BQU94QixRQUFRd0IsT0FBTyxDQUFDQyxVQUFVLEtBQUssYUFBYTtJQUNySzNCLE9BQU9DLGNBQWMsQ0FBQ0MsUUFBUXdCLE9BQU8sRUFBRSxjQUFjO1FBQUV2QixPQUFPO0lBQUs7SUFDbkVILE9BQU80QixNQUFNLENBQUMxQixRQUFRd0IsT0FBTyxFQUFFeEI7SUFDL0IyQixPQUFPM0IsT0FBTyxHQUFHQSxRQUFRd0IsT0FBTztBQUNsQyxFQUVBLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3JlYWN0LWRldi1vdmVybGF5L2ludGVybmFsL2ljb25zL0NvbGxhcHNlSWNvbi5qcz85YTI4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQ29sbGFwc2VJY29uXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBDb2xsYXBzZUljb247XG4gICAgfVxufSk7XG5jb25zdCBfanN4cnVudGltZSA9IHJlcXVpcmUoXCJyZWFjdC9qc3gtcnVudGltZVwiKTtcbmZ1bmN0aW9uIENvbGxhcHNlSWNvbihwYXJhbSkge1xuICAgIGxldCB7IGNvbGxhcHNlZCB9ID0gcGFyYW0gPT09IHZvaWQgMCA/IHt9IDogcGFyYW07XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi8gKDAsIF9qc3hydW50aW1lLmpzeCkoXCJzdmdcIiwge1xuICAgICAgICBcImRhdGEtbmV4dGpzLWNhbGwtc3RhY2stY2hldnJvbi1pY29uXCI6IHRydWUsXG4gICAgICAgIFwiZGF0YS1jb2xsYXBzZWRcIjogY29sbGFwc2VkLFxuICAgICAgICBmaWxsOiBcIm5vbmVcIixcbiAgICAgICAgaGVpZ2h0OiBcIjIwXCIsXG4gICAgICAgIHdpZHRoOiBcIjIwXCIsXG4gICAgICAgIHNoYXBlUmVuZGVyaW5nOiBcImdlb21ldHJpY1ByZWNpc2lvblwiLFxuICAgICAgICBzdHJva2U6IFwiY3VycmVudENvbG9yXCIsXG4gICAgICAgIHN0cm9rZUxpbmVjYXA6IFwicm91bmRcIixcbiAgICAgICAgc3Ryb2tlTGluZWpvaW46IFwicm91bmRcIixcbiAgICAgICAgc3Ryb2tlV2lkdGg6IFwiMlwiLFxuICAgICAgICB2aWV3Qm94OiBcIjAgMCAyNCAyNFwiLFxuICAgICAgICAuLi50eXBlb2YgY29sbGFwc2VkID09PSBcImJvb2xlYW5cIiA/IHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBjb2xsYXBzZWQgPyB1bmRlZmluZWQgOiBcInJvdGF0ZSg5MGRlZylcIlxuICAgICAgICAgICAgfVxuICAgICAgICB9IDoge30sXG4gICAgICAgIGNoaWxkcmVuOiAvKiNfX1BVUkVfXyovICgwLCBfanN4cnVudGltZS5qc3gpKFwicGF0aFwiLCB7XG4gICAgICAgICAgICBkOiBcIk05IDE4bDYtNi02LTZcIlxuICAgICAgICB9KVxuICAgIH0pO1xufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db2xsYXBzZUljb24uanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsIkNvbGxhcHNlSWNvbiIsIl9qc3hydW50aW1lIiwicmVxdWlyZSIsInBhcmFtIiwiY29sbGFwc2VkIiwianN4IiwiZmlsbCIsImhlaWdodCIsIndpZHRoIiwic2hhcGVSZW5kZXJpbmciLCJzdHJva2UiLCJzdHJva2VMaW5lY2FwIiwic3Ryb2tlTGluZWpvaW4iLCJzdHJva2VXaWR0aCIsInZpZXdCb3giLCJzdHlsZSIsInRyYW5zZm9ybSIsInVuZGVmaW5lZCIsImNoaWxkcmVuIiwiZCIsImRlZmF1bHQiLCJfX2VzTW9kdWxlIiwiYXNzaWduIiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9407\n");

/***/ }),

/***/ 6866:
/*!****************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/icons/FrameworkIcon.js ***!
  \****************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"FrameworkIcon\", ({\n    enumerable: true,\n    get: function() {\n        return FrameworkIcon;\n    }\n}));\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ 7247);\nfunction FrameworkIcon(param) {\n    let { framework } = param;\n    if (framework === \"react\") {\n        return /*#__PURE__*/ (0, _jsxruntime.jsxs)(\"svg\", {\n            \"data-nextjs-call-stack-framework-icon\": \"react\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"20\",\n            height: \"20\",\n            viewBox: \"0 0 410 369\",\n            fill: \"none\",\n            shapeRendering: \"geometricPrecision\",\n            stroke: \"currentColor\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: \"5\",\n            children: [\n                /*#__PURE__*/ (0, _jsxruntime.jsx)(\"path\", {\n                    d: \"M204.995 224.552C226.56 224.552 244.042 207.07 244.042 185.506C244.042 163.941 226.56 146.459 204.995 146.459C183.43 146.459 165.948 163.941 165.948 185.506C165.948 207.07 183.43 224.552 204.995 224.552Z\",\n                    fill: \"currentColor\"\n                }),\n                /*#__PURE__*/ (0, _jsxruntime.jsx)(\"path\", {\n                    d: \"M409.99 184.505C409.99 153.707 381.437 126.667 335.996 108.925C343.342 60.6535 334.19 22.3878 307.492 6.98883C283.649 -6.77511 250.631 -0.0395641 214.512 25.9753C211.316 28.2692 208.143 30.7097 204.97 33.2477C201.822 30.7097 198.65 28.2692 195.477 25.9753C159.359 -0.0395641 126.34 -6.79951 102.497 6.98883C75.8237 22.3878 66.6721 60.6291 74.0422 108.852C28.5529 126.618 0 153.682 0 184.505C0 215.303 28.5528 242.342 73.9934 260.084C66.6477 308.356 75.7993 346.621 102.497 362.02C110.575 366.682 119.727 369 129.684 369C149.085 369 171.61 360.215 195.477 343.034C198.674 340.74 201.847 338.3 205.019 335.762C208.167 338.3 211.34 340.74 214.512 343.034C238.38 360.239 260.905 369 280.306 369C290.263 369 299.415 366.682 307.492 362.02C331.335 348.256 342 316.287 337.534 271.993C337.143 268.089 336.631 264.135 335.996 260.109C381.461 242.367 409.99 215.327 409.99 184.505ZM225.934 41.8136C246.238 27.1955 265.127 19.5814 280.306 19.5814C286.871 19.5814 292.728 20.9968 297.731 23.8765C315.204 33.9798 322.672 62.9475 317.327 102.433C299.756 97.0401 280.306 92.9158 259.392 90.2802C246.872 73.8074 233.597 58.9453 220.003 46.2551C221.98 44.7421 223.957 43.229 225.934 41.8136ZM112.259 23.8765C117.262 20.9968 123.119 19.5814 129.684 19.5814C144.863 19.5814 163.752 27.1711 184.056 41.8136C186.033 43.229 188.01 44.7176 189.986 46.2551C176.393 58.9453 163.142 73.783 150.622 90.2558C129.732 92.8914 110.258 97.0401 92.687 102.409C87.3424 62.9475 94.7857 33.9798 112.259 23.8765ZM19.5233 184.505C19.5233 164.322 40.9014 143.359 77.776 128.253C81.9003 146.141 88.0502 165.054 96.1768 184.456C88.0014 203.881 81.8515 222.819 77.7272 240.732C40.9014 225.626 19.5233 204.687 19.5233 184.505ZM184.056 327.196C154.966 348.134 128.805 354.675 112.259 345.133C94.7857 335.029 87.3181 306.062 92.6626 266.576C110.234 271.969 129.684 276.093 150.598 278.729C163.117 295.202 176.393 310.064 189.986 322.754C188.01 324.292 186.033 325.78 184.056 327.196ZM204.995 310.04C180.591 287.685 157.138 257.815 137.347 223.551C132.051 214.4 121.344 191.396 117 182.489C113.535 190.786 110.112 198.398 107.427 206.5C109.623 210.575 118.092 229.213 120.434 233.288C125.071 241.317 129.928 249.127 134.931 256.692C120.898 254.227 107.915 251.055 96.1035 247.321C102.815 217.011 116.213 182.064 137.347 145.458C142.545 136.453 153.838 116.346 159.5 108C150.568 109.147 143.395 108.767 135 110.5C132.56 114.453 122.777 131.645 120.434 135.721C115.749 143.823 111.454 151.925 107.427 159.978C102.546 146.581 98.8124 133.744 96.1524 121.64C125.755 112.293 162.727 106.411 204.995 106.411C215.562 106.411 237.63 106.197 247.49 106.905C242.048 99.7544 237.38 93.2819 231.694 86.888C227.082 86.7416 209.705 86.888 204.995 86.888C195.672 86.888 186.545 87.2053 177.589 87.7422C186.472 77.1752 195.672 67.5111 204.995 58.9697C229.375 81.3239 252.851 111.195 272.643 145.458C277.841 154.463 289.073 175.426 293.49 184.505C296.98 176.207 300.281 168.64 302.99 160.489C300.793 156.389 291.898 139.747 289.555 135.696C284.918 127.667 280.062 119.858 275.059 112.317C289.092 114.782 302.075 117.954 313.886 121.688C307.175 151.998 293.777 186.945 272.643 223.551C267.445 232.556 252.651 253.178 246.99 261.524C255.922 260.377 265.595 258.663 273.99 256.93C276.43 252.976 287.212 237.364 289.555 233.288C294.216 225.235 298.512 217.182 302.489 209.153C307.224 222.185 310.982 234.997 313.715 247.394C284.138 256.741 247.214 262.598 204.995 262.598C194.428 262.598 169.859 261.208 160 260.5C165.442 267.65 171.304 275.095 176.99 281.489C181.602 281.635 200.285 282.121 204.995 282.121C214.317 282.121 223.444 281.804 232.401 281.267C223.493 291.834 214.317 301.498 204.995 310.04ZM297.731 345.133C281.185 354.699 254.999 348.159 225.934 327.196C223.957 325.78 221.98 324.292 220.003 322.754C233.597 310.064 246.848 295.226 259.367 278.753C280.233 276.118 299.659 271.993 317.205 266.625C317.547 269.089 317.888 271.554 318.132 273.97C321.72 309.649 314.277 335.566 297.731 345.133ZM332.262 240.756C328.065 222.599 321.842 203.686 313.813 184.578C321.988 165.152 328.138 146.215 332.262 128.302C369.088 143.408 390.466 164.322 390.466 184.505C390.466 204.687 369.113 225.626 332.262 240.756Z\",\n                    fill: \"currentColor\"\n                })\n            ]\n        });\n    }\n    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(\"svg\", {\n        \"data-nextjs-call-stack-framework-icon\": \"next\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"20\",\n        height: \"20\",\n        viewBox: \"0 0 180 180\",\n        fill: \"none\",\n        children: [\n            /*#__PURE__*/ (0, _jsxruntime.jsx)(\"mask\", {\n                id: \"mask0_408_139\",\n                maskUnits: \"userSpaceOnUse\",\n                x: \"0\",\n                y: \"0\",\n                width: \"180\",\n                height: \"180\",\n                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(\"circle\", {\n                    cx: \"90\",\n                    cy: \"90\",\n                    r: \"90\",\n                    fill: \"black\"\n                })\n            }),\n            /*#__PURE__*/ (0, _jsxruntime.jsxs)(\"g\", {\n                mask: \"url(#mask0_408_139)\",\n                children: [\n                    /*#__PURE__*/ (0, _jsxruntime.jsx)(\"circle\", {\n                        cx: \"90\",\n                        cy: \"90\",\n                        r: \"87\",\n                        fill: \"black\",\n                        stroke: \"white\",\n                        strokeWidth: \"6\"\n                    }),\n                    /*#__PURE__*/ (0, _jsxruntime.jsx)(\"path\", {\n                        d: \"M149.508 157.52L69.142 54H54V125.97H66.1136V69.3836L139.999 164.845C143.333 162.614 146.509 160.165 149.508 157.52Z\",\n                        fill: \"url(#paint0_linear_408_139)\"\n                    }),\n                    /*#__PURE__*/ (0, _jsxruntime.jsx)(\"rect\", {\n                        x: \"115\",\n                        y: \"54\",\n                        width: \"12\",\n                        height: \"72\",\n                        fill: \"url(#paint1_linear_408_139)\"\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0, _jsxruntime.jsxs)(\"defs\", {\n                children: [\n                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(\"linearGradient\", {\n                        id: \"paint0_linear_408_139\",\n                        x1: \"109\",\n                        y1: \"116.5\",\n                        x2: \"144.5\",\n                        y2: \"160.5\",\n                        gradientUnits: \"userSpaceOnUse\",\n                        children: [\n                            /*#__PURE__*/ (0, _jsxruntime.jsx)(\"stop\", {\n                                stopColor: \"white\"\n                            }),\n                            /*#__PURE__*/ (0, _jsxruntime.jsx)(\"stop\", {\n                                offset: \"1\",\n                                stopColor: \"white\",\n                                stopOpacity: \"0\"\n                            })\n                        ]\n                    }),\n                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(\"linearGradient\", {\n                        id: \"paint1_linear_408_139\",\n                        x1: \"121\",\n                        y1: \"54\",\n                        x2: \"120.799\",\n                        y2: \"106.875\",\n                        gradientUnits: \"userSpaceOnUse\",\n                        children: [\n                            /*#__PURE__*/ (0, _jsxruntime.jsx)(\"stop\", {\n                                stopColor: \"white\"\n                            }),\n                            /*#__PURE__*/ (0, _jsxruntime.jsx)(\"stop\", {\n                                offset: \"1\",\n                                stopColor: \"white\",\n                                stopOpacity: \"0\"\n                            })\n                        ]\n                    })\n                ]\n            })\n        ]\n    });\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=FrameworkIcon.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6866\n");

/***/ })

};
;